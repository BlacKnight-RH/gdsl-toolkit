/*
* generated by Xtext
*/
package gdsl.plugin.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import gdsl.plugin.services.GDSLGrammarAccess;

public class GDSLParser extends AbstractContentAssistParser {
	
	@Inject
	private GDSLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected gdsl.plugin.ui.contentassist.antlr.internal.InternalGDSLParser createParser() {
		gdsl.plugin.ui.contentassist.antlr.internal.InternalGDSLParser result = new gdsl.plugin.ui.contentassist.antlr.internal.InternalGDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDeclAccess().getAlternatives(), "rule__Decl__Alternatives");
					put(grammarAccess.getDeclTypeAccess().getNameAlternatives_1_0(), "rule__DeclType__NameAlternatives_1_0");
					put(grammarAccess.getDeclTypeAccess().getAlternatives_2(), "rule__DeclType__Alternatives_2");
					put(grammarAccess.getDeclTypeAccess().getAlternatives_2_0_1(), "rule__DeclType__Alternatives_2_0_1");
					put(grammarAccess.getDeclValAccess().getAlternatives_1(), "rule__DeclVal__Alternatives_1");
					put(grammarAccess.getDeclValAccess().getAlternatives_1_0_0_0(), "rule__DeclVal__Alternatives_1_0_0_0");
					put(grammarAccess.getDeclValAccess().getNameAlternatives_1_0_0_0_0_0(), "rule__DeclVal__NameAlternatives_1_0_0_0_0_0");
					put(grammarAccess.getDeclValAccess().getAttrAlternatives_1_0_0_1_0(), "rule__DeclVal__AttrAlternatives_1_0_0_1_0");
					put(grammarAccess.getDeclValAccess().getAttrAlternatives_1_1_0_1_0(), "rule__DeclVal__AttrAlternatives_1_1_0_1_0");
					put(grammarAccess.getDeclValAccess().getNameAlternatives_1_2_0_0(), "rule__DeclVal__NameAlternatives_1_2_0_0");
					put(grammarAccess.getDeclValAccess().getAlternatives_1_2_4(), "rule__DeclVal__Alternatives_1_2_4");
					put(grammarAccess.getTyVarAccess().getNameAlternatives_0(), "rule__TyVar__NameAlternatives_0");
					put(grammarAccess.getTyAccess().getAlternatives(), "rule__Ty__Alternatives");
					put(grammarAccess.getTyAccess().getAlternatives_2_0(), "rule__Ty__Alternatives_2_0");
					put(grammarAccess.getTyAccess().getTypeAlternatives_2_0_1_0(), "rule__Ty__TypeAlternatives_2_0_1_0");
					put(grammarAccess.getTyBindAccess().getNameAlternatives_0_0(), "rule__TyBind__NameAlternatives_0_0");
					put(grammarAccess.getTyElementAccess().getNameAlternatives_0_0(), "rule__TyElement__NameAlternatives_0_0");
					put(grammarAccess.getExpAccess().getAlternatives(), "rule__Exp__Alternatives");
					put(grammarAccess.getCaseExpAccess().getAlternatives(), "rule__CaseExp__Alternatives");
					put(grammarAccess.getClosedExpAccess().getAlternatives(), "rule__ClosedExp__Alternatives");
					put(grammarAccess.getMonadicExpAccess().getAlternatives(), "rule__MonadicExp__Alternatives");
					put(grammarAccess.getMonadicExpAccess().getNameAlternatives_1_0_0(), "rule__MonadicExp__NameAlternatives_1_0_0");
					put(grammarAccess.getAExpAccess().getSignAlternatives_1_0_0(), "rule__AExp__SignAlternatives_1_0_0");
					put(grammarAccess.getMExpAccess().getSymbolAlternatives_1_0_0(), "rule__MExp__SymbolAlternatives_1_0_0");
					put(grammarAccess.getApplyExpAccess().getAlternatives(), "rule__ApplyExp__Alternatives");
					put(grammarAccess.getAtomicExpAccess().getAlternatives(), "rule__AtomicExp__Alternatives");
					put(grammarAccess.getAtomicExpAccess().getNameAlternatives_2_0_0(), "rule__AtomicExp__NameAlternatives_2_0_0");
					put(grammarAccess.getAtomicExpAccess().getIdAlternatives_2_1_1_0(), "rule__AtomicExp__IdAlternatives_2_1_1_0");
					put(grammarAccess.getAtomicExpAccess().getNameAlternatives_4_1_0(), "rule__AtomicExp__NameAlternatives_4_1_0");
					put(grammarAccess.getAtomicExpAccess().getIdAlternatives_5_3_1_0(), "rule__AtomicExp__IdAlternatives_5_3_1_0");
					put(grammarAccess.getAtomicExpAccess().getIdAlternatives_6_2_0_0(), "rule__AtomicExp__IdAlternatives_6_2_0_0");
					put(grammarAccess.getAtomicExpAccess().getIdAlternatives_6_2_3_1_0(), "rule__AtomicExp__IdAlternatives_6_2_3_1_0");
					put(grammarAccess.getFieldAccess().getAlternatives(), "rule__Field__Alternatives");
					put(grammarAccess.getFieldAccess().getNameAlternatives_0_0_0(), "rule__Field__NameAlternatives_0_0_0");
					put(grammarAccess.getFieldAccess().getNameAlternatives_1_1_0(), "rule__Field__NameAlternatives_1_1_0");
					put(grammarAccess.getValueDeclAccess().getAlternatives_1(), "rule__ValueDecl__Alternatives_1");
					put(grammarAccess.getValueDeclAccess().getNameAlternatives_1_0_0(), "rule__ValueDecl__NameAlternatives_1_0_0");
					put(grammarAccess.getValueDeclAccess().getIdsAlternatives_2_0(), "rule__ValueDecl__IdsAlternatives_2_0");
					put(grammarAccess.getPATAccess().getAlternatives(), "rule__PAT__Alternatives");
					put(grammarAccess.getPATAccess().getIdAlternatives_2_0_0_0(), "rule__PAT__IdAlternatives_2_0_0_0");
					put(grammarAccess.getCONSAccess().getConNameAlternatives_0(), "rule__CONS__ConNameAlternatives_0");
					put(grammarAccess.getDECODEPATAccess().getAlternatives(), "rule__DECODEPAT__Alternatives");
					put(grammarAccess.getTOKPATAccess().getAlternatives(), "rule__TOKPAT__Alternatives");
					put(grammarAccess.getTOKPATAccess().getAlternatives_1(), "rule__TOKPAT__Alternatives_1");
					put(grammarAccess.getBITPATAccess().getAlternatives(), "rule__BITPAT__Alternatives");
					put(grammarAccess.getBITPATAccess().getAlternatives_1_0(), "rule__BITPAT__Alternatives_1_0");
					put(grammarAccess.getBITPATORINTAccess().getAlternatives(), "rule__BITPATORINT__Alternatives");
					put(grammarAccess.getLITAccess().getAlternatives(), "rule__LIT__Alternatives");
					put(grammarAccess.getMIDAccess().getAlternatives(), "rule__MID__Alternatives");
					put(grammarAccess.getSYMAccess().getAlternatives(), "rule__SYM__Alternatives");
					put(grammarAccess.getINTEGERAccess().getAlternatives(), "rule__INTEGER__Alternatives");
					put(grammarAccess.getPOSINTAccess().getAlternatives(), "rule__POSINT__Alternatives");
					put(grammarAccess.getBINARYAccess().getAlternatives(), "rule__BINARY__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getModelAccess().getGroup_1(), "rule__Model__Group_1__0");
					put(grammarAccess.getDeclExportAccess().getGroup(), "rule__DeclExport__Group__0");
					put(grammarAccess.getDeclTypeAccess().getGroup(), "rule__DeclType__Group__0");
					put(grammarAccess.getDeclTypeAccess().getGroup_2_0(), "rule__DeclType__Group_2_0__0");
					put(grammarAccess.getDeclTypeAccess().getGroup_2_0_1_0(), "rule__DeclType__Group_2_0_1_0__0");
					put(grammarAccess.getDeclTypeAccess().getGroup_2_0_1_0_0(), "rule__DeclType__Group_2_0_1_0_0__0");
					put(grammarAccess.getDeclTypeAccess().getGroup_2_0_1_0_0_1(), "rule__DeclType__Group_2_0_1_0_0_1__0");
					put(grammarAccess.getDeclTypeAccess().getGroup_2_1(), "rule__DeclType__Group_2_1__0");
					put(grammarAccess.getDeclTypeAccess().getGroup_2_1_2(), "rule__DeclType__Group_2_1_2__0");
					put(grammarAccess.getDeclTypeAccess().getGroup_2_1_2_1(), "rule__DeclType__Group_2_1_2_1__0");
					put(grammarAccess.getDeclValAccess().getGroup(), "rule__DeclVal__Group__0");
					put(grammarAccess.getDeclValAccess().getGroup_1_0(), "rule__DeclVal__Group_1_0__0");
					put(grammarAccess.getDeclValAccess().getGroup_1_0_0(), "rule__DeclVal__Group_1_0_0__0");
					put(grammarAccess.getDeclValAccess().getGroup_1_1(), "rule__DeclVal__Group_1_1__0");
					put(grammarAccess.getDeclValAccess().getGroup_1_1_0(), "rule__DeclVal__Group_1_1_0__0");
					put(grammarAccess.getDeclValAccess().getGroup_1_2(), "rule__DeclVal__Group_1_2__0");
					put(grammarAccess.getDeclValAccess().getGroup_1_2_4_0(), "rule__DeclVal__Group_1_2_4_0__0");
					put(grammarAccess.getDeclValAccess().getGroup_1_2_4_1(), "rule__DeclVal__Group_1_2_4_1__0");
					put(grammarAccess.getTyVarsAccess().getGroup(), "rule__TyVars__Group__0");
					put(grammarAccess.getTyVarsAccess().getGroup_2(), "rule__TyVars__Group_2__0");
					put(grammarAccess.getConDeclAccess().getGroup(), "rule__ConDecl__Group__0");
					put(grammarAccess.getConDeclAccess().getGroup_1(), "rule__ConDecl__Group_1__0");
					put(grammarAccess.getTyAccess().getGroup_1(), "rule__Ty__Group_1__0");
					put(grammarAccess.getTyAccess().getGroup_2(), "rule__Ty__Group_2__0");
					put(grammarAccess.getTyAccess().getGroup_2_1(), "rule__Ty__Group_2_1__0");
					put(grammarAccess.getTyAccess().getGroup_2_1_2(), "rule__Ty__Group_2_1_2__0");
					put(grammarAccess.getTyAccess().getGroup_3(), "rule__Ty__Group_3__0");
					put(grammarAccess.getTyAccess().getGroup_3_2(), "rule__Ty__Group_3_2__0");
					put(grammarAccess.getTyAccess().getGroup_3_2_1(), "rule__Ty__Group_3_2_1__0");
					put(grammarAccess.getTyAccess().getGroup_4(), "rule__Ty__Group_4__0");
					put(grammarAccess.getTyAccess().getGroup_4_2(), "rule__Ty__Group_4_2__0");
					put(grammarAccess.getTyAccess().getGroup_5(), "rule__Ty__Group_5__0");
					put(grammarAccess.getTyAccess().getGroup_6(), "rule__Ty__Group_6__0");
					put(grammarAccess.getTyBindAccess().getGroup(), "rule__TyBind__Group__0");
					put(grammarAccess.getTyBindAccess().getGroup_1(), "rule__TyBind__Group_1__0");
					put(grammarAccess.getTyElementAccess().getGroup(), "rule__TyElement__Group__0");
					put(grammarAccess.getExpAccess().getGroup_1(), "rule__Exp__Group_1__0");
					put(grammarAccess.getCaseExpAccess().getGroup_1(), "rule__CaseExp__Group_1__0");
					put(grammarAccess.getCaseExpAccess().getGroup_1_3(), "rule__CaseExp__Group_1_3__0");
					put(grammarAccess.getCaseExpAccess().getGroup_1_3_3(), "rule__CaseExp__Group_1_3_3__0");
					put(grammarAccess.getClosedExpAccess().getGroup_1(), "rule__ClosedExp__Group_1__0");
					put(grammarAccess.getClosedExpAccess().getGroup_2(), "rule__ClosedExp__Group_2__0");
					put(grammarAccess.getClosedExpAccess().getGroup_2_2(), "rule__ClosedExp__Group_2_2__0");
					put(grammarAccess.getMonadicExpAccess().getGroup_1(), "rule__MonadicExp__Group_1__0");
					put(grammarAccess.getOrElseExpAccess().getGroup(), "rule__OrElseExp__Group__0");
					put(grammarAccess.getOrElseExpAccess().getGroup_1(), "rule__OrElseExp__Group_1__0");
					put(grammarAccess.getAndAlsoExpAccess().getGroup(), "rule__AndAlsoExp__Group__0");
					put(grammarAccess.getAndAlsoExpAccess().getGroup_1(), "rule__AndAlsoExp__Group_1__0");
					put(grammarAccess.getRExpAccess().getGroup(), "rule__RExp__Group__0");
					put(grammarAccess.getRExpAccess().getGroup_1(), "rule__RExp__Group_1__0");
					put(grammarAccess.getAExpAccess().getGroup(), "rule__AExp__Group__0");
					put(grammarAccess.getAExpAccess().getGroup_1(), "rule__AExp__Group_1__0");
					put(grammarAccess.getMExpAccess().getGroup(), "rule__MExp__Group__0");
					put(grammarAccess.getMExpAccess().getGroup_1(), "rule__MExp__Group_1__0");
					put(grammarAccess.getSelectExpAccess().getGroup(), "rule__SelectExp__Group__0");
					put(grammarAccess.getSelectExpAccess().getGroup_1(), "rule__SelectExp__Group_1__0");
					put(grammarAccess.getApplyExpAccess().getGroup_0(), "rule__ApplyExp__Group_0__0");
					put(grammarAccess.getApplyExpAccess().getGroup_1(), "rule__ApplyExp__Group_1__0");
					put(grammarAccess.getAtomicExpAccess().getGroup_2(), "rule__AtomicExp__Group_2__0");
					put(grammarAccess.getAtomicExpAccess().getGroup_2_1(), "rule__AtomicExp__Group_2_1__0");
					put(grammarAccess.getAtomicExpAccess().getGroup_3(), "rule__AtomicExp__Group_3__0");
					put(grammarAccess.getAtomicExpAccess().getGroup_3_3(), "rule__AtomicExp__Group_3_3__0");
					put(grammarAccess.getAtomicExpAccess().getGroup_4(), "rule__AtomicExp__Group_4__0");
					put(grammarAccess.getAtomicExpAccess().getGroup_5(), "rule__AtomicExp__Group_5__0");
					put(grammarAccess.getAtomicExpAccess().getGroup_5_3(), "rule__AtomicExp__Group_5_3__0");
					put(grammarAccess.getAtomicExpAccess().getGroup_6(), "rule__AtomicExp__Group_6__0");
					put(grammarAccess.getAtomicExpAccess().getGroup_6_2(), "rule__AtomicExp__Group_6_2__0");
					put(grammarAccess.getAtomicExpAccess().getGroup_6_2_3(), "rule__AtomicExp__Group_6_2_3__0");
					put(grammarAccess.getAtomicExpAccess().getGroup_7(), "rule__AtomicExp__Group_7__0");
					put(grammarAccess.getFieldAccess().getGroup_0(), "rule__Field__Group_0__0");
					put(grammarAccess.getFieldAccess().getGroup_1(), "rule__Field__Group_1__0");
					put(grammarAccess.getValueDeclAccess().getGroup(), "rule__ValueDecl__Group__0");
					put(grammarAccess.getPATAccess().getGroup_1(), "rule__PAT__Group_1__0");
					put(grammarAccess.getPATAccess().getGroup_2(), "rule__PAT__Group_2__0");
					put(grammarAccess.getPATAccess().getGroup_2_0(), "rule__PAT__Group_2_0__0");
					put(grammarAccess.getPATAccess().getGroup_3(), "rule__PAT__Group_3__0");
					put(grammarAccess.getDECODEPATAccess().getGroup_0(), "rule__DECODEPAT__Group_0__0");
					put(grammarAccess.getBITPATAccess().getGroup_1(), "rule__BITPAT__Group_1__0");
					put(grammarAccess.getBITPATORINTAccess().getGroup_0(), "rule__BITPATORINT__Group_0__0");
					put(grammarAccess.getBITPATORINTAccess().getGroup_1(), "rule__BITPATORINT__Group_1__0");
					put(grammarAccess.getLITAccess().getGroup_1(), "rule__LIT__Group_1__0");
					put(grammarAccess.getModelAccess().getDeclAssignment_0(), "rule__Model__DeclAssignment_0");
					put(grammarAccess.getModelAccess().getDeclAssignment_1_1(), "rule__Model__DeclAssignment_1_1");
					put(grammarAccess.getDeclExportAccess().getNameAssignment_1(), "rule__DeclExport__NameAssignment_1");
					put(grammarAccess.getDeclExportAccess().getTyVarsAssignment_2(), "rule__DeclExport__TyVarsAssignment_2");
					put(grammarAccess.getDeclExportAccess().getTypeAssignment_4(), "rule__DeclExport__TypeAssignment_4");
					put(grammarAccess.getDeclTypeAccess().getNameAssignment_1(), "rule__DeclType__NameAssignment_1");
					put(grammarAccess.getDeclTypeAccess().getConDeclAssignment_2_0_1_0_0_0(), "rule__DeclType__ConDeclAssignment_2_0_1_0_0_0");
					put(grammarAccess.getDeclTypeAccess().getConDeclAssignment_2_0_1_0_0_1_1(), "rule__DeclType__ConDeclAssignment_2_0_1_0_0_1_1");
					put(grammarAccess.getDeclTypeAccess().getValueAssignment_2_0_1_1(), "rule__DeclType__ValueAssignment_2_0_1_1");
					put(grammarAccess.getDeclTypeAccess().getTyVarsAssignment_2_1_0(), "rule__DeclType__TyVarsAssignment_2_1_0");
					put(grammarAccess.getDeclTypeAccess().getConDeclAssignment_2_1_2_0(), "rule__DeclType__ConDeclAssignment_2_1_2_0");
					put(grammarAccess.getDeclTypeAccess().getConDeclAssignment_2_1_2_1_1(), "rule__DeclType__ConDeclAssignment_2_1_2_1_1");
					put(grammarAccess.getDeclValAccess().getNameAssignment_1_0_0_0_0(), "rule__DeclVal__NameAssignment_1_0_0_0_0");
					put(grammarAccess.getDeclValAccess().getNameAssignment_1_0_0_0_1(), "rule__DeclVal__NameAssignment_1_0_0_0_1");
					put(grammarAccess.getDeclValAccess().getAttrAssignment_1_0_0_1(), "rule__DeclVal__AttrAssignment_1_0_0_1");
					put(grammarAccess.getDeclValAccess().getExpAssignment_1_0_0_3(), "rule__DeclVal__ExpAssignment_1_0_0_3");
					put(grammarAccess.getDeclValAccess().getMidAssignment_1_1_0_0(), "rule__DeclVal__MidAssignment_1_1_0_0");
					put(grammarAccess.getDeclValAccess().getAttrAssignment_1_1_0_1(), "rule__DeclVal__AttrAssignment_1_1_0_1");
					put(grammarAccess.getDeclValAccess().getExpAssignment_1_1_2(), "rule__DeclVal__ExpAssignment_1_1_2");
					put(grammarAccess.getDeclValAccess().getNameAssignment_1_2_0(), "rule__DeclVal__NameAssignment_1_2_0");
					put(grammarAccess.getDeclValAccess().getDecPatAssignment_1_2_2(), "rule__DeclVal__DecPatAssignment_1_2_2");
					put(grammarAccess.getDeclValAccess().getExpAssignment_1_2_4_0_1(), "rule__DeclVal__ExpAssignment_1_2_4_0_1");
					put(grammarAccess.getDeclValAccess().getExpsAssignment_1_2_4_1_1(), "rule__DeclVal__ExpsAssignment_1_2_4_1_1");
					put(grammarAccess.getDeclValAccess().getExpsAssignment_1_2_4_1_3(), "rule__DeclVal__ExpsAssignment_1_2_4_1_3");
					put(grammarAccess.getTyVarsAccess().getAttrAssignment_1(), "rule__TyVars__AttrAssignment_1");
					put(grammarAccess.getTyVarsAccess().getAttrAssignment_2_1(), "rule__TyVars__AttrAssignment_2_1");
					put(grammarAccess.getTyVarAccess().getNameAssignment(), "rule__TyVar__NameAssignment");
					put(grammarAccess.getConDeclAccess().getNameAssignment_0(), "rule__ConDecl__NameAssignment_0");
					put(grammarAccess.getConDeclAccess().getTyAssignment_1_1(), "rule__ConDecl__TyAssignment_1_1");
					put(grammarAccess.getTyAccess().getValueAssignment_0(), "rule__Ty__ValueAssignment_0");
					put(grammarAccess.getTyAccess().getValueAssignment_1_1(), "rule__Ty__ValueAssignment_1_1");
					put(grammarAccess.getTyAccess().getTypeRefAssignment_2_0_0(), "rule__Ty__TypeRefAssignment_2_0_0");
					put(grammarAccess.getTyAccess().getTypeAssignment_2_0_1(), "rule__Ty__TypeAssignment_2_0_1");
					put(grammarAccess.getTyAccess().getTyBindAssignment_2_1_1(), "rule__Ty__TyBindAssignment_2_1_1");
					put(grammarAccess.getTyAccess().getTyBindAssignment_2_1_2_1(), "rule__Ty__TyBindAssignment_2_1_2_1");
					put(grammarAccess.getTyAccess().getElementsAssignment_3_2_0(), "rule__Ty__ElementsAssignment_3_2_0");
					put(grammarAccess.getTyAccess().getElementsAssignment_3_2_1_1(), "rule__Ty__ElementsAssignment_3_2_1_1");
					put(grammarAccess.getTyAccess().getParamAssignment_4_1(), "rule__Ty__ParamAssignment_4_1");
					put(grammarAccess.getTyAccess().getParamAssignment_4_2_1(), "rule__Ty__ParamAssignment_4_2_1");
					put(grammarAccess.getTyAccess().getResTypeAssignment_4_5(), "rule__Ty__ResTypeAssignment_4_5");
					put(grammarAccess.getTyAccess().getRAssignment_6_1(), "rule__Ty__RAssignment_6_1");
					put(grammarAccess.getTyAccess().getInAssignment_6_3(), "rule__Ty__InAssignment_6_3");
					put(grammarAccess.getTyAccess().getOutAssignment_6_5(), "rule__Ty__OutAssignment_6_5");
					put(grammarAccess.getTyBindAccess().getNameAssignment_0(), "rule__TyBind__NameAssignment_0");
					put(grammarAccess.getTyBindAccess().getValueAssignment_1_1(), "rule__TyBind__ValueAssignment_1_1");
					put(grammarAccess.getTyElementAccess().getNameAssignment_0(), "rule__TyElement__NameAssignment_0");
					put(grammarAccess.getTyElementAccess().getValueAssignment_2(), "rule__TyElement__ValueAssignment_2");
					put(grammarAccess.getExpAccess().getNameAssignment_0(), "rule__Exp__NameAssignment_0");
					put(grammarAccess.getExpAccess().getMidAssignment_1_0(), "rule__Exp__MidAssignment_1_0");
					put(grammarAccess.getExpAccess().getCaseExpsAssignment_1_1(), "rule__Exp__CaseExpsAssignment_1_1");
					put(grammarAccess.getCaseExpAccess().getNameAssignment_1_0(), "rule__CaseExp__NameAssignment_1_0");
					put(grammarAccess.getCaseExpAccess().getClosedExpAssignment_1_1(), "rule__CaseExp__ClosedExpAssignment_1_1");
					put(grammarAccess.getCaseExpAccess().getPatAssignment_1_3_0(), "rule__CaseExp__PatAssignment_1_3_0");
					put(grammarAccess.getCaseExpAccess().getExpAssignment_1_3_2(), "rule__CaseExp__ExpAssignment_1_3_2");
					put(grammarAccess.getCaseExpAccess().getPatAssignment_1_3_3_1(), "rule__CaseExp__PatAssignment_1_3_3_1");
					put(grammarAccess.getCaseExpAccess().getExpAssignment_1_3_3_3(), "rule__CaseExp__ExpAssignment_1_3_3_3");
					put(grammarAccess.getClosedExpAccess().getNameAssignment_1_0(), "rule__ClosedExp__NameAssignment_1_0");
					put(grammarAccess.getClosedExpAccess().getIfCaseExpAssignment_1_1(), "rule__ClosedExp__IfCaseExpAssignment_1_1");
					put(grammarAccess.getClosedExpAccess().getThenCaseExpAssignment_1_3(), "rule__ClosedExp__ThenCaseExpAssignment_1_3");
					put(grammarAccess.getClosedExpAccess().getElseCaseExpAssignment_1_5(), "rule__ClosedExp__ElseCaseExpAssignment_1_5");
					put(grammarAccess.getClosedExpAccess().getNameAssignment_2_0(), "rule__ClosedExp__NameAssignment_2_0");
					put(grammarAccess.getClosedExpAccess().getDoExpAssignment_2_1(), "rule__ClosedExp__DoExpAssignment_2_1");
					put(grammarAccess.getClosedExpAccess().getDoExpAssignment_2_2_1(), "rule__ClosedExp__DoExpAssignment_2_2_1");
					put(grammarAccess.getMonadicExpAccess().getExpAssignment_0(), "rule__MonadicExp__ExpAssignment_0");
					put(grammarAccess.getMonadicExpAccess().getNameAssignment_1_0(), "rule__MonadicExp__NameAssignment_1_0");
					put(grammarAccess.getMonadicExpAccess().getExpAssignment_1_2(), "rule__MonadicExp__ExpAssignment_1_2");
					put(grammarAccess.getOrElseExpAccess().getNameAssignment_1_1(), "rule__OrElseExp__NameAssignment_1_1");
					put(grammarAccess.getOrElseExpAccess().getRightAssignment_1_2(), "rule__OrElseExp__RightAssignment_1_2");
					put(grammarAccess.getAndAlsoExpAccess().getNameAssignment_1_1(), "rule__AndAlsoExp__NameAssignment_1_1");
					put(grammarAccess.getAndAlsoExpAccess().getRightAssignment_1_2(), "rule__AndAlsoExp__RightAssignment_1_2");
					put(grammarAccess.getRExpAccess().getSymAssignment_1_0(), "rule__RExp__SymAssignment_1_0");
					put(grammarAccess.getRExpAccess().getAexpsAssignment_1_1(), "rule__RExp__AexpsAssignment_1_1");
					put(grammarAccess.getAExpAccess().getSignAssignment_1_0(), "rule__AExp__SignAssignment_1_0");
					put(grammarAccess.getAExpAccess().getMexpsAssignment_1_1(), "rule__AExp__MexpsAssignment_1_1");
					put(grammarAccess.getMExpAccess().getSymbolAssignment_1_0(), "rule__MExp__SymbolAssignment_1_0");
					put(grammarAccess.getMExpAccess().getApplyexpsAssignment_1_1(), "rule__MExp__ApplyexpsAssignment_1_1");
					put(grammarAccess.getSelectExpAccess().getApplyexpsAssignment_1_1(), "rule__SelectExp__ApplyexpsAssignment_1_1");
					put(grammarAccess.getApplyExpAccess().getAtomicExpAssignment_1_0(), "rule__ApplyExp__AtomicExpAssignment_1_0");
					put(grammarAccess.getAtomicExpAccess().getNameAssignment_0(), "rule__AtomicExp__NameAssignment_0");
					put(grammarAccess.getAtomicExpAccess().getNameAssignment_1(), "rule__AtomicExp__NameAssignment_1");
					put(grammarAccess.getAtomicExpAccess().getNameAssignment_2_0(), "rule__AtomicExp__NameAssignment_2_0");
					put(grammarAccess.getAtomicExpAccess().getIdAssignment_2_1_1(), "rule__AtomicExp__IdAssignment_2_1_1");
					put(grammarAccess.getAtomicExpAccess().getNameAssignment_3_0(), "rule__AtomicExp__NameAssignment_3_0");
					put(grammarAccess.getAtomicExpAccess().getFieldsAssignment_3_2(), "rule__AtomicExp__FieldsAssignment_3_2");
					put(grammarAccess.getAtomicExpAccess().getFieldsAssignment_3_3_1(), "rule__AtomicExp__FieldsAssignment_3_3_1");
					put(grammarAccess.getAtomicExpAccess().getNameAssignment_4_1(), "rule__AtomicExp__NameAssignment_4_1");
					put(grammarAccess.getAtomicExpAccess().getExprAssignment_5_1(), "rule__AtomicExp__ExprAssignment_5_1");
					put(grammarAccess.getAtomicExpAccess().getIdAssignment_5_3_1(), "rule__AtomicExp__IdAssignment_5_3_1");
					put(grammarAccess.getAtomicExpAccess().getIdAssignment_6_2_0(), "rule__AtomicExp__IdAssignment_6_2_0");
					put(grammarAccess.getAtomicExpAccess().getExpsAssignment_6_2_2(), "rule__AtomicExp__ExpsAssignment_6_2_2");
					put(grammarAccess.getAtomicExpAccess().getIdAssignment_6_2_3_1(), "rule__AtomicExp__IdAssignment_6_2_3_1");
					put(grammarAccess.getAtomicExpAccess().getExpsAssignment_6_2_3_3(), "rule__AtomicExp__ExpsAssignment_6_2_3_3");
					put(grammarAccess.getAtomicExpAccess().getNameAssignment_7_0(), "rule__AtomicExp__NameAssignment_7_0");
					put(grammarAccess.getAtomicExpAccess().getValDeclAssignment_7_1(), "rule__AtomicExp__ValDeclAssignment_7_1");
					put(grammarAccess.getAtomicExpAccess().getExprAssignment_7_3(), "rule__AtomicExp__ExprAssignment_7_3");
					put(grammarAccess.getFieldAccess().getNameAssignment_0_0(), "rule__Field__NameAssignment_0_0");
					put(grammarAccess.getFieldAccess().getExpAssignment_0_2(), "rule__Field__ExpAssignment_0_2");
					put(grammarAccess.getFieldAccess().getNameAssignment_1_1(), "rule__Field__NameAssignment_1_1");
					put(grammarAccess.getValueDeclAccess().getNameAssignment_1_0(), "rule__ValueDecl__NameAssignment_1_0");
					put(grammarAccess.getValueDeclAccess().getNameAssignment_1_1(), "rule__ValueDecl__NameAssignment_1_1");
					put(grammarAccess.getValueDeclAccess().getIdsAssignment_2(), "rule__ValueDecl__IdsAssignment_2");
					put(grammarAccess.getValueDeclAccess().getExpAssignment_4(), "rule__ValueDecl__ExpAssignment_4");
					put(grammarAccess.getPATAccess().getUscoreAssignment_0(), "rule__PAT__UscoreAssignment_0");
					put(grammarAccess.getPATAccess().getIntAssignment_1_0(), "rule__PAT__IntAssignment_1_0");
					put(grammarAccess.getPATAccess().getIdAssignment_2_0_0(), "rule__PAT__IdAssignment_2_0_0");
					put(grammarAccess.getPATAccess().getPatAssignment_2_0_1(), "rule__PAT__PatAssignment_2_0_1");
					put(grammarAccess.getPATAccess().getBitpatAssignment_3_1(), "rule__PAT__BitpatAssignment_3_1");
					put(grammarAccess.getCONSAccess().getConNameAssignment(), "rule__CONS__ConNameAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			gdsl.plugin.ui.contentassist.antlr.internal.InternalGDSLParser typedParser = (gdsl.plugin.ui.contentassist.antlr.internal.InternalGDSLParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public GDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(GDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
