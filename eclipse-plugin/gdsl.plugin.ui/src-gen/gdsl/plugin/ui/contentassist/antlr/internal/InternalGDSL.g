/*
* generated by Xtext
*/
grammar InternalGDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package gdsl.plugin.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package gdsl.plugin.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import gdsl.plugin.services.GDSLGrammarAccess;

}

@parser::members {
 
 	private GDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecl
entryRuleDecl 
:
{ before(grammarAccess.getDeclRule()); }
	 ruleDecl
{ after(grammarAccess.getDeclRule()); } 
	 EOF 
;

// Rule Decl
ruleDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclAccess().getAlternatives()); }
(rule__Decl__Alternatives)
{ after(grammarAccess.getDeclAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclGranularity
entryRuleDeclGranularity 
:
{ before(grammarAccess.getDeclGranularityRule()); }
	 ruleDeclGranularity
{ after(grammarAccess.getDeclGranularityRule()); } 
	 EOF 
;

// Rule DeclGranularity
ruleDeclGranularity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclGranularityAccess().getGroup()); }
(rule__DeclGranularity__Group__0)
{ after(grammarAccess.getDeclGranularityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclExport
entryRuleDeclExport 
:
{ before(grammarAccess.getDeclExportRule()); }
	 ruleDeclExport
{ after(grammarAccess.getDeclExportRule()); } 
	 EOF 
;

// Rule DeclExport
ruleDeclExport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclExportAccess().getGroup()); }
(rule__DeclExport__Group__0)
{ after(grammarAccess.getDeclExportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclType
entryRuleDeclType 
:
{ before(grammarAccess.getDeclTypeRule()); }
	 ruleDeclType
{ after(grammarAccess.getDeclTypeRule()); } 
	 EOF 
;

// Rule DeclType
ruleDeclType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclTypeAccess().getGroup()); }
(rule__DeclType__Group__0)
{ after(grammarAccess.getDeclTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclVal
entryRuleDeclVal 
:
{ before(grammarAccess.getDeclValRule()); }
	 ruleDeclVal
{ after(grammarAccess.getDeclValRule()); } 
	 EOF 
;

// Rule DeclVal
ruleDeclVal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclValAccess().getAlternatives()); }
(rule__DeclVal__Alternatives)
{ after(grammarAccess.getDeclValAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExport
entryRuleExport 
:
{ before(grammarAccess.getExportRule()); }
	 ruleExport
{ after(grammarAccess.getExportRule()); } 
	 EOF 
;

// Rule Export
ruleExport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExportAccess().getGroup()); }
(rule__Export__Group__0)
{ after(grammarAccess.getExportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConDecls
entryRuleConDecls 
:
{ before(grammarAccess.getConDeclsRule()); }
	 ruleConDecls
{ after(grammarAccess.getConDeclsRule()); } 
	 EOF 
;

// Rule ConDecls
ruleConDecls
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConDeclsAccess().getGroup()); }
(rule__ConDecls__Group__0)
{ after(grammarAccess.getConDeclsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConDecl
entryRuleConDecl 
:
{ before(grammarAccess.getConDeclRule()); }
	 ruleConDecl
{ after(grammarAccess.getConDeclRule()); } 
	 EOF 
;

// Rule ConDecl
ruleConDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConDeclAccess().getGroup()); }
(rule__ConDecl__Group__0)
{ after(grammarAccess.getConDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTy
entryRuleTy 
:
{ before(grammarAccess.getTyRule()); }
	 ruleTy
{ after(grammarAccess.getTyRule()); } 
	 EOF 
;

// Rule Ty
ruleTy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTyAccess().getAlternatives()); }
(rule__Ty__Alternatives)
{ after(grammarAccess.getTyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTyElement
entryRuleTyElement 
:
{ before(grammarAccess.getTyElementRule()); }
	 ruleTyElement
{ after(grammarAccess.getTyElementRule()); } 
	 EOF 
;

// Rule TyElement
ruleTyElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTyElementAccess().getGroup()); }
(rule__TyElement__Group__0)
{ after(grammarAccess.getTyElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTyBind
entryRuleTyBind 
:
{ before(grammarAccess.getTyBindRule()); }
	 ruleTyBind
{ after(grammarAccess.getTyBindRule()); } 
	 EOF 
;

// Rule TyBind
ruleTyBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTyBindAccess().getGroup()); }
(rule__TyBind__Group__0)
{ after(grammarAccess.getTyBindAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecodePat
entryRuleDecodePat 
:
{ before(grammarAccess.getDecodePatRule()); }
	 ruleDecodePat
{ after(grammarAccess.getDecodePatRule()); } 
	 EOF 
;

// Rule DecodePat
ruleDecodePat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecodePatAccess().getAlternatives()); }
(rule__DecodePat__Alternatives)
{ after(grammarAccess.getDecodePatAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitPat
entryRuleBitPat 
:
{ before(grammarAccess.getBitPatRule()); }
	 ruleBitPat
{ after(grammarAccess.getBitPatRule()); } 
	 EOF 
;

// Rule BitPat
ruleBitPat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitPatAccess().getGroup()); }
(rule__BitPat__Group__0)
{ after(grammarAccess.getBitPatAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTokPat
entryRuleTokPat 
:
{ before(grammarAccess.getTokPatRule()); }
	 ruleTokPat
{ after(grammarAccess.getTokPatRule()); } 
	 EOF 
;

// Rule TokPat
ruleTokPat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTokPatAccess().getTokPatAssignment()); }
(rule__TokPat__TokPatAssignment)
{ after(grammarAccess.getTokPatAccess().getTokPatAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimBitPat
entryRulePrimBitPat 
:
{ before(grammarAccess.getPrimBitPatRule()); }
	 rulePrimBitPat
{ after(grammarAccess.getPrimBitPatRule()); } 
	 EOF 
;

// Rule PrimBitPat
rulePrimBitPat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimBitPatAccess().getAlternatives()); }
(rule__PrimBitPat__Alternatives)
{ after(grammarAccess.getPrimBitPatAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitPatOrInt
entryRuleBitPatOrInt 
:
{ before(grammarAccess.getBitPatOrIntRule()); }
	 ruleBitPatOrInt
{ after(grammarAccess.getBitPatOrIntRule()); } 
	 EOF 
;

// Rule BitPatOrInt
ruleBitPatOrInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitPatOrIntAccess().getAlternatives()); }
(rule__BitPatOrInt__Alternatives)
{ after(grammarAccess.getBitPatOrIntAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExp
entryRuleExp 
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpAccess().getExptodoKeyword()); }

	'exptodo' 

{ after(grammarAccess.getExpAccess().getExptodoKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInt
entryRuleInt 
:
{ before(grammarAccess.getIntRule()); }
	 ruleInt
{ after(grammarAccess.getIntRule()); } 
	 EOF 
;

// Rule Int
ruleInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntAccess().getAlternatives()); }
(rule__Int__Alternatives)
{ after(grammarAccess.getIntAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleName
entryRuleName 
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getIDParserRuleCall()); }
	ruleID
{ after(grammarAccess.getNameAccess().getIDParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConBind
entryRuleConBind 
:
{ before(grammarAccess.getConBindRule()); }
	 ruleConBind
{ after(grammarAccess.getConBindRule()); } 
	 EOF 
;

// Rule ConBind
ruleConBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConBindAccess().getCONSParserRuleCall()); }
	ruleCONS
{ after(grammarAccess.getConBindAccess().getCONSParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleQid
entryRuleQid 
:
{ before(grammarAccess.getQidRule()); }
	 ruleQid
{ after(grammarAccess.getQidRule()); } 
	 EOF 
;

// Rule Qid
ruleQid
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQidAccess().getIDParserRuleCall()); }
	ruleID
{ after(grammarAccess.getQidAccess().getIDParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePOSINT
entryRulePOSINT 
:
{ before(grammarAccess.getPOSINTRule()); }
	 rulePOSINT
{ after(grammarAccess.getPOSINTRule()); } 
	 EOF 
;

// Rule POSINT
rulePOSINT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPOSINTAccess().getAlternatives()); }
(rule__POSINT__Alternatives)
{ after(grammarAccess.getPOSINTAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNEGINT
entryRuleNEGINT 
:
{ before(grammarAccess.getNEGINTRule()); }
	 ruleNEGINT
{ after(grammarAccess.getNEGINTRule()); } 
	 EOF 
;

// Rule NEGINT
ruleNEGINT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNEGINTAccess().getGroup()); }
(rule__NEGINT__Group__0)
{ after(grammarAccess.getNEGINTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUM
entryRuleNUM 
:
{ before(grammarAccess.getNUMRule()); }
	 ruleNUM
{ after(grammarAccess.getNUMRule()); } 
	 EOF 
;

// Rule NUM
ruleNUM
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getNUMAccess().getDIGParserRuleCall()); }
(	ruleDIG)
{ after(grammarAccess.getNUMAccess().getDIGParserRuleCall()); }
)
(
{ before(grammarAccess.getNUMAccess().getDIGParserRuleCall()); }
(	ruleDIG)*
{ after(grammarAccess.getNUMAccess().getDIGParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHEXNUM
entryRuleHEXNUM 
:
{ before(grammarAccess.getHEXNUMRule()); }
	 ruleHEXNUM
{ after(grammarAccess.getHEXNUMRule()); } 
	 EOF 
;

// Rule HEXNUM
ruleHEXNUM
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHEXNUMAccess().getGroup()); }
(rule__HEXNUM__Group__0)
{ after(grammarAccess.getHEXNUMAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleBITSTR
entryRuleBITSTR 
:
{ before(grammarAccess.getBITSTRRule()); }
	 ruleBITSTR
{ after(grammarAccess.getBITSTRRule()); } 
	 EOF 
;

// Rule BITSTR
ruleBITSTR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getBITSTRAccess().getBINARYParserRuleCall()); }
(	ruleBINARY)
{ after(grammarAccess.getBITSTRAccess().getBINARYParserRuleCall()); }
)
(
{ before(grammarAccess.getBITSTRAccess().getBINARYParserRuleCall()); }
(	ruleBINARY)*
{ after(grammarAccess.getBITSTRAccess().getBINARYParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleCONS
entryRuleCONS 
:
{ before(grammarAccess.getCONSRule()); }
	 ruleCONS
{ after(grammarAccess.getCONSRule()); } 
	 EOF 
;

// Rule CONS
ruleCONS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCONSAccess().getGroup()); }
(rule__CONS__Group__0)
{ after(grammarAccess.getCONSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleID
entryRuleID 
:
{ before(grammarAccess.getIDRule()); }
	 ruleID
{ after(grammarAccess.getIDRule()); } 
	 EOF 
;

// Rule ID
ruleID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIDAccess().getGroup()); }
(rule__ID__Group__0)
{ after(grammarAccess.getIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHEXDIGIT
entryRuleHEXDIGIT 
:
{ before(grammarAccess.getHEXDIGITRule()); }
	 ruleHEXDIGIT
{ after(grammarAccess.getHEXDIGITRule()); } 
	 EOF 
;

// Rule HEXDIGIT
ruleHEXDIGIT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHEXDIGITAccess().getAlternatives()); }
(rule__HEXDIGIT__Alternatives)
{ after(grammarAccess.getHEXDIGITAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHEXCHAR
entryRuleHEXCHAR 
:
{ before(grammarAccess.getHEXCHARRule()); }
	 ruleHEXCHAR
{ after(grammarAccess.getHEXCHARRule()); } 
	 EOF 
;

// Rule HEXCHAR
ruleHEXCHAR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHEXCHARAccess().getAlternatives()); }
(rule__HEXCHAR__Alternatives)
{ after(grammarAccess.getHEXCHARAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleULETTER
entryRuleULETTER 
:
{ before(grammarAccess.getULETTERRule()); }
	 ruleULETTER
{ after(grammarAccess.getULETTERRule()); } 
	 EOF 
;

// Rule ULETTER
ruleULETTER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getULETTERAccess().getAlternatives()); }
(rule__ULETTER__Alternatives)
{ after(grammarAccess.getULETTERAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLETTER
entryRuleLETTER 
:
{ before(grammarAccess.getLETTERRule()); }
	 ruleLETTER
{ after(grammarAccess.getLETTERRule()); } 
	 EOF 
;

// Rule LETTER
ruleLETTER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLETTERAccess().getAlternatives()); }
(rule__LETTER__Alternatives)
{ after(grammarAccess.getLETTERAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIDCHAR
entryRuleIDCHAR 
:
{ before(grammarAccess.getIDCHARRule()); }
	 ruleIDCHAR
{ after(grammarAccess.getIDCHARRule()); } 
	 EOF 
;

// Rule IDCHAR
ruleIDCHAR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIDCHARAccess().getAlternatives()); }
(rule__IDCHAR__Alternatives)
{ after(grammarAccess.getIDCHARAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBINARY
entryRuleBINARY 
:
{ before(grammarAccess.getBINARYRule()); }
	 ruleBINARY
{ after(grammarAccess.getBINARYRule()); } 
	 EOF 
;

// Rule BINARY
ruleBINARY
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBINARYAccess().getAlternatives()); }
(rule__BINARY__Alternatives)
{ after(grammarAccess.getBINARYAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDIG
entryRuleDIG 
:
{ before(grammarAccess.getDIGRule()); }
	 ruleDIG
{ after(grammarAccess.getDIGRule()); } 
	 EOF 
;

// Rule DIG
ruleDIG
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDIGAccess().getAlternatives()); }
(rule__DIG__Alternatives)
{ after(grammarAccess.getDIGAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSYM
entryRuleSYM 
:
{ before(grammarAccess.getSYMRule()); }
	 ruleSYM
{ after(grammarAccess.getSYMRule()); } 
	 EOF 
;

// Rule SYM
ruleSYM
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSYMAccess().getAlternatives()); }
(rule__SYM__Alternatives)
{ after(grammarAccess.getSYMAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Decl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getDeclGranularityParserRuleCall_0()); }
	ruleDeclGranularity
{ after(grammarAccess.getDeclAccess().getDeclGranularityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclAccess().getDeclExportParserRuleCall_1()); }
	ruleDeclExport
{ after(grammarAccess.getDeclAccess().getDeclExportParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeclAccess().getDeclTypeParserRuleCall_2()); }
	ruleDeclType
{ after(grammarAccess.getDeclAccess().getDeclTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDeclAccess().getDeclValParserRuleCall_3()); }
	ruleDeclVal
{ after(grammarAccess.getDeclAccess().getDeclValParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAlternatives_2_0()); }
(rule__DeclType__Alternatives_2_0)
{ after(grammarAccess.getDeclTypeAccess().getAlternatives_2_0()); }
)

    |(
{ before(grammarAccess.getDeclTypeAccess().getGroup_2_1()); }
(rule__DeclType__Group_2_1__0)
{ after(grammarAccess.getDeclTypeAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getGroup_2_0_0()); }
(rule__DeclType__Group_2_0_0__0)
{ after(grammarAccess.getDeclTypeAccess().getGroup_2_0_0()); }
)

    |(
{ before(grammarAccess.getDeclTypeAccess().getValueAssignment_2_0_1()); }
(rule__DeclType__ValueAssignment_2_0_1)
{ after(grammarAccess.getDeclTypeAccess().getValueAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getGroup_0()); }
(rule__DeclVal__Group_0__0)
{ after(grammarAccess.getDeclValAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDeclValAccess().getGroup_1()); }
(rule__DeclVal__Group_1__0)
{ after(grammarAccess.getDeclValAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameAssignment_0_1_0()); }
(rule__DeclVal__NameAssignment_0_1_0)
{ after(grammarAccess.getDeclValAccess().getNameAssignment_0_1_0()); }
)

    |(
{ before(grammarAccess.getDeclValAccess().getNameAssignment_0_1_1()); }
(rule__DeclVal__NameAssignment_0_1_1)
{ after(grammarAccess.getDeclValAccess().getNameAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Alternatives_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getGroup_1_5_0()); }
(rule__DeclVal__Group_1_5_0__0)
{ after(grammarAccess.getDeclValAccess().getGroup_1_5_0()); }
)

    |(
(
{ before(grammarAccess.getDeclValAccess().getGroup_1_5_1()); }
(rule__DeclVal__Group_1_5_1__0)
{ after(grammarAccess.getDeclValAccess().getGroup_1_5_1()); }
)
(
{ before(grammarAccess.getDeclValAccess().getGroup_1_5_1()); }
(rule__DeclVal__Group_1_5_1__0)*
{ after(grammarAccess.getDeclValAccess().getGroup_1_5_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueAssignment_0()); }
(rule__Ty__ValueAssignment_0)
{ after(grammarAccess.getTyAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getTyAccess().getGroup_1()); }
(rule__Ty__Group_1__0)
{ after(grammarAccess.getTyAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTyAccess().getGroup_2()); }
(rule__Ty__Group_2__0)
{ after(grammarAccess.getTyAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTyAccess().getGroup_3()); }
(rule__Ty__Group_3__0)
{ after(grammarAccess.getTyAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecodePat__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecodePatAccess().getBitPatParserRuleCall_0()); }
	ruleBitPat
{ after(grammarAccess.getDecodePatAccess().getBitPatParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDecodePatAccess().getTokPatParserRuleCall_1()); }
	ruleTokPat
{ after(grammarAccess.getDecodePatAccess().getTokPatParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TokPat__TokPatAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokPatAccess().getTokPatIntParserRuleCall_0_0()); }
	ruleInt
{ after(grammarAccess.getTokPatAccess().getTokPatIntParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getTokPatAccess().getTokPatQidParserRuleCall_0_1()); }
	ruleQid
{ after(grammarAccess.getTokPatAccess().getTokPatQidParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimBitPat__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimBitPatAccess().getBITSTRParserRuleCall_0()); }
(	ruleBITSTR)
{ after(grammarAccess.getPrimBitPatAccess().getBITSTRParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimBitPatAccess().getGroup_1()); }
(rule__PrimBitPat__Group_1__0)
{ after(grammarAccess.getPrimBitPatAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitPatOrInt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatOrIntAccess().getGroup_0()); }
(rule__BitPatOrInt__Group_0__0)
{ after(grammarAccess.getBitPatOrIntAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBitPatOrIntAccess().getGroup_1()); }
(rule__BitPatOrInt__Group_1__0)
{ after(grammarAccess.getBitPatOrIntAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Int__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntAccess().getPOSINTParserRuleCall_0()); }
	rulePOSINT
{ after(grammarAccess.getIntAccess().getPOSINTParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntAccess().getNEGINTParserRuleCall_1()); }
	ruleNEGINT
{ after(grammarAccess.getIntAccess().getNEGINTParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__POSINT__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPOSINTAccess().getNUMParserRuleCall_0()); }
	ruleNUM
{ after(grammarAccess.getPOSINTAccess().getNUMParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPOSINTAccess().getHEXNUMParserRuleCall_1()); }
	ruleHEXNUM
{ after(grammarAccess.getPOSINTAccess().getHEXNUMParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HEXDIGIT__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHEXDIGITAccess().getDIGParserRuleCall_0()); }
	ruleDIG
{ after(grammarAccess.getHEXDIGITAccess().getDIGParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getHEXDIGITAccess().getHEXCHARParserRuleCall_1()); }
	ruleHEXCHAR
{ after(grammarAccess.getHEXDIGITAccess().getHEXCHARParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HEXCHAR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHEXCHARAccess().getLHEXCHARTerminalRuleCall_0()); }
	RULE_LHEXCHAR
{ after(grammarAccess.getHEXCHARAccess().getLHEXCHARTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getHEXCHARAccess().getUHEXCHARTerminalRuleCall_1()); }
	RULE_UHEXCHAR
{ after(grammarAccess.getHEXCHARAccess().getUHEXCHARTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ULETTER__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getULETTERAccess().getUHEXCHARTerminalRuleCall_0()); }
	RULE_UHEXCHAR
{ after(grammarAccess.getULETTERAccess().getUHEXCHARTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getULETTERAccess().getUNHEXCHARTerminalRuleCall_1()); }
	RULE_UNHEXCHAR
{ after(grammarAccess.getULETTERAccess().getUNHEXCHARTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LETTER__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLETTERAccess().getLHEXCHARTerminalRuleCall_0()); }
	RULE_LHEXCHAR
{ after(grammarAccess.getLETTERAccess().getLHEXCHARTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLETTERAccess().getLNHEXCHARTerminalRuleCall_1()); }
	RULE_LNHEXCHAR
{ after(grammarAccess.getLETTERAccess().getLNHEXCHARTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLETTERAccess().getULETTERParserRuleCall_2()); }
	ruleULETTER
{ after(grammarAccess.getLETTERAccess().getULETTERParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLETTERAccess().getSLASHTerminalRuleCall_3()); }
	RULE_SLASH
{ after(grammarAccess.getLETTERAccess().getSLASHTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IDCHAR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIDCHARAccess().getLETTERParserRuleCall_0()); }
	ruleLETTER
{ after(grammarAccess.getIDCHARAccess().getLETTERParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIDCHARAccess().getDIGParserRuleCall_1()); }
	ruleDIG
{ after(grammarAccess.getIDCHARAccess().getDIGParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIDCHARAccess().getCHARSYMTerminalRuleCall_2()); }
	RULE_CHARSYM
{ after(grammarAccess.getIDCHARAccess().getCHARSYMTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARYAccess().getBINDIGTerminalRuleCall_0()); }
	RULE_BINDIG
{ after(grammarAccess.getBINARYAccess().getBINDIGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBINARYAccess().getBSTerminalRuleCall_1()); }
	RULE_BS
{ after(grammarAccess.getBINARYAccess().getBSTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBINARYAccess().getDOTTerminalRuleCall_2()); }
	RULE_DOT
{ after(grammarAccess.getBINARYAccess().getDOTTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getBINARYAccess().getPIPETerminalRuleCall_3()); }
	RULE_PIPE
{ after(grammarAccess.getBINARYAccess().getPIPETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DIG__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDIGAccess().getBINDIGTerminalRuleCall_0()); }
	RULE_BINDIG
{ after(grammarAccess.getDIGAccess().getBINDIGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDIGAccess().getNBINDIGTerminalRuleCall_1()); }
	RULE_NBINDIG
{ after(grammarAccess.getDIGAccess().getNBINDIGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SYM__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSYMAccess().getBSTerminalRuleCall_0()); }
	RULE_BS
{ after(grammarAccess.getSYMAccess().getBSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSYMAccess().getSLASHTerminalRuleCall_1()); }
	RULE_SLASH
{ after(grammarAccess.getSYMAccess().getSLASHTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSYMAccess().getDOTTerminalRuleCall_2()); }
	RULE_DOT
{ after(grammarAccess.getSYMAccess().getDOTTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSYMAccess().getCHARSYMTerminalRuleCall_3()); }
	RULE_CHARSYM
{ after(grammarAccess.getSYMAccess().getCHARSYMTerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getSYMAccess().getOTHERSYMTerminalRuleCall_4()); }
	RULE_OTHERSYM
{ after(grammarAccess.getSYMAccess().getOTHERSYMTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclAssignment_0()); }
(rule__Model__DeclAssignment_0)
{ after(grammarAccess.getModelAccess().getDeclAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_1()); }
(rule__Model__Group_1__0)*
{ after(grammarAccess.getModelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Model__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__0__Impl
	rule__Model__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSemicolonKeyword_1_0()); }
(
	';' 
)?
{ after(grammarAccess.getModelAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclAssignment_1_1()); }
(rule__Model__DeclAssignment_1_1)
{ after(grammarAccess.getModelAccess().getDeclAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclGranularity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclGranularity__Group__0__Impl
	rule__DeclGranularity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getNameAssignment_0()); }
(rule__DeclGranularity__NameAssignment_0)
{ after(grammarAccess.getDeclGranularityAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclGranularity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclGranularity__Group__1__Impl
	rule__DeclGranularity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDeclGranularityAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclGranularity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclGranularity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getGranularityAssignment_2()); }
(rule__DeclGranularity__GranularityAssignment_2)
{ after(grammarAccess.getDeclGranularityAccess().getGranularityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeclExport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclExport__Group__0__Impl
	rule__DeclExport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getNameAssignment_0()); }
(rule__DeclExport__NameAssignment_0)
{ after(grammarAccess.getDeclExportAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclExport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclExport__Group__1__Impl
	rule__DeclExport__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDeclExportAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclExport__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclExport__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getExportsAssignment_2()); }
(rule__DeclExport__ExportsAssignment_2)*
{ after(grammarAccess.getDeclExportAccess().getExportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeclType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group__0__Impl
	rule__DeclType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getDeclTypeAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group__1__Impl
	rule__DeclType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getNameAssignment_1()); }
(rule__DeclType__NameAssignment_1)
{ after(grammarAccess.getDeclTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAlternatives_2()); }
(rule__DeclType__Alternatives_2)
{ after(grammarAccess.getDeclTypeAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeclType__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_0_0__0__Impl
	rule__DeclType__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_2_0_0_0()); }

	'=' 

{ after(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueAssignment_2_0_0_1()); }
(rule__DeclType__ValueAssignment_2_0_0_1)
{ after(grammarAccess.getDeclTypeAccess().getValueAssignment_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclType__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__0__Impl
	rule__DeclType__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getLeftSquareBracketKeyword_2_1_0()); }

	'[' 

{ after(grammarAccess.getDeclTypeAccess().getLeftSquareBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__1__Impl
	rule__DeclType__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_2_1_1()); }
(rule__DeclType__AttrNameAssignment_2_1_1)
{ after(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__2__Impl
	rule__DeclType__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getGroup_2_1_2()); }
(rule__DeclType__Group_2_1_2__0)*
{ after(grammarAccess.getDeclTypeAccess().getGroup_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__3__Impl
	rule__DeclType__Group_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getRightSquareBracketKeyword_2_1_3()); }

	']' 

{ after(grammarAccess.getDeclTypeAccess().getRightSquareBracketKeyword_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__4__Impl
	rule__DeclType__Group_2_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_2_1_4()); }

	'=' 

{ after(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_2_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueAssignment_2_1_5()); }
(rule__DeclType__ValueAssignment_2_1_5)
{ after(grammarAccess.getDeclTypeAccess().getValueAssignment_2_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DeclType__Group_2_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1_2__0__Impl
	rule__DeclType__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getCommaKeyword_2_1_2_0()); }

	',' 

{ after(grammarAccess.getDeclTypeAccess().getCommaKeyword_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_2_1_2_1()); }
(rule__DeclType__AttrNameAssignment_2_1_2_1)
{ after(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_2_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclVal__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_0__0__Impl
	rule__DeclVal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getValKeyword_0_0()); }

	'val' 

{ after(grammarAccess.getDeclValAccess().getValKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_0__1__Impl
	rule__DeclVal__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAlternatives_0_1()); }
(rule__DeclVal__Alternatives_0_1)
{ after(grammarAccess.getDeclValAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_0__2__Impl
	rule__DeclVal__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAttrAssignment_0_2()); }
(rule__DeclVal__AttrAssignment_0_2)*
{ after(grammarAccess.getDeclValAccess().getAttrAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_0__3__Impl
	rule__DeclVal__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getEqualsSignKeyword_0_3()); }

	'=' 

{ after(grammarAccess.getDeclValAccess().getEqualsSignKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpAssignment_0_4()); }
(rule__DeclVal__ExpAssignment_0_4)
{ after(grammarAccess.getDeclValAccess().getExpAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DeclVal__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1__0__Impl
	rule__DeclVal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getValKeyword_1_0()); }

	'val' 

{ after(grammarAccess.getDeclValAccess().getValKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1__1__Impl
	rule__DeclVal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameAssignment_1_1()); }
(rule__DeclVal__NameAssignment_1_1)
{ after(grammarAccess.getDeclValAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1__2__Impl
	rule__DeclVal__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getLeftSquareBracketKeyword_1_2()); }

	'[' 

{ after(grammarAccess.getDeclValAccess().getLeftSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1__3__Impl
	rule__DeclVal__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getGroup_1_3()); }
(rule__DeclVal__Group_1_3__0)?
{ after(grammarAccess.getDeclValAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1__4__Impl
	rule__DeclVal__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getRightSquareBracketKeyword_1_4()); }

	']' 

{ after(grammarAccess.getDeclValAccess().getRightSquareBracketKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAlternatives_1_5()); }
(rule__DeclVal__Alternatives_1_5)
{ after(grammarAccess.getDeclValAccess().getAlternatives_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DeclVal__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1_3__0__Impl
	rule__DeclVal__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getDecPatAssignment_1_3_0()); }
(rule__DeclVal__DecPatAssignment_1_3_0)
{ after(grammarAccess.getDeclValAccess().getDecPatAssignment_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getDecPatAssignment_1_3_1()); }
(rule__DeclVal__DecPatAssignment_1_3_1)*
{ after(grammarAccess.getDeclValAccess().getDecPatAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclVal__Group_1_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1_5_0__0__Impl
	rule__DeclVal__Group_1_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getEqualsSignKeyword_1_5_0_0()); }

	'=' 

{ after(grammarAccess.getDeclValAccess().getEqualsSignKeyword_1_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1_5_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpAssignment_1_5_0_1()); }
(rule__DeclVal__ExpAssignment_1_5_0_1)
{ after(grammarAccess.getDeclValAccess().getExpAssignment_1_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclVal__Group_1_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1_5_1__0__Impl
	rule__DeclVal__Group_1_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getPIPETerminalRuleCall_1_5_1_0()); }
	RULE_PIPE
{ after(grammarAccess.getDeclValAccess().getPIPETerminalRuleCall_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1_5_1__1__Impl
	rule__DeclVal__Group_1_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpsAssignment_1_5_1_1()); }
(rule__DeclVal__ExpsAssignment_1_5_1_1)
{ after(grammarAccess.getDeclValAccess().getExpsAssignment_1_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1_5_1__2__Impl
	rule__DeclVal__Group_1_5_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getEqualsSignKeyword_1_5_1_2()); }

	'=' 

{ after(grammarAccess.getDeclValAccess().getEqualsSignKeyword_1_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1_5_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1_5_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1_5_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpsAssignment_1_5_1_3()); }
(rule__DeclVal__ExpsAssignment_1_5_1_3)
{ after(grammarAccess.getDeclValAccess().getExpsAssignment_1_5_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Export__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__0__Impl
	rule__Export__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getNameAssignment_0()); }
(rule__Export__NameAssignment_0)
{ after(grammarAccess.getExportAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getGroup_1()); }
(rule__Export__Group_1__0)?
{ after(grammarAccess.getExportAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Export__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__0__Impl
	rule__Export__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__1__Impl
	rule__Export__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameAssignment_1_1()); }
(rule__Export__AttrNameAssignment_1_1)
{ after(grammarAccess.getExportAccess().getAttrNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__2__Impl
	rule__Export__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getGroup_1_2()); }
(rule__Export__Group_1_2__0)*
{ after(grammarAccess.getExportAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_3()); }

	'}' 

{ after(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Export__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1_2__0__Impl
	rule__Export__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getExportAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameAssignment_1_2_1()); }
(rule__Export__AttrNameAssignment_1_2_1)
{ after(grammarAccess.getExportAccess().getAttrNameAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecls__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group__0__Impl
	rule__ConDecls__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsAssignment_0()); }
(rule__ConDecls__ConDeclsAssignment_0)
{ after(grammarAccess.getConDeclsAccess().getConDeclsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecls__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getGroup_1()); }
(rule__ConDecls__Group_1__0)*
{ after(grammarAccess.getConDeclsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecls__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group_1__0__Impl
	rule__ConDecls__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getPIPETerminalRuleCall_1_0()); }
	RULE_PIPE
{ after(grammarAccess.getConDeclsAccess().getPIPETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecls__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsAssignment_1_1()); }
(rule__ConDecls__ConDeclsAssignment_1_1)
{ after(grammarAccess.getConDeclsAccess().getConDeclsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group__0__Impl
	rule__ConDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getNameAssignment_0()); }
(rule__ConDecl__NameAssignment_0)
{ after(grammarAccess.getConDeclAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getGroup_1()); }
(rule__ConDecl__Group_1__0)?
{ after(grammarAccess.getConDeclAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group_1__0__Impl
	rule__ConDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getOfKeyword_1_0()); }

	'of' 

{ after(grammarAccess.getConDeclAccess().getOfKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getTyAssignment_1_1()); }
(rule__ConDecl__TyAssignment_1_1)
{ after(grammarAccess.getConDeclAccess().getTyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ty__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_1__0__Impl
	rule__Ty__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getPIPETerminalRuleCall_1_0()); }
	RULE_PIPE
{ after(grammarAccess.getTyAccess().getPIPETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_1__1__Impl
	rule__Ty__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueAssignment_1_1()); }
(rule__Ty__ValueAssignment_1_1)
{ after(grammarAccess.getTyAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getPIPETerminalRuleCall_1_2()); }
	RULE_PIPE
{ after(grammarAccess.getTyAccess().getPIPETerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ty__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2__0__Impl
	rule__Ty__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueAssignment_2_0()); }
(rule__Ty__ValueAssignment_2_0)
{ after(grammarAccess.getTyAccess().getValueAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getGroup_2_1()); }
(rule__Ty__Group_2_1__0)?
{ after(grammarAccess.getTyAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ty__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__0__Impl
	rule__Ty__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getLeftSquareBracketKeyword_2_1_0()); }

	'[' 

{ after(grammarAccess.getTyAccess().getLeftSquareBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__1__Impl
	rule__Ty__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindAssignment_2_1_1()); }
(rule__Ty__TyBindAssignment_2_1_1)
{ after(grammarAccess.getTyAccess().getTyBindAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__2__Impl
	rule__Ty__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getGroup_2_1_2()); }
(rule__Ty__Group_2_1_2__0)*
{ after(grammarAccess.getTyAccess().getGroup_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getRightSquareBracketKeyword_2_1_3()); }

	']' 

{ after(grammarAccess.getTyAccess().getRightSquareBracketKeyword_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Ty__Group_2_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1_2__0__Impl
	rule__Ty__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getCommaKeyword_2_1_2_0()); }

	',' 

{ after(grammarAccess.getTyAccess().getCommaKeyword_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindAssignment_2_1_2_1()); }
(rule__Ty__TyBindAssignment_2_1_2_1)
{ after(grammarAccess.getTyAccess().getTyBindAssignment_2_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ty__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__0__Impl
	rule__Ty__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getTyAccess().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__1__Impl
	rule__Ty__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsAssignment_3_1()); }
(rule__Ty__ElementsAssignment_3_1)
{ after(grammarAccess.getTyAccess().getElementsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__2__Impl
	rule__Ty__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getGroup_3_2()); }
(rule__Ty__Group_3_2__0)*
{ after(grammarAccess.getTyAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getRightCurlyBracketKeyword_3_3()); }

	'}' 

{ after(grammarAccess.getTyAccess().getRightCurlyBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Ty__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3_2__0__Impl
	rule__Ty__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getTyAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsAssignment_3_2_1()); }
(rule__Ty__ElementsAssignment_3_2_1)
{ after(grammarAccess.getTyAccess().getElementsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TyElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyElement__Group__0__Impl
	rule__TyElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getNameAssignment_0()); }
(rule__TyElement__NameAssignment_0)
{ after(grammarAccess.getTyElementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyElement__Group__1__Impl
	rule__TyElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTyElementAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getValueAssignment_2()); }
(rule__TyElement__ValueAssignment_2)
{ after(grammarAccess.getTyElementAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TyBind__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group__0__Impl
	rule__TyBind__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getKeyAssignment_0()); }
(rule__TyBind__KeyAssignment_0)
{ after(grammarAccess.getTyBindAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyBind__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getGroup_1()); }
(rule__TyBind__Group_1__0)?
{ after(grammarAccess.getTyBindAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TyBind__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group_1__0__Impl
	rule__TyBind__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getTyBindAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyBind__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getValueAssignment_1_1()); }
(rule__TyBind__ValueAssignment_1_1)
{ after(grammarAccess.getTyBindAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitPat__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPat__Group__0__Impl
	rule__BitPat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getApostropheKeyword_0()); }

	'\'' 

{ after(grammarAccess.getBitPatAccess().getApostropheKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitPat__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPat__Group__1__Impl
	rule__BitPat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getBitpatAssignment_1()); }
(rule__BitPat__BitpatAssignment_1)
{ after(grammarAccess.getBitPatAccess().getBitpatAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitPat__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPat__Group__2__Impl
	rule__BitPat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getBitpatAssignment_2()); }
(rule__BitPat__BitpatAssignment_2)*
{ after(grammarAccess.getBitPatAccess().getBitpatAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitPat__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPat__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getApostropheKeyword_3()); }

	'\'' 

{ after(grammarAccess.getBitPatAccess().getApostropheKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimBitPat__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimBitPat__Group_1__0__Impl
	rule__PrimBitPat__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimBitPat__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimBitPatAccess().getQidParserRuleCall_1_0()); }
	ruleQid
{ after(grammarAccess.getPrimBitPatAccess().getQidParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimBitPat__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimBitPat__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimBitPat__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimBitPatAccess().getBitPatOrIntParserRuleCall_1_1()); }
(	ruleBitPatOrInt)?
{ after(grammarAccess.getPrimBitPatAccess().getBitPatOrIntParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitPatOrInt__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPatOrInt__Group_0__0__Impl
	rule__BitPatOrInt__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPatOrInt__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatOrIntAccess().getColonKeyword_0_0()); }

	':' 

{ after(grammarAccess.getBitPatOrIntAccess().getColonKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitPatOrInt__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPatOrInt__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPatOrInt__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatOrIntAccess().getPOSINTParserRuleCall_0_1()); }
	rulePOSINT
{ after(grammarAccess.getBitPatOrIntAccess().getPOSINTParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitPatOrInt__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPatOrInt__Group_1__0__Impl
	rule__BitPatOrInt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPatOrInt__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatOrIntAccess().getCommercialAtKeyword_1_0()); }

	'@' 

{ after(grammarAccess.getBitPatOrIntAccess().getCommercialAtKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitPatOrInt__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPatOrInt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPatOrInt__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatOrIntAccess().getBITSTRParserRuleCall_1_1()); }
	ruleBITSTR
{ after(grammarAccess.getBitPatOrIntAccess().getBITSTRParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NEGINT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NEGINT__Group__0__Impl
	rule__NEGINT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NEGINT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNEGINTAccess().getTildeKeyword_0()); }

	'~' 

{ after(grammarAccess.getNEGINTAccess().getTildeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NEGINT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NEGINT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NEGINT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNEGINTAccess().getNUMParserRuleCall_1()); }
	ruleNUM
{ after(grammarAccess.getNEGINTAccess().getNUMParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HEXNUM__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HEXNUM__Group__0__Impl
	rule__HEXNUM__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HEXNUM__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHEXNUMAccess().getXKeyword_0()); }

	'0x' 

{ after(grammarAccess.getHEXNUMAccess().getXKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HEXNUM__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HEXNUM__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HEXNUM__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getHEXNUMAccess().getHEXDIGITParserRuleCall_1()); }
(	ruleHEXDIGIT)
{ after(grammarAccess.getHEXNUMAccess().getHEXDIGITParserRuleCall_1()); }
)
(
{ before(grammarAccess.getHEXNUMAccess().getHEXDIGITParserRuleCall_1()); }
(	ruleHEXDIGIT)*
{ after(grammarAccess.getHEXNUMAccess().getHEXDIGITParserRuleCall_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}







rule__CONS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CONS__Group__0__Impl
	rule__CONS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CONS__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCONSAccess().getULETTERParserRuleCall_0()); }
	ruleULETTER
{ after(grammarAccess.getCONSAccess().getULETTERParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CONS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CONS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CONS__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCONSAccess().getIDCHARParserRuleCall_1()); }
(	ruleIDCHAR)*
{ after(grammarAccess.getCONSAccess().getIDCHARParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ID__Group__0__Impl
	rule__ID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIDAccess().getLETTERParserRuleCall_0()); }
	ruleLETTER
{ after(grammarAccess.getIDAccess().getLETTERParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIDAccess().getIDCHARParserRuleCall_1()); }
(	ruleIDCHAR)*
{ after(grammarAccess.getIDAccess().getIDCHARParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__DeclAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_0_0()); }
	ruleDecl{ after(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DeclAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_1_1_0()); }
	ruleDecl{ after(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }
(
{ before(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }

	'granularity' 

{ after(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }
)

{ after(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__GranularityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getGranularityIntParserRuleCall_2_0()); }
	ruleInt{ after(grammarAccess.getDeclGranularityAccess().getGranularityIntParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }
(
{ before(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }

	'export' 

{ after(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }
)

{ after(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__ExportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getExportsExportParserRuleCall_2_0()); }
	ruleExport{ after(grammarAccess.getDeclExportAccess().getExportsExportParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getDeclTypeAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__ValueAssignment_2_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_2_0_0_1_0()); }
	ruleConDecls{ after(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_2_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__ValueAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueTyParserRuleCall_2_0_1_0()); }
	ruleTy{ after(grammarAccess.getDeclTypeAccess().getValueTyParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__AttrNameAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameNameParserRuleCall_2_1_1_0()); }
	ruleName{ after(grammarAccess.getDeclTypeAccess().getAttrNameNameParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__AttrNameAssignment_2_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameNameParserRuleCall_2_1_2_1_0()); }
	ruleName{ after(grammarAccess.getDeclTypeAccess().getAttrNameNameParserRuleCall_2_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__ValueAssignment_2_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_2_1_5_0()); }
	ruleConDecls{ after(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_2_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__NameAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameNameParserRuleCall_0_1_0_0()); }
	ruleName{ after(grammarAccess.getDeclValAccess().getNameNameParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__NameAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameSYMParserRuleCall_0_1_1_0()); }
	ruleSYM{ after(grammarAccess.getDeclValAccess().getNameSYMParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__AttrAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAttrNameParserRuleCall_0_2_0()); }
	ruleName{ after(grammarAccess.getDeclValAccess().getAttrNameParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__ExpAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_0_4_0()); }
	ruleExp{ after(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameNameParserRuleCall_1_1_0()); }
	ruleName{ after(grammarAccess.getDeclValAccess().getNameNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__DecPatAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getDecPatDecodePatParserRuleCall_1_3_0_0()); }
	ruleDecodePat{ after(grammarAccess.getDeclValAccess().getDecPatDecodePatParserRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__DecPatAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getDecPatDecodePatParserRuleCall_1_3_1_0()); }
	ruleDecodePat{ after(grammarAccess.getDeclValAccess().getDecPatDecodePatParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__ExpAssignment_1_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_1_5_0_1_0()); }
	ruleExp{ after(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_1_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__ExpsAssignment_1_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpsExpParserRuleCall_1_5_1_1_0()); }
	ruleExp{ after(grammarAccess.getDeclValAccess().getExpsExpParserRuleCall_1_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__ExpsAssignment_1_5_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpsExpParserRuleCall_1_5_1_3_0()); }
	ruleExp{ after(grammarAccess.getDeclValAccess().getExpsExpParserRuleCall_1_5_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getNameQidParserRuleCall_0_0()); }
	ruleQid{ after(grammarAccess.getExportAccess().getNameQidParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__AttrNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameNameParserRuleCall_1_1_0()); }
	ruleName{ after(grammarAccess.getExportAccess().getAttrNameNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__AttrNameAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameNameParserRuleCall_1_2_1_0()); }
	ruleName{ after(grammarAccess.getExportAccess().getAttrNameNameParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__ConDeclsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_0_0()); }
	ruleConDecl{ after(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__ConDeclsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_1_1_0()); }
	ruleConDecl{ after(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getNameConBindParserRuleCall_0_0()); }
	ruleConBind{ after(grammarAccess.getConDeclAccess().getNameConBindParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__TyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getTyTyParserRuleCall_1_1_0()); }
	ruleTy{ after(grammarAccess.getConDeclAccess().getTyTyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueIntParserRuleCall_0_0()); }
	ruleInt{ after(grammarAccess.getTyAccess().getValueIntParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueIntParserRuleCall_1_1_0()); }
	ruleInt{ after(grammarAccess.getTyAccess().getValueIntParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ValueAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueQidParserRuleCall_2_0_0()); }
	ruleQid{ after(grammarAccess.getTyAccess().getValueQidParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__TyBindAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_1_0()); }
	ruleTyBind{ after(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__TyBindAssignment_2_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_2_1_0()); }
	ruleTyBind{ after(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ElementsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_1_0()); }
	ruleTyElement{ after(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ElementsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_2_1_0()); }
	ruleTyElement{ after(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getTyElementAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getValueTyParserRuleCall_2_0()); }
	ruleTy{ after(grammarAccess.getTyElementAccess().getValueTyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getKeyQidParserRuleCall_0_0()); }
	ruleQid{ after(grammarAccess.getTyBindAccess().getKeyQidParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getValueTyParserRuleCall_1_1_0()); }
	ruleTy{ after(grammarAccess.getTyBindAccess().getValueTyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__BitpatAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getBitpatPrimBitPatParserRuleCall_1_0()); }
	rulePrimBitPat{ after(grammarAccess.getBitPatAccess().getBitpatPrimBitPatParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__BitpatAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getBitpatPrimBitPatParserRuleCall_2_0()); }
	rulePrimBitPat{ after(grammarAccess.getBitPatAccess().getBitpatPrimBitPatParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TokPat__TokPatAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokPatAccess().getTokPatAlternatives_0()); }
(rule__TokPat__TokPatAlternatives_0)
{ after(grammarAccess.getTokPatAccess().getTokPatAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BINDIG : ('0'|'1');

RULE_NBINDIG : '2'..'9';

RULE_LHEXCHAR : 'a'..'f';

RULE_UHEXCHAR : 'A'..'F';

RULE_LNHEXCHAR : 'g'..'z';

RULE_UNHEXCHAR : 'G'..'Z';

RULE_BS : '\\';

RULE_SLASH : '/';

RULE_DOT : '.';

RULE_PIPE : '|';

RULE_CHARSYM : ('_'|'-'|'?'|'\''|'!');

RULE_OTHERSYM : ('%'|'&'|'$'|'+'|':'|'<'|'='|'>'|'@'|'~'|'`'|'^'|'#'|'*');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ML_COMMENT : '(*' ( options {greedy=false;} : . )*'*)';

RULE_SL_COMMENT : '#' ~('\n')* '\n';


