/*
* generated by Xtext
*/
grammar InternalGDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package gdsl.plugin.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package gdsl.plugin.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import gdsl.plugin.services.GDSLGrammarAccess;

}

@parser::members {
 
 	private GDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecl
entryRuleDecl 
:
{ before(grammarAccess.getDeclRule()); }
	 ruleDecl
{ after(grammarAccess.getDeclRule()); } 
	 EOF 
;

// Rule Decl
ruleDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclAccess().getAlternatives()); }
(rule__Decl__Alternatives)
{ after(grammarAccess.getDeclAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclGranularity
entryRuleDeclGranularity 
:
{ before(grammarAccess.getDeclGranularityRule()); }
	 ruleDeclGranularity
{ after(grammarAccess.getDeclGranularityRule()); } 
	 EOF 
;

// Rule DeclGranularity
ruleDeclGranularity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclGranularityAccess().getGroup()); }
(rule__DeclGranularity__Group__0)
{ after(grammarAccess.getDeclGranularityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclExport
entryRuleDeclExport 
:
{ before(grammarAccess.getDeclExportRule()); }
	 ruleDeclExport
{ after(grammarAccess.getDeclExportRule()); } 
	 EOF 
;

// Rule DeclExport
ruleDeclExport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclExportAccess().getGroup()); }
(rule__DeclExport__Group__0)
{ after(grammarAccess.getDeclExportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclType
entryRuleDeclType 
:
{ before(grammarAccess.getDeclTypeRule()); }
	 ruleDeclType
{ after(grammarAccess.getDeclTypeRule()); } 
	 EOF 
;

// Rule DeclType
ruleDeclType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclTypeAccess().getAlternatives()); }
(rule__DeclType__Alternatives)
{ after(grammarAccess.getDeclTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclVal
entryRuleDeclVal 
:
{ before(grammarAccess.getDeclValRule()); }
	 ruleDeclVal
{ after(grammarAccess.getDeclValRule()); } 
	 EOF 
;

// Rule DeclVal
ruleDeclVal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclValAccess().getGroup()); }
(rule__DeclVal__Group__0)
{ after(grammarAccess.getDeclValAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExport
entryRuleExport 
:
{ before(grammarAccess.getExportRule()); }
	 ruleExport
{ after(grammarAccess.getExportRule()); } 
	 EOF 
;

// Rule Export
ruleExport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExportAccess().getGroup()); }
(rule__Export__Group__0)
{ after(grammarAccess.getExportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConDecls
entryRuleConDecls 
:
{ before(grammarAccess.getConDeclsRule()); }
	 ruleConDecls
{ after(grammarAccess.getConDeclsRule()); } 
	 EOF 
;

// Rule ConDecls
ruleConDecls
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConDeclsAccess().getGroup()); }
(rule__ConDecls__Group__0)
{ after(grammarAccess.getConDeclsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConDecl
entryRuleConDecl 
:
{ before(grammarAccess.getConDeclRule()); }
	 ruleConDecl
{ after(grammarAccess.getConDeclRule()); } 
	 EOF 
;

// Rule ConDecl
ruleConDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConDeclAccess().getGroup()); }
(rule__ConDecl__Group__0)
{ after(grammarAccess.getConDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTy
entryRuleTy 
:
{ before(grammarAccess.getTyRule()); }
	 ruleTy
{ after(grammarAccess.getTyRule()); } 
	 EOF 
;

// Rule Ty
ruleTy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTyAccess().getAlternatives()); }
(rule__Ty__Alternatives)
{ after(grammarAccess.getTyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTyElement
entryRuleTyElement 
:
{ before(grammarAccess.getTyElementRule()); }
	 ruleTyElement
{ after(grammarAccess.getTyElementRule()); } 
	 EOF 
;

// Rule TyElement
ruleTyElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTyElementAccess().getGroup()); }
(rule__TyElement__Group__0)
{ after(grammarAccess.getTyElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTyBind
entryRuleTyBind 
:
{ before(grammarAccess.getTyBindRule()); }
	 ruleTyBind
{ after(grammarAccess.getTyBindRule()); } 
	 EOF 
;

// Rule TyBind
ruleTyBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTyBindAccess().getGroup()); }
(rule__TyBind__Group__0)
{ after(grammarAccess.getTyBindAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConBind
entryRuleConBind 
:
{ before(grammarAccess.getConBindRule()); }
	 ruleConBind
{ after(grammarAccess.getConBindRule()); } 
	 EOF 
;

// Rule ConBind
ruleConBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConBindAccess().getCONSTerminalRuleCall()); }
	RULE_CONS
{ after(grammarAccess.getConBindAccess().getCONSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInt
entryRuleInt 
:
{ before(grammarAccess.getIntRule()); }
	 ruleInt
{ after(grammarAccess.getIntRule()); } 
	 EOF 
;

// Rule Int
ruleInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntAccess().getAlternatives()); }
(rule__Int__Alternatives)
{ after(grammarAccess.getIntAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQid
entryRuleQid 
:
{ before(grammarAccess.getQidRule()); }
	 ruleQid
{ after(grammarAccess.getQidRule()); } 
	 EOF 
;

// Rule Qid
ruleQid
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQidAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getQidAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Decl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getDeclGranularityParserRuleCall_0()); }
	ruleDeclGranularity
{ after(grammarAccess.getDeclAccess().getDeclGranularityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclAccess().getDeclExportParserRuleCall_1()); }
	ruleDeclExport
{ after(grammarAccess.getDeclAccess().getDeclExportParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeclAccess().getDeclTypeParserRuleCall_2()); }
	ruleDeclType
{ after(grammarAccess.getDeclAccess().getDeclTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDeclAccess().getDeclValParserRuleCall_3()); }
	ruleDeclVal
{ after(grammarAccess.getDeclAccess().getDeclValParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getGroup_0()); }
(rule__DeclType__Group_0__0)
{ after(grammarAccess.getDeclTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDeclTypeAccess().getGroup_1()); }
(rule__DeclType__Group_1__0)
{ after(grammarAccess.getDeclTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__ValueAlternatives_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_0_3_0_0()); }
	ruleConDecls
{ after(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_0_3_0_0()); }
)

    |(
{ before(grammarAccess.getDeclTypeAccess().getValueTyParserRuleCall_0_3_0_1()); }
	ruleTy
{ after(grammarAccess.getDeclTypeAccess().getValueTyParserRuleCall_0_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueAssignment_0()); }
(rule__Ty__ValueAssignment_0)
{ after(grammarAccess.getTyAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getTyAccess().getGroup_1()); }
(rule__Ty__Group_1__0)
{ after(grammarAccess.getTyAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTyAccess().getGroup_2()); }
(rule__Ty__Group_2__0)
{ after(grammarAccess.getTyAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTyAccess().getGroup_3()); }
(rule__Ty__Group_3__0)
{ after(grammarAccess.getTyAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Int__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntAccess().getPOSINTTerminalRuleCall_0()); }
	RULE_POSINT
{ after(grammarAccess.getIntAccess().getPOSINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntAccess().getNEGINTTerminalRuleCall_1()); }
	RULE_NEGINT
{ after(grammarAccess.getIntAccess().getNEGINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclAssignment_0()); }
(rule__Model__DeclAssignment_0)
{ after(grammarAccess.getModelAccess().getDeclAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_1()); }
(rule__Model__Group_1__0)*
{ after(grammarAccess.getModelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Model__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__0__Impl
	rule__Model__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSemicolonKeyword_1_0()); }
(
	';' 
)?
{ after(grammarAccess.getModelAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclAssignment_1_1()); }
(rule__Model__DeclAssignment_1_1)
{ after(grammarAccess.getModelAccess().getDeclAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclGranularity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclGranularity__Group__0__Impl
	rule__DeclGranularity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getNameAssignment_0()); }
(rule__DeclGranularity__NameAssignment_0)
{ after(grammarAccess.getDeclGranularityAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclGranularity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclGranularity__Group__1__Impl
	rule__DeclGranularity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDeclGranularityAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclGranularity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclGranularity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getGranularityAssignment_2()); }
(rule__DeclGranularity__GranularityAssignment_2)
{ after(grammarAccess.getDeclGranularityAccess().getGranularityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeclExport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclExport__Group__0__Impl
	rule__DeclExport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getNameAssignment_0()); }
(rule__DeclExport__NameAssignment_0)
{ after(grammarAccess.getDeclExportAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclExport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclExport__Group__1__Impl
	rule__DeclExport__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDeclExportAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclExport__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclExport__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getExportsAssignment_2()); }
(rule__DeclExport__ExportsAssignment_2)*
{ after(grammarAccess.getDeclExportAccess().getExportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeclType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_0__0__Impl
	rule__DeclType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getTypeKeyword_0_0()); }

	'type' 

{ after(grammarAccess.getDeclTypeAccess().getTypeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_0__1__Impl
	rule__DeclType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getNameAssignment_0_1()); }
(rule__DeclType__NameAssignment_0_1)
{ after(grammarAccess.getDeclTypeAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_0__2__Impl
	rule__DeclType__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_0_2()); }

	'=' 

{ after(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueAssignment_0_3()); }
(rule__DeclType__ValueAssignment_0_3)
{ after(grammarAccess.getDeclTypeAccess().getValueAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DeclType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_1__0__Impl
	rule__DeclType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getTypeKeyword_1_0()); }

	'type' 

{ after(grammarAccess.getDeclTypeAccess().getTypeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_1__1__Impl
	rule__DeclType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getNameAssignment_1_1()); }
(rule__DeclType__NameAssignment_1_1)
{ after(grammarAccess.getDeclTypeAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_1__2__Impl
	rule__DeclType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getLeftSquareBracketKeyword_1_2()); }

	'[' 

{ after(grammarAccess.getDeclTypeAccess().getLeftSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_1__3__Impl
	rule__DeclType__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_1_3()); }
(rule__DeclType__AttrNameAssignment_1_3)
{ after(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_1__4__Impl
	rule__DeclType__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getGroup_1_4()); }
(rule__DeclType__Group_1_4__0)*
{ after(grammarAccess.getDeclTypeAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_1__5__Impl
	rule__DeclType__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getRightSquareBracketKeyword_1_5()); }

	']' 

{ after(grammarAccess.getDeclTypeAccess().getRightSquareBracketKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_1__6__Impl
	rule__DeclType__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_1_6()); }

	'=' 

{ after(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueAssignment_1_7()); }
(rule__DeclType__ValueAssignment_1_7)
{ after(grammarAccess.getDeclTypeAccess().getValueAssignment_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__DeclType__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_1_4__0__Impl
	rule__DeclType__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getCommaKeyword_1_4_0()); }

	',' 

{ after(grammarAccess.getDeclTypeAccess().getCommaKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_1_4_1()); }
(rule__DeclType__AttrNameAssignment_1_4_1)
{ after(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclVal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group__0__Impl
	rule__DeclVal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getValKeyword_0()); }

	'val' 

{ after(grammarAccess.getDeclValAccess().getValKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group__1__Impl
	rule__DeclVal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameAssignment_1()); }
(rule__DeclVal__NameAssignment_1)
{ after(grammarAccess.getDeclValAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAttrAssignment_2()); }
(rule__DeclVal__AttrAssignment_2)*
{ after(grammarAccess.getDeclValAccess().getAttrAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Export__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__0__Impl
	rule__Export__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getNameAssignment_0()); }
(rule__Export__NameAssignment_0)
{ after(grammarAccess.getExportAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getGroup_1()); }
(rule__Export__Group_1__0)?
{ after(grammarAccess.getExportAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Export__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__0__Impl
	rule__Export__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__1__Impl
	rule__Export__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameAssignment_1_1()); }
(rule__Export__AttrNameAssignment_1_1)
{ after(grammarAccess.getExportAccess().getAttrNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__2__Impl
	rule__Export__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getGroup_1_2()); }
(rule__Export__Group_1_2__0)*
{ after(grammarAccess.getExportAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_3()); }

	'}' 

{ after(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Export__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1_2__0__Impl
	rule__Export__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getExportAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameAssignment_1_2_1()); }
(rule__Export__AttrNameAssignment_1_2_1)
{ after(grammarAccess.getExportAccess().getAttrNameAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecls__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group__0__Impl
	rule__ConDecls__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsAssignment_0()); }
(rule__ConDecls__ConDeclsAssignment_0)
{ after(grammarAccess.getConDeclsAccess().getConDeclsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecls__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getGroup_1()); }
(rule__ConDecls__Group_1__0)*
{ after(grammarAccess.getConDeclsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecls__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group_1__0__Impl
	rule__ConDecls__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getConDeclsAccess().getVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecls__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsAssignment_1_1()); }
(rule__ConDecls__ConDeclsAssignment_1_1)
{ after(grammarAccess.getConDeclsAccess().getConDeclsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group__0__Impl
	rule__ConDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getNameAssignment_0()); }
(rule__ConDecl__NameAssignment_0)
{ after(grammarAccess.getConDeclAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getGroup_1()); }
(rule__ConDecl__Group_1__0)?
{ after(grammarAccess.getConDeclAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group_1__0__Impl
	rule__ConDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getOfKeyword_1_0()); }

	'of' 

{ after(grammarAccess.getConDeclAccess().getOfKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getTyAssignment_1_1()); }
(rule__ConDecl__TyAssignment_1_1)
{ after(grammarAccess.getConDeclAccess().getTyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ty__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_1__0__Impl
	rule__Ty__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getTyAccess().getVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_1__1__Impl
	rule__Ty__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueAssignment_1_1()); }
(rule__Ty__ValueAssignment_1_1)
{ after(grammarAccess.getTyAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getVerticalLineKeyword_1_2()); }

	'|' 

{ after(grammarAccess.getTyAccess().getVerticalLineKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ty__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2__0__Impl
	rule__Ty__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueAssignment_2_0()); }
(rule__Ty__ValueAssignment_2_0)
{ after(grammarAccess.getTyAccess().getValueAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getGroup_2_1()); }
(rule__Ty__Group_2_1__0)?
{ after(grammarAccess.getTyAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ty__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__0__Impl
	rule__Ty__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getLeftSquareBracketKeyword_2_1_0()); }

	'[' 

{ after(grammarAccess.getTyAccess().getLeftSquareBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__1__Impl
	rule__Ty__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindAssignment_2_1_1()); }
(rule__Ty__TyBindAssignment_2_1_1)
{ after(grammarAccess.getTyAccess().getTyBindAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__2__Impl
	rule__Ty__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getGroup_2_1_2()); }
(rule__Ty__Group_2_1_2__0)*
{ after(grammarAccess.getTyAccess().getGroup_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getRightSquareBracketKeyword_2_1_3()); }

	']' 

{ after(grammarAccess.getTyAccess().getRightSquareBracketKeyword_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Ty__Group_2_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1_2__0__Impl
	rule__Ty__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getCommaKeyword_2_1_2_0()); }

	',' 

{ after(grammarAccess.getTyAccess().getCommaKeyword_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindAssignment_2_1_2_1()); }
(rule__Ty__TyBindAssignment_2_1_2_1)
{ after(grammarAccess.getTyAccess().getTyBindAssignment_2_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ty__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__0__Impl
	rule__Ty__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getTyAccess().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__1__Impl
	rule__Ty__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsAssignment_3_1()); }
(rule__Ty__ElementsAssignment_3_1)
{ after(grammarAccess.getTyAccess().getElementsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__2__Impl
	rule__Ty__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getGroup_3_2()); }
(rule__Ty__Group_3_2__0)*
{ after(grammarAccess.getTyAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getRightCurlyBracketKeyword_3_3()); }

	'}' 

{ after(grammarAccess.getTyAccess().getRightCurlyBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Ty__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3_2__0__Impl
	rule__Ty__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getTyAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsAssignment_3_2_1()); }
(rule__Ty__ElementsAssignment_3_2_1)
{ after(grammarAccess.getTyAccess().getElementsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TyElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyElement__Group__0__Impl
	rule__TyElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getNameAssignment_0()); }
(rule__TyElement__NameAssignment_0)
{ after(grammarAccess.getTyElementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyElement__Group__1__Impl
	rule__TyElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTyElementAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getValueAssignment_2()); }
(rule__TyElement__ValueAssignment_2)
{ after(grammarAccess.getTyElementAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TyBind__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group__0__Impl
	rule__TyBind__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getKeyAssignment_0()); }
(rule__TyBind__KeyAssignment_0)
{ after(grammarAccess.getTyBindAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyBind__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getGroup_1()); }
(rule__TyBind__Group_1__0)?
{ after(grammarAccess.getTyBindAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TyBind__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group_1__0__Impl
	rule__TyBind__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getTyBindAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyBind__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getValueAssignment_1_1()); }
(rule__TyBind__ValueAssignment_1_1)
{ after(grammarAccess.getTyBindAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__DeclAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_0_0()); }
	ruleDecl{ after(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DeclAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_1_1_0()); }
	ruleDecl{ after(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }
(
{ before(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }

	'granularity' 

{ after(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }
)

{ after(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__GranularityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getGranularityIntParserRuleCall_2_0()); }
	ruleInt{ after(grammarAccess.getDeclGranularityAccess().getGranularityIntParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }
(
{ before(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }

	'export' 

{ after(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }
)

{ after(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__ExportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getExportsExportParserRuleCall_2_0()); }
	ruleExport{ after(grammarAccess.getDeclExportAccess().getExportsExportParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getDeclTypeAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__ValueAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueAlternatives_0_3_0()); }
(rule__DeclType__ValueAlternatives_0_3_0)
{ after(grammarAccess.getDeclTypeAccess().getValueAlternatives_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getDeclTypeAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__AttrNameAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameIDTerminalRuleCall_1_3_0()); }
	RULE_ID{ after(grammarAccess.getDeclTypeAccess().getAttrNameIDTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__AttrNameAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameIDTerminalRuleCall_1_4_1_0()); }
	RULE_ID{ after(grammarAccess.getDeclTypeAccess().getAttrNameIDTerminalRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__ValueAssignment_1_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_1_7_0()); }
	ruleConDecls{ after(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDeclValAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__AttrAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAttrIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getDeclValAccess().getAttrIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getNameQidParserRuleCall_0_0()); }
	ruleQid{ after(grammarAccess.getExportAccess().getNameQidParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__AttrNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getExportAccess().getAttrNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__AttrNameAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameIDTerminalRuleCall_1_2_1_0()); }
	RULE_ID{ after(grammarAccess.getExportAccess().getAttrNameIDTerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__ConDeclsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_0_0()); }
	ruleConDecl{ after(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__ConDeclsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_1_1_0()); }
	ruleConDecl{ after(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getNameConBindParserRuleCall_0_0()); }
	ruleConBind{ after(grammarAccess.getConDeclAccess().getNameConBindParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__TyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getTyTyParserRuleCall_1_1_0()); }
	ruleTy{ after(grammarAccess.getConDeclAccess().getTyTyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueIntParserRuleCall_0_0()); }
	ruleInt{ after(grammarAccess.getTyAccess().getValueIntParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueIntParserRuleCall_1_1_0()); }
	ruleInt{ after(grammarAccess.getTyAccess().getValueIntParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ValueAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueQidParserRuleCall_2_0_0()); }
	ruleQid{ after(grammarAccess.getTyAccess().getValueQidParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__TyBindAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_1_0()); }
	ruleTyBind{ after(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__TyBindAssignment_2_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_2_1_0()); }
	ruleTyBind{ after(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ElementsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_1_0()); }
	ruleTyElement{ after(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ElementsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_2_1_0()); }
	ruleTyElement{ after(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTyElementAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getValueTyParserRuleCall_2_0()); }
	ruleTy{ after(grammarAccess.getTyElementAccess().getValueTyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getKeyQidParserRuleCall_0_0()); }
	ruleQid{ after(grammarAccess.getTyBindAccess().getKeyQidParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getValueTyParserRuleCall_1_1_0()); }
	ruleTy{ after(grammarAccess.getTyBindAccess().getValueTyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_CONS : 'constodo';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_POSINT : ('0'..'9')+;

RULE_NEGINT : '~' '1'..'9' ('0'..'9')*;

RULE_ML_COMMENT : '(*' ( options {greedy=false;} : . )*'*)';

RULE_SL_COMMENT : '#' ~('\n')* '\n';

RULE_WS : (' '|'\t'|'\r'|'\n')+;


