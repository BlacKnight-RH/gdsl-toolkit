/*
* generated by Xtext
*/
grammar InternalGDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package gdsl.plugin.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package gdsl.plugin.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import gdsl.plugin.services.GDSLGrammarAccess;

}

@parser::members {
 
 	private GDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecl
entryRuleDecl 
:
{ before(grammarAccess.getDeclRule()); }
	 ruleDecl
{ after(grammarAccess.getDeclRule()); } 
	 EOF 
;

// Rule Decl
ruleDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclAccess().getAlternatives()); }
(rule__Decl__Alternatives)
{ after(grammarAccess.getDeclAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclGranularity
entryRuleDeclGranularity 
:
{ before(grammarAccess.getDeclGranularityRule()); }
	 ruleDeclGranularity
{ after(grammarAccess.getDeclGranularityRule()); } 
	 EOF 
;

// Rule DeclGranularity
ruleDeclGranularity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclGranularityAccess().getGroup()); }
(rule__DeclGranularity__Group__0)
{ after(grammarAccess.getDeclGranularityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclExport
entryRuleDeclExport 
:
{ before(grammarAccess.getDeclExportRule()); }
	 ruleDeclExport
{ after(grammarAccess.getDeclExportRule()); } 
	 EOF 
;

// Rule DeclExport
ruleDeclExport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclExportAccess().getGroup()); }
(rule__DeclExport__Group__0)
{ after(grammarAccess.getDeclExportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclType
entryRuleDeclType 
:
{ before(grammarAccess.getDeclTypeRule()); }
	 ruleDeclType
{ after(grammarAccess.getDeclTypeRule()); } 
	 EOF 
;

// Rule DeclType
ruleDeclType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclTypeAccess().getGroup()); }
(rule__DeclType__Group__0)
{ after(grammarAccess.getDeclTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclVal
entryRuleDeclVal 
:
{ before(grammarAccess.getDeclValRule()); }
	 ruleDeclVal
{ after(grammarAccess.getDeclValRule()); } 
	 EOF 
;

// Rule DeclVal
ruleDeclVal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclValAccess().getAlternatives()); }
(rule__DeclVal__Alternatives)
{ after(grammarAccess.getDeclValAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExport
entryRuleExport 
:
{ before(grammarAccess.getExportRule()); }
	 ruleExport
{ after(grammarAccess.getExportRule()); } 
	 EOF 
;

// Rule Export
ruleExport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExportAccess().getGroup()); }
(rule__Export__Group__0)
{ after(grammarAccess.getExportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConDecls
entryRuleConDecls 
:
{ before(grammarAccess.getConDeclsRule()); }
	 ruleConDecls
{ after(grammarAccess.getConDeclsRule()); } 
	 EOF 
;

// Rule ConDecls
ruleConDecls
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConDeclsAccess().getGroup()); }
(rule__ConDecls__Group__0)
{ after(grammarAccess.getConDeclsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConDecl
entryRuleConDecl 
:
{ before(grammarAccess.getConDeclRule()); }
	 ruleConDecl
{ after(grammarAccess.getConDeclRule()); } 
	 EOF 
;

// Rule ConDecl
ruleConDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConDeclAccess().getGroup()); }
(rule__ConDecl__Group__0)
{ after(grammarAccess.getConDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTy
entryRuleTy 
:
{ before(grammarAccess.getTyRule()); }
	 ruleTy
{ after(grammarAccess.getTyRule()); } 
	 EOF 
;

// Rule Ty
ruleTy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTyAccess().getAlternatives()); }
(rule__Ty__Alternatives)
{ after(grammarAccess.getTyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTyElement
entryRuleTyElement 
:
{ before(grammarAccess.getTyElementRule()); }
	 ruleTyElement
{ after(grammarAccess.getTyElementRule()); } 
	 EOF 
;

// Rule TyElement
ruleTyElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTyElementAccess().getGroup()); }
(rule__TyElement__Group__0)
{ after(grammarAccess.getTyElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTyBind
entryRuleTyBind 
:
{ before(grammarAccess.getTyBindRule()); }
	 ruleTyBind
{ after(grammarAccess.getTyBindRule()); } 
	 EOF 
;

// Rule TyBind
ruleTyBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTyBindAccess().getGroup()); }
(rule__TyBind__Group__0)
{ after(grammarAccess.getTyBindAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecodePat
entryRuleDecodePat 
:
{ before(grammarAccess.getDecodePatRule()); }
	 ruleDecodePat
{ after(grammarAccess.getDecodePatRule()); } 
	 EOF 
;

// Rule DecodePat
ruleDecodePat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecodePatAccess().getAlternatives()); }
(rule__DecodePat__Alternatives)
{ after(grammarAccess.getDecodePatAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitPat
entryRuleBitPat 
:
{ before(grammarAccess.getBitPatRule()); }
	 ruleBitPat
{ after(grammarAccess.getBitPatRule()); } 
	 EOF 
;

// Rule BitPat
ruleBitPat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitPatAccess().getGroup()); }
(rule__BitPat__Group__0)
{ after(grammarAccess.getBitPatAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTokPat
entryRuleTokPat 
:
{ before(grammarAccess.getTokPatRule()); }
	 ruleTokPat
{ after(grammarAccess.getTokPatRule()); } 
	 EOF 
;

// Rule TokPat
ruleTokPat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTokPatAccess().getTokPatAssignment()); }
(rule__TokPat__TokPatAssignment)
{ after(grammarAccess.getTokPatAccess().getTokPatAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExp
entryRuleExp 
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpAccess().getAlternatives()); }
(rule__Exp__Alternatives)
{ after(grammarAccess.getExpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCaseExp
entryRuleCaseExp 
:
{ before(grammarAccess.getCaseExpRule()); }
	 ruleCaseExp
{ after(grammarAccess.getCaseExpRule()); } 
	 EOF 
;

// Rule CaseExp
ruleCaseExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseExpAccess().getAlternatives()); }
(rule__CaseExp__Alternatives)
{ after(grammarAccess.getCaseExpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosedExp
entryRuleClosedExp 
:
{ before(grammarAccess.getClosedExpRule()); }
	 ruleClosedExp
{ after(grammarAccess.getClosedExpRule()); } 
	 EOF 
;

// Rule ClosedExp
ruleClosedExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosedExpAccess().getAlternatives()); }
(rule__ClosedExp__Alternatives)
{ after(grammarAccess.getClosedExpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMonadicExp
entryRuleMonadicExp 
:
{ before(grammarAccess.getMonadicExpRule()); }
	 ruleMonadicExp
{ after(grammarAccess.getMonadicExpRule()); } 
	 EOF 
;

// Rule MonadicExp
ruleMonadicExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMonadicExpAccess().getAlternatives()); }
(rule__MonadicExp__Alternatives)
{ after(grammarAccess.getMonadicExpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCases
entryRuleCases 
:
{ before(grammarAccess.getCasesRule()); }
	 ruleCases
{ after(grammarAccess.getCasesRule()); } 
	 EOF 
;

// Rule Cases
ruleCases
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCasesAccess().getGroup()); }
(rule__Cases__Group__0)
{ after(grammarAccess.getCasesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrElseExp
entryRuleOrElseExp 
:
{ before(grammarAccess.getOrElseExpRule()); }
	 ruleOrElseExp
{ after(grammarAccess.getOrElseExpRule()); } 
	 EOF 
;

// Rule OrElseExp
ruleOrElseExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrElseExpAccess().getGroup()); }
(rule__OrElseExp__Group__0)
{ after(grammarAccess.getOrElseExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndAlsoExp
entryRuleAndAlsoExp 
:
{ before(grammarAccess.getAndAlsoExpRule()); }
	 ruleAndAlsoExp
{ after(grammarAccess.getAndAlsoExpRule()); } 
	 EOF 
;

// Rule AndAlsoExp
ruleAndAlsoExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndAlsoExpAccess().getGroup()); }
(rule__AndAlsoExp__Group__0)
{ after(grammarAccess.getAndAlsoExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRExp
entryRuleRExp 
:
{ before(grammarAccess.getRExpRule()); }
	 ruleRExp
{ after(grammarAccess.getRExpRule()); } 
	 EOF 
;

// Rule RExp
ruleRExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRExpAccess().getGroup()); }
(rule__RExp__Group__0)
{ after(grammarAccess.getRExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAExp
entryRuleAExp 
:
{ before(grammarAccess.getAExpRule()); }
	 ruleAExp
{ after(grammarAccess.getAExpRule()); } 
	 EOF 
;

// Rule AExp
ruleAExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAExpAccess().getGroup()); }
(rule__AExp__Group__0)
{ after(grammarAccess.getAExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMExp
entryRuleMExp 
:
{ before(grammarAccess.getMExpRule()); }
	 ruleMExp
{ after(grammarAccess.getMExpRule()); } 
	 EOF 
;

// Rule MExp
ruleMExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMExpAccess().getGroup()); }
(rule__MExp__Group__0)
{ after(grammarAccess.getMExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleApplyExp
entryRuleApplyExp 
:
{ before(grammarAccess.getApplyExpRule()); }
	 ruleApplyExp
{ after(grammarAccess.getApplyExpRule()); } 
	 EOF 
;

// Rule ApplyExp
ruleApplyExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getApplyExpAccess().getGroup()); }
(rule__ApplyExp__Group__0)
{ after(grammarAccess.getApplyExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicExp
entryRuleAtomicExp 
:
{ before(grammarAccess.getAtomicExpRule()); }
	 ruleAtomicExp
{ after(grammarAccess.getAtomicExpRule()); } 
	 EOF 
;

// Rule AtomicExp
ruleAtomicExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicExpAccess().getAlternatives()); }
(rule__AtomicExp__Alternatives)
{ after(grammarAccess.getAtomicExpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getAlternatives()); }
(rule__Field__Alternatives)
{ after(grammarAccess.getFieldAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueDecl
entryRuleValueDecl 
:
{ before(grammarAccess.getValueDeclRule()); }
	 ruleValueDecl
{ after(grammarAccess.getValueDeclRule()); } 
	 EOF 
;

// Rule ValueDecl
ruleValueDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueDeclAccess().getGroup()); }
(rule__ValueDecl__Group__0)
{ after(grammarAccess.getValueDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleString
entryRuleString 
:
{ before(grammarAccess.getStringRule()); }
	 ruleString
{ after(grammarAccess.getStringRule()); } 
	 EOF 
;

// Rule String
ruleString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringAccess().getGroup()); }
(rule__String__Group__0)
{ after(grammarAccess.getStringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePat
entryRulePat 
:
{ before(grammarAccess.getPatRule()); }
	 rulePat
{ after(grammarAccess.getPatRule()); } 
	 EOF 
;

// Rule Pat
rulePat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatAccess().getAlternatives()); }
(rule__Pat__Alternatives)
{ after(grammarAccess.getPatAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLit
entryRuleLit 
:
{ before(grammarAccess.getLitRule()); }
	 ruleLit
{ after(grammarAccess.getLitRule()); } 
	 EOF 
;

// Rule Lit
ruleLit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLitAccess().getAlternatives()); }
(rule__Lit__Alternatives)
{ after(grammarAccess.getLitAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimBitPat
entryRulePrimBitPat 
:
{ before(grammarAccess.getPrimBitPatRule()); }
	 rulePrimBitPat
{ after(grammarAccess.getPrimBitPatRule()); } 
	 EOF 
;

// Rule PrimBitPat
rulePrimBitPat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimBitPatAccess().getAlternatives()); }
(rule__PrimBitPat__Alternatives)
{ after(grammarAccess.getPrimBitPatAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitPatOrInt
entryRuleBitPatOrInt 
:
{ before(grammarAccess.getBitPatOrIntRule()); }
	 ruleBitPatOrInt
{ after(grammarAccess.getBitPatOrIntRule()); } 
	 EOF 
;

// Rule BitPatOrInt
ruleBitPatOrInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitPatOrIntAccess().getAlternatives()); }
(rule__BitPatOrInt__Alternatives)
{ after(grammarAccess.getBitPatOrIntAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInt
entryRuleInt 
:
{ before(grammarAccess.getIntRule()); }
	 ruleInt
{ after(grammarAccess.getIntRule()); } 
	 EOF 
;

// Rule Int
ruleInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntAccess().getAlternatives()); }
(rule__Int__Alternatives)
{ after(grammarAccess.getIntAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleName
entryRuleName 
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getIDParserRuleCall()); }
	ruleID
{ after(grammarAccess.getNameAccess().getIDParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConBind
entryRuleConBind 
:
{ before(grammarAccess.getConBindRule()); }
	 ruleConBind
{ after(grammarAccess.getConBindRule()); } 
	 EOF 
;

// Rule ConBind
ruleConBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConBindAccess().getCONSParserRuleCall()); }
	ruleCONS
{ after(grammarAccess.getConBindAccess().getCONSParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConUse
entryRuleConUse 
:
{ before(grammarAccess.getConUseRule()); }
	 ruleConUse
{ after(grammarAccess.getConUseRule()); } 
	 EOF 
;

// Rule ConUse
ruleConUse
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConUseAccess().getCONSParserRuleCall()); }
	ruleCONS
{ after(grammarAccess.getConUseAccess().getCONSParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQid
entryRuleQid 
:
{ before(grammarAccess.getQidRule()); }
	 ruleQid
{ after(grammarAccess.getQidRule()); } 
	 EOF 
;

// Rule Qid
ruleQid
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQidAccess().getIDParserRuleCall()); }
	ruleID
{ after(grammarAccess.getQidAccess().getIDParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePOSINT
entryRulePOSINT 
:
{ before(grammarAccess.getPOSINTRule()); }
	 rulePOSINT
{ after(grammarAccess.getPOSINTRule()); } 
	 EOF 
;

// Rule POSINT
rulePOSINT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPOSINTAccess().getAlternatives()); }
(rule__POSINT__Alternatives)
{ after(grammarAccess.getPOSINTAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNEGINT
entryRuleNEGINT 
:
{ before(grammarAccess.getNEGINTRule()); }
	 ruleNEGINT
{ after(grammarAccess.getNEGINTRule()); } 
	 EOF 
;

// Rule NEGINT
ruleNEGINT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNEGINTAccess().getGroup()); }
(rule__NEGINT__Group__0)
{ after(grammarAccess.getNEGINTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUM
entryRuleNUM 
:
{ before(grammarAccess.getNUMRule()); }
	 ruleNUM
{ after(grammarAccess.getNUMRule()); } 
	 EOF 
;

// Rule NUM
ruleNUM
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getNUMAccess().getDIGParserRuleCall()); }
(	ruleDIG)
{ after(grammarAccess.getNUMAccess().getDIGParserRuleCall()); }
)
(
{ before(grammarAccess.getNUMAccess().getDIGParserRuleCall()); }
(	ruleDIG)*
{ after(grammarAccess.getNUMAccess().getDIGParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHEXNUM
entryRuleHEXNUM 
:
{ before(grammarAccess.getHEXNUMRule()); }
	 ruleHEXNUM
{ after(grammarAccess.getHEXNUMRule()); } 
	 EOF 
;

// Rule HEXNUM
ruleHEXNUM
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHEXNUMAccess().getGroup()); }
(rule__HEXNUM__Group__0)
{ after(grammarAccess.getHEXNUMAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleBITSTR
entryRuleBITSTR 
:
{ before(grammarAccess.getBITSTRRule()); }
	 ruleBITSTR
{ after(grammarAccess.getBITSTRRule()); } 
	 EOF 
;

// Rule BITSTR
ruleBITSTR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getBITSTRAccess().getBINARYParserRuleCall()); }
(	ruleBINARY)
{ after(grammarAccess.getBITSTRAccess().getBINARYParserRuleCall()); }
)
(
{ before(grammarAccess.getBITSTRAccess().getBINARYParserRuleCall()); }
(	ruleBINARY)*
{ after(grammarAccess.getBITSTRAccess().getBINARYParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMIXID
entryRuleMIXID 
:
{ before(grammarAccess.getMIXIDRule()); }
	 ruleMIXID
{ after(grammarAccess.getMIXIDRule()); } 
	 EOF 
;

// Rule MIXID
ruleMIXID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMIXIDAccess().getGroup()); }
(rule__MIXID__Group__0)
{ after(grammarAccess.getMIXIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCONS
entryRuleCONS 
:
{ before(grammarAccess.getCONSRule()); }
	 ruleCONS
{ after(grammarAccess.getCONSRule()); } 
	 EOF 
;

// Rule CONS
ruleCONS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCONSAccess().getGroup()); }
(rule__CONS__Group__0)
{ after(grammarAccess.getCONSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleID
entryRuleID 
:
{ before(grammarAccess.getIDRule()); }
	 ruleID
{ after(grammarAccess.getIDRule()); } 
	 EOF 
;

// Rule ID
ruleID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIDAccess().getGroup()); }
(rule__ID__Group__0)
{ after(grammarAccess.getIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTRCHAR
entryRuleSTRCHAR 
:
{ before(grammarAccess.getSTRCHARRule()); }
	 ruleSTRCHAR
{ after(grammarAccess.getSTRCHARRule()); } 
	 EOF 
;

// Rule STRCHAR
ruleSTRCHAR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTRCHARAccess().getLETTERParserRuleCall()); }
	ruleLETTER
{ after(grammarAccess.getSTRCHARAccess().getLETTERParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHEXDIGIT
entryRuleHEXDIGIT 
:
{ before(grammarAccess.getHEXDIGITRule()); }
	 ruleHEXDIGIT
{ after(grammarAccess.getHEXDIGITRule()); } 
	 EOF 
;

// Rule HEXDIGIT
ruleHEXDIGIT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHEXDIGITAccess().getAlternatives()); }
(rule__HEXDIGIT__Alternatives)
{ after(grammarAccess.getHEXDIGITAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHEXCHAR
entryRuleHEXCHAR 
:
{ before(grammarAccess.getHEXCHARRule()); }
	 ruleHEXCHAR
{ after(grammarAccess.getHEXCHARRule()); } 
	 EOF 
;

// Rule HEXCHAR
ruleHEXCHAR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHEXCHARAccess().getAlternatives()); }
(rule__HEXCHAR__Alternatives)
{ after(grammarAccess.getHEXCHARAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleULETTER
entryRuleULETTER 
:
{ before(grammarAccess.getULETTERRule()); }
	 ruleULETTER
{ after(grammarAccess.getULETTERRule()); } 
	 EOF 
;

// Rule ULETTER
ruleULETTER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getULETTERAccess().getAlternatives()); }
(rule__ULETTER__Alternatives)
{ after(grammarAccess.getULETTERAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLETTER
entryRuleLETTER 
:
{ before(grammarAccess.getLETTERRule()); }
	 ruleLETTER
{ after(grammarAccess.getLETTERRule()); } 
	 EOF 
;

// Rule LETTER
ruleLETTER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLETTERAccess().getAlternatives()); }
(rule__LETTER__Alternatives)
{ after(grammarAccess.getLETTERAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIDCHAR
entryRuleIDCHAR 
:
{ before(grammarAccess.getIDCHARRule()); }
	 ruleIDCHAR
{ after(grammarAccess.getIDCHARRule()); } 
	 EOF 
;

// Rule IDCHAR
ruleIDCHAR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIDCHARAccess().getAlternatives()); }
(rule__IDCHAR__Alternatives)
{ after(grammarAccess.getIDCHARAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBINARY
entryRuleBINARY 
:
{ before(grammarAccess.getBINARYRule()); }
	 ruleBINARY
{ after(grammarAccess.getBINARYRule()); } 
	 EOF 
;

// Rule BINARY
ruleBINARY
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBINARYAccess().getAlternatives()); }
(rule__BINARY__Alternatives)
{ after(grammarAccess.getBINARYAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDIG
entryRuleDIG 
:
{ before(grammarAccess.getDIGRule()); }
	 ruleDIG
{ after(grammarAccess.getDIGRule()); } 
	 EOF 
;

// Rule DIG
ruleDIG
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDIGAccess().getAlternatives()); }
(rule__DIG__Alternatives)
{ after(grammarAccess.getDIGAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSYM
entryRuleSYM 
:
{ before(grammarAccess.getSYMRule()); }
	 ruleSYM
{ after(grammarAccess.getSYMRule()); } 
	 EOF 
;

// Rule SYM
ruleSYM
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSYMAccess().getAlternatives()); }
(rule__SYM__Alternatives)
{ after(grammarAccess.getSYMAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Decl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getDeclGranularityParserRuleCall_0()); }
	ruleDeclGranularity
{ after(grammarAccess.getDeclAccess().getDeclGranularityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclAccess().getDeclExportParserRuleCall_1()); }
	ruleDeclExport
{ after(grammarAccess.getDeclAccess().getDeclExportParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeclAccess().getDeclTypeParserRuleCall_2()); }
	ruleDeclType
{ after(grammarAccess.getDeclAccess().getDeclTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDeclAccess().getDeclValParserRuleCall_3()); }
	ruleDeclVal
{ after(grammarAccess.getDeclAccess().getDeclValParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAlternatives_2_0()); }
(rule__DeclType__Alternatives_2_0)
{ after(grammarAccess.getDeclTypeAccess().getAlternatives_2_0()); }
)

    |(
{ before(grammarAccess.getDeclTypeAccess().getGroup_2_1()); }
(rule__DeclType__Group_2_1__0)
{ after(grammarAccess.getDeclTypeAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getGroup_2_0_0()); }
(rule__DeclType__Group_2_0_0__0)
{ after(grammarAccess.getDeclTypeAccess().getGroup_2_0_0()); }
)

    |(
{ before(grammarAccess.getDeclTypeAccess().getValueAssignment_2_0_1()); }
(rule__DeclType__ValueAssignment_2_0_1)
{ after(grammarAccess.getDeclTypeAccess().getValueAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getGroup_0()); }
(rule__DeclVal__Group_0__0)
{ after(grammarAccess.getDeclValAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDeclValAccess().getGroup_1()); }
(rule__DeclVal__Group_1__0)
{ after(grammarAccess.getDeclValAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDeclValAccess().getGroup_2()); }
(rule__DeclVal__Group_2__0)
{ after(grammarAccess.getDeclValAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameAssignment_0_1_0()); }
(rule__DeclVal__NameAssignment_0_1_0)
{ after(grammarAccess.getDeclValAccess().getNameAssignment_0_1_0()); }
)

    |(
{ before(grammarAccess.getDeclValAccess().getNameAssignment_0_1_1()); }
(rule__DeclVal__NameAssignment_0_1_1)
{ after(grammarAccess.getDeclValAccess().getNameAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Alternatives_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getGroup_2_5_0()); }
(rule__DeclVal__Group_2_5_0__0)
{ after(grammarAccess.getDeclValAccess().getGroup_2_5_0()); }
)

    |(
(
{ before(grammarAccess.getDeclValAccess().getGroup_2_5_1()); }
(rule__DeclVal__Group_2_5_1__0)
{ after(grammarAccess.getDeclValAccess().getGroup_2_5_1()); }
)
(
{ before(grammarAccess.getDeclValAccess().getGroup_2_5_1()); }
(rule__DeclVal__Group_2_5_1__0)*
{ after(grammarAccess.getDeclValAccess().getGroup_2_5_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueAssignment_0()); }
(rule__Ty__ValueAssignment_0)
{ after(grammarAccess.getTyAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getTyAccess().getGroup_1()); }
(rule__Ty__Group_1__0)
{ after(grammarAccess.getTyAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTyAccess().getGroup_2()); }
(rule__Ty__Group_2__0)
{ after(grammarAccess.getTyAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTyAccess().getGroup_3()); }
(rule__Ty__Group_3__0)
{ after(grammarAccess.getTyAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecodePat__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecodePatAccess().getBitPatParserRuleCall_0()); }
	ruleBitPat
{ after(grammarAccess.getDecodePatAccess().getBitPatParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDecodePatAccess().getTokPatParserRuleCall_1()); }
	ruleTokPat
{ after(grammarAccess.getDecodePatAccess().getTokPatParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TokPat__TokPatAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokPatAccess().getTokPatIntParserRuleCall_0_0()); }
	ruleInt
{ after(grammarAccess.getTokPatAccess().getTokPatIntParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getTokPatAccess().getTokPatQidParserRuleCall_0_1()); }
	ruleQid
{ after(grammarAccess.getTokPatAccess().getTokPatQidParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getCaseExpAssignment_0()); }
(rule__Exp__CaseExpAssignment_0)
{ after(grammarAccess.getExpAccess().getCaseExpAssignment_0()); }
)

    |(
{ before(grammarAccess.getExpAccess().getGroup_1()); }
(rule__Exp__Group_1__0)
{ after(grammarAccess.getExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpAccess().getClosedExpParserRuleCall_0()); }
	ruleClosedExp
{ after(grammarAccess.getCaseExpAccess().getClosedExpParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCaseExpAccess().getGroup_1()); }
(rule__CaseExp__Group_1__0)
{ after(grammarAccess.getCaseExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getOrElseExpParserRuleCall_0()); }
	ruleOrElseExp
{ after(grammarAccess.getClosedExpAccess().getOrElseExpParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClosedExpAccess().getGroup_1()); }
(rule__ClosedExp__Group_1__0)
{ after(grammarAccess.getClosedExpAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getClosedExpAccess().getGroup_2()); }
(rule__ClosedExp__Group_2__0)
{ after(grammarAccess.getClosedExpAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MonadicExp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonadicExpAccess().getExpAssignment_0()); }
(rule__MonadicExp__ExpAssignment_0)
{ after(grammarAccess.getMonadicExpAccess().getExpAssignment_0()); }
)

    |(
{ before(grammarAccess.getMonadicExpAccess().getGroup_1()); }
(rule__MonadicExp__Group_1__0)
{ after(grammarAccess.getMonadicExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AExp__SignAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAExpAccess().getSignPlusSignKeyword_1_0_0_0()); }

	'+' 

{ after(grammarAccess.getAExpAccess().getSignPlusSignKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getAExpAccess().getSignHyphenMinusKeyword_1_0_0_1()); }

	'-' 

{ after(grammarAccess.getAExpAccess().getSignHyphenMinusKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getGroup_0()); }
(rule__AtomicExp__Group_0__0)
{ after(grammarAccess.getAtomicExpAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getGroup_1()); }
(rule__AtomicExp__Group_1__0)
{ after(grammarAccess.getAtomicExpAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getGroup_2()); }
(rule__AtomicExp__Group_2__0)
{ after(grammarAccess.getAtomicExpAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getGroup_3()); }
(rule__AtomicExp__Group_3__0)
{ after(grammarAccess.getAtomicExpAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getGroup_4()); }
(rule__AtomicExp__Group_4__0)
{ after(grammarAccess.getAtomicExpAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getGroup_5()); }
(rule__AtomicExp__Group_5__0)
{ after(grammarAccess.getAtomicExpAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getGroup_6()); }
(rule__AtomicExp__Group_6__0)
{ after(grammarAccess.getAtomicExpAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getGroup_7()); }
(rule__AtomicExp__Group_7__0)
{ after(grammarAccess.getAtomicExpAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getAtomicExpAccess().getGroup_8()); }
(rule__AtomicExp__Group_8__0)
{ after(grammarAccess.getAtomicExpAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getGroup_0()); }
(rule__Field__Group_0__0)
{ after(grammarAccess.getFieldAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFieldAccess().getGroup_1()); }
(rule__Field__Group_1__0)
{ after(grammarAccess.getFieldAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pat__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatAccess().get_Keyword_0()); }

	'_' 

{ after(grammarAccess.getPatAccess().get_Keyword_0()); }
)

    |(
{ before(grammarAccess.getPatAccess().getLitParserRuleCall_1()); }
	ruleLit
{ after(grammarAccess.getPatAccess().getLitParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPatAccess().getNameParserRuleCall_2()); }
(	ruleName)
{ after(grammarAccess.getPatAccess().getNameParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPatAccess().getGroup_3()); }
(rule__Pat__Group_3__0)
{ after(grammarAccess.getPatAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lit__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLitAccess().getIntParserRuleCall_0()); }
	ruleInt
{ after(grammarAccess.getLitAccess().getIntParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLitAccess().getGroup_1()); }
(rule__Lit__Group_1__0)
{ after(grammarAccess.getLitAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimBitPat__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimBitPatAccess().getBITSTRParserRuleCall_0()); }
(	ruleBITSTR)
{ after(grammarAccess.getPrimBitPatAccess().getBITSTRParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimBitPatAccess().getGroup_1()); }
(rule__PrimBitPat__Group_1__0)
{ after(grammarAccess.getPrimBitPatAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitPatOrInt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatOrIntAccess().getGroup_0()); }
(rule__BitPatOrInt__Group_0__0)
{ after(grammarAccess.getBitPatOrIntAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBitPatOrIntAccess().getGroup_1()); }
(rule__BitPatOrInt__Group_1__0)
{ after(grammarAccess.getBitPatOrIntAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Int__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntAccess().getPOSINTParserRuleCall_0()); }
	rulePOSINT
{ after(grammarAccess.getIntAccess().getPOSINTParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntAccess().getNEGINTParserRuleCall_1()); }
	ruleNEGINT
{ after(grammarAccess.getIntAccess().getNEGINTParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__POSINT__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPOSINTAccess().getNUMParserRuleCall_0()); }
	ruleNUM
{ after(grammarAccess.getPOSINTAccess().getNUMParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPOSINTAccess().getHEXNUMParserRuleCall_1()); }
	ruleHEXNUM
{ after(grammarAccess.getPOSINTAccess().getHEXNUMParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HEXDIGIT__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHEXDIGITAccess().getDIGParserRuleCall_0()); }
	ruleDIG
{ after(grammarAccess.getHEXDIGITAccess().getDIGParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getHEXDIGITAccess().getHEXCHARParserRuleCall_1()); }
	ruleHEXCHAR
{ after(grammarAccess.getHEXDIGITAccess().getHEXCHARParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HEXCHAR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHEXCHARAccess().getLHEXCHARTerminalRuleCall_0()); }
	RULE_LHEXCHAR
{ after(grammarAccess.getHEXCHARAccess().getLHEXCHARTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getHEXCHARAccess().getUHEXCHARTerminalRuleCall_1()); }
	RULE_UHEXCHAR
{ after(grammarAccess.getHEXCHARAccess().getUHEXCHARTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ULETTER__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getULETTERAccess().getUHEXCHARTerminalRuleCall_0()); }
	RULE_UHEXCHAR
{ after(grammarAccess.getULETTERAccess().getUHEXCHARTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getULETTERAccess().getUNHEXCHARTerminalRuleCall_1()); }
	RULE_UNHEXCHAR
{ after(grammarAccess.getULETTERAccess().getUNHEXCHARTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LETTER__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLETTERAccess().getLHEXCHARTerminalRuleCall_0()); }
	RULE_LHEXCHAR
{ after(grammarAccess.getLETTERAccess().getLHEXCHARTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLETTERAccess().getLNHEXCHARTerminalRuleCall_1()); }
	RULE_LNHEXCHAR
{ after(grammarAccess.getLETTERAccess().getLNHEXCHARTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLETTERAccess().getULETTERParserRuleCall_2()); }
	ruleULETTER
{ after(grammarAccess.getLETTERAccess().getULETTERParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLETTERAccess().getSLASHTerminalRuleCall_3()); }
	RULE_SLASH
{ after(grammarAccess.getLETTERAccess().getSLASHTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IDCHAR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIDCHARAccess().getLETTERParserRuleCall_0()); }
	ruleLETTER
{ after(grammarAccess.getIDCHARAccess().getLETTERParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIDCHARAccess().getDIGParserRuleCall_1()); }
	ruleDIG
{ after(grammarAccess.getIDCHARAccess().getDIGParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIDCHARAccess().getCHARSYMTerminalRuleCall_2()); }
	RULE_CHARSYM
{ after(grammarAccess.getIDCHARAccess().getCHARSYMTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BINARY__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBINARYAccess().getBINDIGTerminalRuleCall_0()); }
	RULE_BINDIG
{ after(grammarAccess.getBINARYAccess().getBINDIGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBINARYAccess().getBSTerminalRuleCall_1()); }
	RULE_BS
{ after(grammarAccess.getBINARYAccess().getBSTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBINARYAccess().getDOTTerminalRuleCall_2()); }
	RULE_DOT
{ after(grammarAccess.getBINARYAccess().getDOTTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getBINARYAccess().getPIPETerminalRuleCall_3()); }
	RULE_PIPE
{ after(grammarAccess.getBINARYAccess().getPIPETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DIG__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDIGAccess().getBINDIGTerminalRuleCall_0()); }
	RULE_BINDIG
{ after(grammarAccess.getDIGAccess().getBINDIGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDIGAccess().getNBINDIGTerminalRuleCall_1()); }
	RULE_NBINDIG
{ after(grammarAccess.getDIGAccess().getNBINDIGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SYM__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSYMAccess().getBSTerminalRuleCall_0()); }
	RULE_BS
{ after(grammarAccess.getSYMAccess().getBSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSYMAccess().getSLASHTerminalRuleCall_1()); }
	RULE_SLASH
{ after(grammarAccess.getSYMAccess().getSLASHTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSYMAccess().getDOTTerminalRuleCall_2()); }
	RULE_DOT
{ after(grammarAccess.getSYMAccess().getDOTTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSYMAccess().getCHARSYMTerminalRuleCall_3()); }
	RULE_CHARSYM
{ after(grammarAccess.getSYMAccess().getCHARSYMTerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getSYMAccess().getOTHERSYMTerminalRuleCall_4()); }
	RULE_OTHERSYM
{ after(grammarAccess.getSYMAccess().getOTHERSYMTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclAssignment_0()); }
(rule__Model__DeclAssignment_0)
{ after(grammarAccess.getModelAccess().getDeclAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_1()); }
(rule__Model__Group_1__0)*
{ after(grammarAccess.getModelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Model__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__0__Impl
	rule__Model__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSemicolonKeyword_1_0()); }
(
	';' 
)?
{ after(grammarAccess.getModelAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclAssignment_1_1()); }
(rule__Model__DeclAssignment_1_1)
{ after(grammarAccess.getModelAccess().getDeclAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclGranularity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclGranularity__Group__0__Impl
	rule__DeclGranularity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getNameAssignment_0()); }
(rule__DeclGranularity__NameAssignment_0)
{ after(grammarAccess.getDeclGranularityAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclGranularity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclGranularity__Group__1__Impl
	rule__DeclGranularity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDeclGranularityAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclGranularity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclGranularity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getGranularityAssignment_2()); }
(rule__DeclGranularity__GranularityAssignment_2)
{ after(grammarAccess.getDeclGranularityAccess().getGranularityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeclExport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclExport__Group__0__Impl
	rule__DeclExport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getNameAssignment_0()); }
(rule__DeclExport__NameAssignment_0)
{ after(grammarAccess.getDeclExportAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclExport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclExport__Group__1__Impl
	rule__DeclExport__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDeclExportAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclExport__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclExport__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getExportsAssignment_2()); }
(rule__DeclExport__ExportsAssignment_2)*
{ after(grammarAccess.getDeclExportAccess().getExportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeclType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group__0__Impl
	rule__DeclType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getDeclTypeAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group__1__Impl
	rule__DeclType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getNameAssignment_1()); }
(rule__DeclType__NameAssignment_1)
{ after(grammarAccess.getDeclTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAlternatives_2()); }
(rule__DeclType__Alternatives_2)
{ after(grammarAccess.getDeclTypeAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeclType__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_0_0__0__Impl
	rule__DeclType__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_2_0_0_0()); }

	'=' 

{ after(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueAssignment_2_0_0_1()); }
(rule__DeclType__ValueAssignment_2_0_0_1)
{ after(grammarAccess.getDeclTypeAccess().getValueAssignment_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclType__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__0__Impl
	rule__DeclType__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getLeftSquareBracketKeyword_2_1_0()); }

	'[' 

{ after(grammarAccess.getDeclTypeAccess().getLeftSquareBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__1__Impl
	rule__DeclType__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_2_1_1()); }
(rule__DeclType__AttrNameAssignment_2_1_1)
{ after(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__2__Impl
	rule__DeclType__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getGroup_2_1_2()); }
(rule__DeclType__Group_2_1_2__0)*
{ after(grammarAccess.getDeclTypeAccess().getGroup_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__3__Impl
	rule__DeclType__Group_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getRightSquareBracketKeyword_2_1_3()); }

	']' 

{ after(grammarAccess.getDeclTypeAccess().getRightSquareBracketKeyword_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__4__Impl
	rule__DeclType__Group_2_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_2_1_4()); }

	'=' 

{ after(grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_2_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueAssignment_2_1_5()); }
(rule__DeclType__ValueAssignment_2_1_5)
{ after(grammarAccess.getDeclTypeAccess().getValueAssignment_2_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DeclType__Group_2_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1_2__0__Impl
	rule__DeclType__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getCommaKeyword_2_1_2_0()); }

	',' 

{ after(grammarAccess.getDeclTypeAccess().getCommaKeyword_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclType__Group_2_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclType__Group_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__Group_2_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_2_1_2_1()); }
(rule__DeclType__AttrNameAssignment_2_1_2_1)
{ after(grammarAccess.getDeclTypeAccess().getAttrNameAssignment_2_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclVal__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_0__0__Impl
	rule__DeclVal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getValKeyword_0_0()); }

	'val' 

{ after(grammarAccess.getDeclValAccess().getValKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_0__1__Impl
	rule__DeclVal__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAlternatives_0_1()); }
(rule__DeclVal__Alternatives_0_1)
{ after(grammarAccess.getDeclValAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_0__2__Impl
	rule__DeclVal__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAttrAssignment_0_2()); }
(rule__DeclVal__AttrAssignment_0_2)*
{ after(grammarAccess.getDeclValAccess().getAttrAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_0__3__Impl
	rule__DeclVal__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getEqualsSignKeyword_0_3()); }

	'=' 

{ after(grammarAccess.getDeclValAccess().getEqualsSignKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpAssignment_0_4()); }
(rule__DeclVal__ExpAssignment_0_4)
{ after(grammarAccess.getDeclValAccess().getExpAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DeclVal__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1__0__Impl
	rule__DeclVal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getValKeyword_1_0()); }

	'val' 

{ after(grammarAccess.getDeclValAccess().getValKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1__1__Impl
	rule__DeclVal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getGroup_1_1()); }
(rule__DeclVal__Group_1_1__0)*
{ after(grammarAccess.getDeclValAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1__2__Impl
	rule__DeclVal__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getEqualsSignKeyword_1_2()); }

	'=' 

{ after(grammarAccess.getDeclValAccess().getEqualsSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpAssignment_1_3()); }
(rule__DeclVal__ExpAssignment_1_3)
{ after(grammarAccess.getDeclValAccess().getExpAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DeclVal__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1_1__0__Impl
	rule__DeclVal__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getMidAssignment_1_1_0()); }
(rule__DeclVal__MidAssignment_1_1_0)
{ after(grammarAccess.getDeclValAccess().getMidAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAttrAssignment_1_1_1()); }
(rule__DeclVal__AttrAssignment_1_1_1)
{ after(grammarAccess.getDeclValAccess().getAttrAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclVal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2__0__Impl
	rule__DeclVal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getValKeyword_2_0()); }

	'val' 

{ after(grammarAccess.getDeclValAccess().getValKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2__1__Impl
	rule__DeclVal__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameAssignment_2_1()); }
(rule__DeclVal__NameAssignment_2_1)
{ after(grammarAccess.getDeclValAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2__2__Impl
	rule__DeclVal__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getLeftSquareBracketKeyword_2_2()); }

	'[' 

{ after(grammarAccess.getDeclValAccess().getLeftSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2__3__Impl
	rule__DeclVal__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getGroup_2_3()); }
(rule__DeclVal__Group_2_3__0)?
{ after(grammarAccess.getDeclValAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2__4__Impl
	rule__DeclVal__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getRightSquareBracketKeyword_2_4()); }

	']' 

{ after(grammarAccess.getDeclValAccess().getRightSquareBracketKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAlternatives_2_5()); }
(rule__DeclVal__Alternatives_2_5)
{ after(grammarAccess.getDeclValAccess().getAlternatives_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DeclVal__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2_3__0__Impl
	rule__DeclVal__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getDecPatAssignment_2_3_0()); }
(rule__DeclVal__DecPatAssignment_2_3_0)
{ after(grammarAccess.getDeclValAccess().getDecPatAssignment_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getDecPatAssignment_2_3_1()); }
(rule__DeclVal__DecPatAssignment_2_3_1)*
{ after(grammarAccess.getDeclValAccess().getDecPatAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclVal__Group_2_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2_5_0__0__Impl
	rule__DeclVal__Group_2_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getEqualsSignKeyword_2_5_0_0()); }

	'=' 

{ after(grammarAccess.getDeclValAccess().getEqualsSignKeyword_2_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_2_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2_5_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpAssignment_2_5_0_1()); }
(rule__DeclVal__ExpAssignment_2_5_0_1)
{ after(grammarAccess.getDeclValAccess().getExpAssignment_2_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclVal__Group_2_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2_5_1__0__Impl
	rule__DeclVal__Group_2_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getPIPETerminalRuleCall_2_5_1_0()); }
	RULE_PIPE
{ after(grammarAccess.getDeclValAccess().getPIPETerminalRuleCall_2_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_2_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2_5_1__1__Impl
	rule__DeclVal__Group_2_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpsAssignment_2_5_1_1()); }
(rule__DeclVal__ExpsAssignment_2_5_1_1)
{ after(grammarAccess.getDeclValAccess().getExpsAssignment_2_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_2_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2_5_1__2__Impl
	rule__DeclVal__Group_2_5_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getEqualsSignKeyword_2_5_1_2()); }

	'=' 

{ after(grammarAccess.getDeclValAccess().getEqualsSignKeyword_2_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVal__Group_2_5_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclVal__Group_2_5_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__Group_2_5_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpsAssignment_2_5_1_3()); }
(rule__DeclVal__ExpsAssignment_2_5_1_3)
{ after(grammarAccess.getDeclValAccess().getExpsAssignment_2_5_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Export__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__0__Impl
	rule__Export__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getNameAssignment_0()); }
(rule__Export__NameAssignment_0)
{ after(grammarAccess.getExportAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getGroup_1()); }
(rule__Export__Group_1__0)?
{ after(grammarAccess.getExportAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Export__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__0__Impl
	rule__Export__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__1__Impl
	rule__Export__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameAssignment_1_1()); }
(rule__Export__AttrNameAssignment_1_1)
{ after(grammarAccess.getExportAccess().getAttrNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__2__Impl
	rule__Export__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getGroup_1_2()); }
(rule__Export__Group_1_2__0)*
{ after(grammarAccess.getExportAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_3()); }

	'}' 

{ after(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Export__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1_2__0__Impl
	rule__Export__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getExportAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameAssignment_1_2_1()); }
(rule__Export__AttrNameAssignment_1_2_1)
{ after(grammarAccess.getExportAccess().getAttrNameAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecls__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group__0__Impl
	rule__ConDecls__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsAssignment_0()); }
(rule__ConDecls__ConDeclsAssignment_0)
{ after(grammarAccess.getConDeclsAccess().getConDeclsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecls__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getGroup_1()); }
(rule__ConDecls__Group_1__0)*
{ after(grammarAccess.getConDeclsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecls__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group_1__0__Impl
	rule__ConDecls__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getPIPETerminalRuleCall_1_0()); }
	RULE_PIPE
{ after(grammarAccess.getConDeclsAccess().getPIPETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecls__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecls__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsAssignment_1_1()); }
(rule__ConDecls__ConDeclsAssignment_1_1)
{ after(grammarAccess.getConDeclsAccess().getConDeclsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group__0__Impl
	rule__ConDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getNameAssignment_0()); }
(rule__ConDecl__NameAssignment_0)
{ after(grammarAccess.getConDeclAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getGroup_1()); }
(rule__ConDecl__Group_1__0)?
{ after(grammarAccess.getConDeclAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group_1__0__Impl
	rule__ConDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getOfKeyword_1_0()); }

	'of' 

{ after(grammarAccess.getConDeclAccess().getOfKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getTyAssignment_1_1()); }
(rule__ConDecl__TyAssignment_1_1)
{ after(grammarAccess.getConDeclAccess().getTyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ty__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_1__0__Impl
	rule__Ty__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getPIPETerminalRuleCall_1_0()); }
	RULE_PIPE
{ after(grammarAccess.getTyAccess().getPIPETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_1__1__Impl
	rule__Ty__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueAssignment_1_1()); }
(rule__Ty__ValueAssignment_1_1)
{ after(grammarAccess.getTyAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getPIPETerminalRuleCall_1_2()); }
	RULE_PIPE
{ after(grammarAccess.getTyAccess().getPIPETerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ty__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2__0__Impl
	rule__Ty__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueAssignment_2_0()); }
(rule__Ty__ValueAssignment_2_0)
{ after(grammarAccess.getTyAccess().getValueAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getGroup_2_1()); }
(rule__Ty__Group_2_1__0)?
{ after(grammarAccess.getTyAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ty__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__0__Impl
	rule__Ty__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getLeftSquareBracketKeyword_2_1_0()); }

	'[' 

{ after(grammarAccess.getTyAccess().getLeftSquareBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__1__Impl
	rule__Ty__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindAssignment_2_1_1()); }
(rule__Ty__TyBindAssignment_2_1_1)
{ after(grammarAccess.getTyAccess().getTyBindAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__2__Impl
	rule__Ty__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getGroup_2_1_2()); }
(rule__Ty__Group_2_1_2__0)*
{ after(grammarAccess.getTyAccess().getGroup_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getRightSquareBracketKeyword_2_1_3()); }

	']' 

{ after(grammarAccess.getTyAccess().getRightSquareBracketKeyword_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Ty__Group_2_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1_2__0__Impl
	rule__Ty__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getCommaKeyword_2_1_2_0()); }

	',' 

{ after(grammarAccess.getTyAccess().getCommaKeyword_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_2_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_2_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindAssignment_2_1_2_1()); }
(rule__Ty__TyBindAssignment_2_1_2_1)
{ after(grammarAccess.getTyAccess().getTyBindAssignment_2_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ty__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__0__Impl
	rule__Ty__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getTyAccess().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__1__Impl
	rule__Ty__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsAssignment_3_1()); }
(rule__Ty__ElementsAssignment_3_1)
{ after(grammarAccess.getTyAccess().getElementsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__2__Impl
	rule__Ty__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getGroup_3_2()); }
(rule__Ty__Group_3_2__0)*
{ after(grammarAccess.getTyAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getRightCurlyBracketKeyword_3_3()); }

	'}' 

{ after(grammarAccess.getTyAccess().getRightCurlyBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Ty__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3_2__0__Impl
	rule__Ty__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getTyAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ty__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ty__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsAssignment_3_2_1()); }
(rule__Ty__ElementsAssignment_3_2_1)
{ after(grammarAccess.getTyAccess().getElementsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TyElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyElement__Group__0__Impl
	rule__TyElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getNameAssignment_0()); }
(rule__TyElement__NameAssignment_0)
{ after(grammarAccess.getTyElementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyElement__Group__1__Impl
	rule__TyElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTyElementAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getValueAssignment_2()); }
(rule__TyElement__ValueAssignment_2)
{ after(grammarAccess.getTyElementAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TyBind__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group__0__Impl
	rule__TyBind__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getKeyAssignment_0()); }
(rule__TyBind__KeyAssignment_0)
{ after(grammarAccess.getTyBindAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyBind__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getGroup_1()); }
(rule__TyBind__Group_1__0)?
{ after(grammarAccess.getTyBindAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TyBind__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group_1__0__Impl
	rule__TyBind__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getTyBindAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TyBind__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TyBind__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getValueAssignment_1_1()); }
(rule__TyBind__ValueAssignment_1_1)
{ after(grammarAccess.getTyBindAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitPat__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPat__Group__0__Impl
	rule__BitPat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getApostropheKeyword_0()); }

	'\'' 

{ after(grammarAccess.getBitPatAccess().getApostropheKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitPat__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPat__Group__1__Impl
	rule__BitPat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getBitpatAssignment_1()); }
(rule__BitPat__BitpatAssignment_1)
{ after(grammarAccess.getBitPatAccess().getBitpatAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitPat__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPat__Group__2__Impl
	rule__BitPat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getBitpatAssignment_2()); }
(rule__BitPat__BitpatAssignment_2)*
{ after(grammarAccess.getBitPatAccess().getBitpatAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitPat__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPat__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getApostropheKeyword_3()); }

	'\'' 

{ after(grammarAccess.getBitPatAccess().getApostropheKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Exp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group_1__0__Impl
	rule__Exp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getMidAssignment_1_0()); }
(rule__Exp__MidAssignment_1_0)
{ after(grammarAccess.getExpAccess().getMidAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getCaseExpAssignment_1_1()); }
(rule__Exp__CaseExpAssignment_1_1)
{ after(grammarAccess.getExpAccess().getCaseExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CaseExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExp__Group_1__0__Impl
	rule__CaseExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpAccess().getCaseKeyword_1_0()); }

	'case' 

{ after(grammarAccess.getCaseExpAccess().getCaseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExp__Group_1__1__Impl
	rule__CaseExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpAccess().getClosedExpAssignment_1_1()); }
(rule__CaseExp__ClosedExpAssignment_1_1)
{ after(grammarAccess.getCaseExpAccess().getClosedExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExp__Group_1__2__Impl
	rule__CaseExp__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpAccess().getOfKeyword_1_2()); }

	'of' 

{ after(grammarAccess.getCaseExpAccess().getOfKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExp__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExp__Group_1__3__Impl
	rule__CaseExp__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExp__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpAccess().getCasesAssignment_1_3()); }
(rule__CaseExp__CasesAssignment_1_3)
{ after(grammarAccess.getCaseExpAccess().getCasesAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExp__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExp__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExp__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpAccess().getEndKeyword_1_4()); }

	'end' 

{ after(grammarAccess.getCaseExpAccess().getEndKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClosedExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_1__0__Impl
	rule__ClosedExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getIfKeyword_1_0()); }

	'if' 

{ after(grammarAccess.getClosedExpAccess().getIfKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_1__1__Impl
	rule__ClosedExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getIfCaseExpAssignment_1_1()); }
(rule__ClosedExp__IfCaseExpAssignment_1_1)
{ after(grammarAccess.getClosedExpAccess().getIfCaseExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_1__2__Impl
	rule__ClosedExp__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getThenKeyword_1_2()); }

	'then' 

{ after(grammarAccess.getClosedExpAccess().getThenKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedExp__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_1__3__Impl
	rule__ClosedExp__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getThenCaseExpAssignment_1_3()); }
(rule__ClosedExp__ThenCaseExpAssignment_1_3)
{ after(grammarAccess.getClosedExpAccess().getThenCaseExpAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedExp__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_1__4__Impl
	rule__ClosedExp__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getElseKeyword_1_4()); }

	'else' 

{ after(grammarAccess.getClosedExpAccess().getElseKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedExp__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getElseCaseExpAssignment_1_5()); }
(rule__ClosedExp__ElseCaseExpAssignment_1_5)
{ after(grammarAccess.getClosedExpAccess().getElseCaseExpAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ClosedExp__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_2__0__Impl
	rule__ClosedExp__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getDoKeyword_2_0()); }

	'do' 

{ after(grammarAccess.getClosedExpAccess().getDoKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedExp__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_2__1__Impl
	rule__ClosedExp__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getDoExpAssignment_2_1()); }
(rule__ClosedExp__DoExpAssignment_2_1)
{ after(grammarAccess.getClosedExpAccess().getDoExpAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedExp__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_2__2__Impl
	rule__ClosedExp__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getGroup_2_2()); }
(rule__ClosedExp__Group_2_2__0)*
{ after(grammarAccess.getClosedExpAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedExp__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getEndKeyword_2_3()); }

	'end' 

{ after(grammarAccess.getClosedExpAccess().getEndKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClosedExp__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_2_2__0__Impl
	rule__ClosedExp__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getSemicolonKeyword_2_2_0()); }

	';' 

{ after(grammarAccess.getClosedExpAccess().getSemicolonKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedExp__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedExp__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getDoExpAssignment_2_2_1()); }
(rule__ClosedExp__DoExpAssignment_2_2_1)
{ after(grammarAccess.getClosedExpAccess().getDoExpAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MonadicExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MonadicExp__Group_1__0__Impl
	rule__MonadicExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MonadicExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonadicExpAccess().getNameAssignment_1_0()); }
(rule__MonadicExp__NameAssignment_1_0)
{ after(grammarAccess.getMonadicExpAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MonadicExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MonadicExp__Group_1__1__Impl
	rule__MonadicExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MonadicExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonadicExpAccess().getLessThanSignHyphenMinusKeyword_1_1()); }

	'<-' 

{ after(grammarAccess.getMonadicExpAccess().getLessThanSignHyphenMinusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MonadicExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MonadicExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MonadicExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonadicExpAccess().getExpAssignment_1_2()); }
(rule__MonadicExp__ExpAssignment_1_2)
{ after(grammarAccess.getMonadicExpAccess().getExpAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Cases__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cases__Group__0__Impl
	rule__Cases__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getPatAssignment_0()); }
(rule__Cases__PatAssignment_0)
{ after(grammarAccess.getCasesAccess().getPatAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cases__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cases__Group__1__Impl
	rule__Cases__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getCasesAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cases__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cases__Group__2__Impl
	rule__Cases__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getExpAssignment_2()); }
(rule__Cases__ExpAssignment_2)
{ after(grammarAccess.getCasesAccess().getExpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cases__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cases__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getGroup_3()); }
(rule__Cases__Group_3__0)*
{ after(grammarAccess.getCasesAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Cases__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cases__Group_3__0__Impl
	rule__Cases__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getPIPETerminalRuleCall_3_0()); }
	RULE_PIPE
{ after(grammarAccess.getCasesAccess().getPIPETerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cases__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cases__Group_3__1__Impl
	rule__Cases__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getPatAssignment_3_1()); }
(rule__Cases__PatAssignment_3_1)
{ after(grammarAccess.getCasesAccess().getPatAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cases__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cases__Group_3__2__Impl
	rule__Cases__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getColonKeyword_3_2()); }

	':' 

{ after(grammarAccess.getCasesAccess().getColonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cases__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cases__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getExpAssignment_3_3()); }
(rule__Cases__ExpAssignment_3_3)
{ after(grammarAccess.getCasesAccess().getExpAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OrElseExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrElseExp__Group__0__Impl
	rule__OrElseExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElseExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrElseExpAccess().getAndAlsoExpParserRuleCall_0()); }
	ruleAndAlsoExp
{ after(grammarAccess.getOrElseExpAccess().getAndAlsoExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrElseExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrElseExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElseExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrElseExpAccess().getGroup_1()); }
(rule__OrElseExp__Group_1__0)*
{ after(grammarAccess.getOrElseExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrElseExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrElseExp__Group_1__0__Impl
	rule__OrElseExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElseExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrElseExpAccess().getOrElseExpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrElseExpAccess().getOrElseExpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrElseExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrElseExp__Group_1__1__Impl
	rule__OrElseExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElseExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrElseExpAccess().getOrKeyword_1_1()); }

	'or' 

{ after(grammarAccess.getOrElseExpAccess().getOrKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrElseExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrElseExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElseExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrElseExpAccess().getRightAssignment_1_2()); }
(rule__OrElseExp__RightAssignment_1_2)
{ after(grammarAccess.getOrElseExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndAlsoExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndAlsoExp__Group__0__Impl
	rule__AndAlsoExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndAlsoExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAlsoExpAccess().getRExpParserRuleCall_0()); }
	ruleRExp
{ after(grammarAccess.getAndAlsoExpAccess().getRExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndAlsoExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndAlsoExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndAlsoExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAlsoExpAccess().getGroup_1()); }
(rule__AndAlsoExp__Group_1__0)*
{ after(grammarAccess.getAndAlsoExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndAlsoExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndAlsoExp__Group_1__0__Impl
	rule__AndAlsoExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndAlsoExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAlsoExpAccess().getAndAlsoExpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndAlsoExpAccess().getAndAlsoExpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndAlsoExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndAlsoExp__Group_1__1__Impl
	rule__AndAlsoExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndAlsoExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAlsoExpAccess().getAndKeyword_1_1()); }

	'and' 

{ after(grammarAccess.getAndAlsoExpAccess().getAndKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndAlsoExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndAlsoExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndAlsoExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAlsoExpAccess().getRightAssignment_1_2()); }
(rule__AndAlsoExp__RightAssignment_1_2)
{ after(grammarAccess.getAndAlsoExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RExp__Group__0__Impl
	rule__RExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRExpAccess().getAexpAssignment_0()); }
(rule__RExp__AexpAssignment_0)
{ after(grammarAccess.getRExpAccess().getAexpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRExpAccess().getGroup_1()); }
(rule__RExp__Group_1__0)*
{ after(grammarAccess.getRExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RExp__Group_1__0__Impl
	rule__RExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRExpAccess().getSymAssignment_1_0()); }
(rule__RExp__SymAssignment_1_0)
{ after(grammarAccess.getRExpAccess().getSymAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRExpAccess().getAexpsAssignment_1_1()); }
(rule__RExp__AexpsAssignment_1_1)
{ after(grammarAccess.getRExpAccess().getAexpsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AExp__Group__0__Impl
	rule__AExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAExpAccess().getMexpAssignment_0()); }
(rule__AExp__MexpAssignment_0)
{ after(grammarAccess.getAExpAccess().getMexpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAExpAccess().getGroup_1()); }
(rule__AExp__Group_1__0)*
{ after(grammarAccess.getAExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AExp__Group_1__0__Impl
	rule__AExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAExpAccess().getSignAssignment_1_0()); }
(rule__AExp__SignAssignment_1_0)
{ after(grammarAccess.getAExpAccess().getSignAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAExpAccess().getMexpsAssignment_1_1()); }
(rule__AExp__MexpsAssignment_1_1)
{ after(grammarAccess.getAExpAccess().getMexpsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MExp__Group__0__Impl
	rule__MExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMExpAccess().getApplyexpsAssignment_0()); }
(rule__MExp__ApplyexpsAssignment_0)
{ after(grammarAccess.getMExpAccess().getApplyexpsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMExpAccess().getGroup_1()); }
(rule__MExp__Group_1__0)*
{ after(grammarAccess.getMExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MExp__Group_1__0__Impl
	rule__MExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMExpAccess().getCircumflexAccentKeyword_1_0()); }

	'^' 

{ after(grammarAccess.getMExpAccess().getCircumflexAccentKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMExpAccess().getApplyexpsAssignment_1_1()); }
(rule__MExp__ApplyexpsAssignment_1_1)
{ after(grammarAccess.getMExpAccess().getApplyexpsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ApplyExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplyExp__Group__0__Impl
	rule__ApplyExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplyExpAccess().getNegAssignment_0()); }
(rule__ApplyExp__NegAssignment_0)?
{ after(grammarAccess.getApplyExpAccess().getNegAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplyExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplyExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplyExpAccess().getExpAssignment_1()); }
(rule__ApplyExp__ExpAssignment_1)
{ after(grammarAccess.getApplyExpAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExp__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_0__0__Impl
	rule__AtomicExp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getAtomicExpAction_0_0()); }
(

)
{ after(grammarAccess.getAtomicExpAccess().getAtomicExpAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getLitParserRuleCall_0_1()); }
	ruleLit
{ after(grammarAccess.getAtomicExpAccess().getLitParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_1__0__Impl
	rule__AtomicExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getAtomicExpAction_1_0()); }
(

)
{ after(grammarAccess.getAtomicExpAccess().getAtomicExpAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getStringParserRuleCall_1_1()); }
	ruleString
{ after(grammarAccess.getAtomicExpAccess().getStringParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExp__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_2__0__Impl
	rule__AtomicExp__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getIdAssignment_2_0()); }
(rule__AtomicExp__IdAssignment_2_0)
{ after(grammarAccess.getAtomicExpAccess().getIdAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getGroup_2_1()); }
(rule__AtomicExp__Group_2_1__0)*
{ after(grammarAccess.getAtomicExpAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExp__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_2_1__0__Impl
	rule__AtomicExp__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getDOTTerminalRuleCall_2_1_0()); }
(	RULE_DOT)
{ after(grammarAccess.getAtomicExpAccess().getDOTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getIdAssignment_2_1_1()); }
(rule__AtomicExp__IdAssignment_2_1_1)
{ after(grammarAccess.getAtomicExpAccess().getIdAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExp__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_3__0__Impl
	rule__AtomicExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getAtomicExpAction_3_0()); }
(

)
{ after(grammarAccess.getAtomicExpAccess().getAtomicExpAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getConUseParserRuleCall_3_1()); }
	ruleConUse
{ after(grammarAccess.getAtomicExpAccess().getConUseParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExp__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_4__0__Impl
	rule__AtomicExp__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getCommercialAtKeyword_4_0()); }

	'@' 

{ after(grammarAccess.getAtomicExpAccess().getCommercialAtKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_4__1__Impl
	rule__AtomicExp__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getLeftCurlyBracketKeyword_4_1()); }

	'{' 

{ after(grammarAccess.getAtomicExpAccess().getLeftCurlyBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_4__2__Impl
	rule__AtomicExp__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getFieldsAssignment_4_2()); }
(rule__AtomicExp__FieldsAssignment_4_2)
{ after(grammarAccess.getAtomicExpAccess().getFieldsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_4__3__Impl
	rule__AtomicExp__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getGroup_4_3()); }
(rule__AtomicExp__Group_4_3__0)*
{ after(grammarAccess.getAtomicExpAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getRightCurlyBracketKeyword_4_4()); }

	'}' 

{ after(grammarAccess.getAtomicExpAccess().getRightCurlyBracketKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AtomicExp__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_4_3__0__Impl
	rule__AtomicExp__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getAtomicExpAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getFieldsAssignment_4_3_1()); }
(rule__AtomicExp__FieldsAssignment_4_3_1)
{ after(grammarAccess.getAtomicExpAccess().getFieldsAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExp__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_5__0__Impl
	rule__AtomicExp__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getAtomicExpAction_5_0()); }
(

)
{ after(grammarAccess.getAtomicExpAccess().getAtomicExpAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_5__1__Impl
	rule__AtomicExp__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getDollarSignKeyword_5_1()); }

	'$' 

{ after(grammarAccess.getAtomicExpAccess().getDollarSignKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getQidParserRuleCall_5_2()); }
	ruleQid
{ after(grammarAccess.getAtomicExpAccess().getQidParserRuleCall_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExp__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_6__0__Impl
	rule__AtomicExp__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getLeftParenthesisKeyword_6_0()); }

	'(' 

{ after(grammarAccess.getAtomicExpAccess().getLeftParenthesisKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_6__1__Impl
	rule__AtomicExp__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getExpAssignment_6_1()); }
(rule__AtomicExp__ExpAssignment_6_1)
{ after(grammarAccess.getAtomicExpAccess().getExpAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_6__2__Impl
	rule__AtomicExp__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getRightParenthesisKeyword_6_2()); }

	')' 

{ after(grammarAccess.getAtomicExpAccess().getRightParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getGroup_6_3()); }
(rule__AtomicExp__Group_6_3__0)*
{ after(grammarAccess.getAtomicExpAccess().getGroup_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AtomicExp__Group_6_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_6_3__0__Impl
	rule__AtomicExp__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_6_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getDOTTerminalRuleCall_6_3_0()); }
(	RULE_DOT)
{ after(grammarAccess.getAtomicExpAccess().getDOTTerminalRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_6_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_6_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getIdAssignment_6_3_1()); }
(rule__AtomicExp__IdAssignment_6_3_1)
{ after(grammarAccess.getAtomicExpAccess().getIdAssignment_6_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExp__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_7__0__Impl
	rule__AtomicExp__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getAtomicExpAction_7_0()); }
(

)
{ after(grammarAccess.getAtomicExpAccess().getAtomicExpAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_7__1__Impl
	rule__AtomicExp__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getLeftCurlyBracketKeyword_7_1()); }

	'{' 

{ after(grammarAccess.getAtomicExpAccess().getLeftCurlyBracketKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_7__2__Impl
	rule__AtomicExp__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getGroup_7_2()); }
(rule__AtomicExp__Group_7_2__0)?
{ after(grammarAccess.getAtomicExpAccess().getGroup_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getRightCurlyBracketKeyword_7_3()); }

	'}' 

{ after(grammarAccess.getAtomicExpAccess().getRightCurlyBracketKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AtomicExp__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_7_2__0__Impl
	rule__AtomicExp__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_7_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getIdAssignment_7_2_0()); }
(rule__AtomicExp__IdAssignment_7_2_0)
{ after(grammarAccess.getAtomicExpAccess().getIdAssignment_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_7_2__1__Impl
	rule__AtomicExp__Group_7_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_7_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getEqualsSignKeyword_7_2_1()); }

	'=' 

{ after(grammarAccess.getAtomicExpAccess().getEqualsSignKeyword_7_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_7_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_7_2__2__Impl
	rule__AtomicExp__Group_7_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_7_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getExpsAssignment_7_2_2()); }
(rule__AtomicExp__ExpsAssignment_7_2_2)
{ after(grammarAccess.getAtomicExpAccess().getExpsAssignment_7_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_7_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_7_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_7_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getGroup_7_2_3()); }
(rule__AtomicExp__Group_7_2_3__0)*
{ after(grammarAccess.getAtomicExpAccess().getGroup_7_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AtomicExp__Group_7_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_7_2_3__0__Impl
	rule__AtomicExp__Group_7_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_7_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getIdAssignment_7_2_3_0()); }
(rule__AtomicExp__IdAssignment_7_2_3_0)
{ after(grammarAccess.getAtomicExpAccess().getIdAssignment_7_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_7_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_7_2_3__1__Impl
	rule__AtomicExp__Group_7_2_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_7_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getEqualsSignKeyword_7_2_3_1()); }

	'=' 

{ after(grammarAccess.getAtomicExpAccess().getEqualsSignKeyword_7_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_7_2_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_7_2_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_7_2_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getExpsAssignment_7_2_3_2()); }
(rule__AtomicExp__ExpsAssignment_7_2_3_2)
{ after(grammarAccess.getAtomicExpAccess().getExpsAssignment_7_2_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExp__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_8__0__Impl
	rule__AtomicExp__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getLetKeyword_8_0()); }

	'let' 

{ after(grammarAccess.getAtomicExpAccess().getLetKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_8__1__Impl
	rule__AtomicExp__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAtomicExpAccess().getValDeclAssignment_8_1()); }
(rule__AtomicExp__ValDeclAssignment_8_1)
{ after(grammarAccess.getAtomicExpAccess().getValDeclAssignment_8_1()); }
)
(
{ before(grammarAccess.getAtomicExpAccess().getValDeclAssignment_8_1()); }
(rule__AtomicExp__ValDeclAssignment_8_1)*
{ after(grammarAccess.getAtomicExpAccess().getValDeclAssignment_8_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_8__2__Impl
	rule__AtomicExp__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getInKeyword_8_2()); }

	'in' 

{ after(grammarAccess.getAtomicExpAccess().getInKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_8__3__Impl
	rule__AtomicExp__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getExpAssignment_8_3()); }
(rule__AtomicExp__ExpAssignment_8_3)
{ after(grammarAccess.getAtomicExpAccess().getExpAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExp__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExp__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getEndKeyword_8_4()); }

	'end' 

{ after(grammarAccess.getAtomicExpAccess().getEndKeyword_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Field__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group_0__0__Impl
	rule__Field__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_0_0()); }
(rule__Field__NameAssignment_0_0)
{ after(grammarAccess.getFieldAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group_0__1__Impl
	rule__Field__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getEqualsSignKeyword_0_1()); }

	'=' 

{ after(grammarAccess.getFieldAccess().getEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getExpAssignment_0_2()); }
(rule__Field__ExpAssignment_0_2)
{ after(grammarAccess.getFieldAccess().getExpAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Field__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group_1__0__Impl
	rule__Field__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTildeKeyword_1_0()); }

	'~' 

{ after(grammarAccess.getFieldAccess().getTildeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_1_1()); }
(rule__Field__NameAssignment_1_1)
{ after(grammarAccess.getFieldAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValueDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueDecl__Group__0__Impl
	rule__ValueDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueDeclAccess().getValKeyword_0()); }

	'val' 

{ after(grammarAccess.getValueDeclAccess().getValKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueDecl__Group__1__Impl
	rule__ValueDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueDeclAccess().getNameParserRuleCall_1()); }
	ruleName
{ after(grammarAccess.getValueDeclAccess().getNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueDecl__Group__2__Impl
	rule__ValueDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueDeclAccess().getNameParserRuleCall_2()); }
(	ruleName)*
{ after(grammarAccess.getValueDeclAccess().getNameParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueDecl__Group__3__Impl
	rule__ValueDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueDeclAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getValueDeclAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueDeclAccess().getExpParserRuleCall_4()); }
	ruleExp
{ after(grammarAccess.getValueDeclAccess().getExpParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__String__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String__Group__0__Impl
	rule__String__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__String__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringAccess().getQuotationMarkKeyword_0()); }

	'"' 

{ after(grammarAccess.getStringAccess().getQuotationMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__String__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String__Group__1__Impl
	rule__String__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__String__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringAccess().getSTRCHARParserRuleCall_1()); }
(	ruleSTRCHAR)*
{ after(grammarAccess.getStringAccess().getSTRCHARParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__String__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__String__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringAccess().getQuotationMarkKeyword_2()); }

	'"' 

{ after(grammarAccess.getStringAccess().getQuotationMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Pat__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pat__Group_3__0__Impl
	rule__Pat__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pat__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatAccess().getConUseParserRuleCall_3_0()); }
	ruleConUse
{ after(grammarAccess.getPatAccess().getConUseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pat__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pat__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pat__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatAccess().getPatParserRuleCall_3_1()); }
(	rulePat)?
{ after(grammarAccess.getPatAccess().getPatParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Lit__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lit__Group_1__0__Impl
	rule__Lit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lit__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLitAccess().getApostropheKeyword_1_0()); }

	'\'' 

{ after(grammarAccess.getLitAccess().getApostropheKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lit__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lit__Group_1__1__Impl
	rule__Lit__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Lit__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLitAccess().getBITSTRParserRuleCall_1_1()); }
(	ruleBITSTR)?
{ after(grammarAccess.getLitAccess().getBITSTRParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lit__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lit__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lit__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLitAccess().getApostropheKeyword_1_2()); }

	'\'' 

{ after(grammarAccess.getLitAccess().getApostropheKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimBitPat__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimBitPat__Group_1__0__Impl
	rule__PrimBitPat__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimBitPat__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimBitPatAccess().getQidParserRuleCall_1_0()); }
	ruleQid
{ after(grammarAccess.getPrimBitPatAccess().getQidParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimBitPat__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimBitPat__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimBitPat__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimBitPatAccess().getBitPatOrIntParserRuleCall_1_1()); }
(	ruleBitPatOrInt)?
{ after(grammarAccess.getPrimBitPatAccess().getBitPatOrIntParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitPatOrInt__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPatOrInt__Group_0__0__Impl
	rule__BitPatOrInt__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPatOrInt__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatOrIntAccess().getColonKeyword_0_0()); }

	':' 

{ after(grammarAccess.getBitPatOrIntAccess().getColonKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitPatOrInt__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPatOrInt__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPatOrInt__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatOrIntAccess().getPOSINTParserRuleCall_0_1()); }
	rulePOSINT
{ after(grammarAccess.getBitPatOrIntAccess().getPOSINTParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitPatOrInt__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPatOrInt__Group_1__0__Impl
	rule__BitPatOrInt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPatOrInt__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatOrIntAccess().getCommercialAtKeyword_1_0()); }

	'@' 

{ after(grammarAccess.getBitPatOrIntAccess().getCommercialAtKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitPatOrInt__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitPatOrInt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitPatOrInt__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatOrIntAccess().getBITSTRParserRuleCall_1_1()); }
	ruleBITSTR
{ after(grammarAccess.getBitPatOrIntAccess().getBITSTRParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NEGINT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NEGINT__Group__0__Impl
	rule__NEGINT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NEGINT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNEGINTAccess().getTildeKeyword_0()); }

	'~' 

{ after(grammarAccess.getNEGINTAccess().getTildeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NEGINT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NEGINT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NEGINT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNEGINTAccess().getNUMParserRuleCall_1()); }
	ruleNUM
{ after(grammarAccess.getNEGINTAccess().getNUMParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HEXNUM__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HEXNUM__Group__0__Impl
	rule__HEXNUM__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HEXNUM__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHEXNUMAccess().getXKeyword_0()); }

	'0x' 

{ after(grammarAccess.getHEXNUMAccess().getXKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HEXNUM__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HEXNUM__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HEXNUM__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getHEXNUMAccess().getHEXDIGITParserRuleCall_1()); }
(	ruleHEXDIGIT)
{ after(grammarAccess.getHEXNUMAccess().getHEXDIGITParserRuleCall_1()); }
)
(
{ before(grammarAccess.getHEXNUMAccess().getHEXDIGITParserRuleCall_1()); }
(	ruleHEXDIGIT)*
{ after(grammarAccess.getHEXNUMAccess().getHEXDIGITParserRuleCall_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MIXID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MIXID__Group__0__Impl
	rule__MIXID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MIXID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMIXIDAccess().get_Keyword_0()); }

	'_' 

{ after(grammarAccess.getMIXIDAccess().get_Keyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MIXID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MIXID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MIXID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMIXIDAccess().getIDCHARParserRuleCall_1()); }
(	ruleIDCHAR)
{ after(grammarAccess.getMIXIDAccess().getIDCHARParserRuleCall_1()); }
)
(
{ before(grammarAccess.getMIXIDAccess().getIDCHARParserRuleCall_1()); }
(	ruleIDCHAR)*
{ after(grammarAccess.getMIXIDAccess().getIDCHARParserRuleCall_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CONS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CONS__Group__0__Impl
	rule__CONS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CONS__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCONSAccess().getULETTERParserRuleCall_0()); }
	ruleULETTER
{ after(grammarAccess.getCONSAccess().getULETTERParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CONS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CONS__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CONS__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCONSAccess().getIDCHARParserRuleCall_1()); }
(	ruleIDCHAR)*
{ after(grammarAccess.getCONSAccess().getIDCHARParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ID__Group__0__Impl
	rule__ID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIDAccess().getLETTERParserRuleCall_0()); }
	ruleLETTER
{ after(grammarAccess.getIDAccess().getLETTERParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIDAccess().getIDCHARParserRuleCall_1()); }
(	ruleIDCHAR)*
{ after(grammarAccess.getIDAccess().getIDCHARParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__DeclAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_0_0()); }
	ruleDecl{ after(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DeclAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_1_1_0()); }
	ruleDecl{ after(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }
(
{ before(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }

	'granularity' 

{ after(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }
)

{ after(grammarAccess.getDeclGranularityAccess().getNameGranularityKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclGranularity__GranularityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclGranularityAccess().getGranularityIntParserRuleCall_2_0()); }
	ruleInt{ after(grammarAccess.getDeclGranularityAccess().getGranularityIntParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }
(
{ before(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }

	'export' 

{ after(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }
)

{ after(grammarAccess.getDeclExportAccess().getNameExportKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclExport__ExportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclExportAccess().getExportsExportParserRuleCall_2_0()); }
	ruleExport{ after(grammarAccess.getDeclExportAccess().getExportsExportParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getDeclTypeAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__ValueAssignment_2_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_2_0_0_1_0()); }
	ruleConDecls{ after(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_2_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__ValueAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueTyParserRuleCall_2_0_1_0()); }
	ruleTy{ after(grammarAccess.getDeclTypeAccess().getValueTyParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__AttrNameAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameNameParserRuleCall_2_1_1_0()); }
	ruleName{ after(grammarAccess.getDeclTypeAccess().getAttrNameNameParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__AttrNameAssignment_2_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getAttrNameNameParserRuleCall_2_1_2_1_0()); }
	ruleName{ after(grammarAccess.getDeclTypeAccess().getAttrNameNameParserRuleCall_2_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclType__ValueAssignment_2_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_2_1_5_0()); }
	ruleConDecls{ after(grammarAccess.getDeclTypeAccess().getValueConDeclsParserRuleCall_2_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__NameAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameNameParserRuleCall_0_1_0_0()); }
	ruleName{ after(grammarAccess.getDeclValAccess().getNameNameParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__NameAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameSYMParserRuleCall_0_1_1_0()); }
	ruleSYM{ after(grammarAccess.getDeclValAccess().getNameSYMParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__AttrAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAttrNameParserRuleCall_0_2_0()); }
	ruleName{ after(grammarAccess.getDeclValAccess().getAttrNameParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__ExpAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_0_4_0()); }
	ruleExp{ after(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__MidAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getMidMIXIDParserRuleCall_1_1_0_0()); }
	ruleMIXID{ after(grammarAccess.getDeclValAccess().getMidMIXIDParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__AttrAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getAttrNameParserRuleCall_1_1_1_0()); }
	ruleName{ after(grammarAccess.getDeclValAccess().getAttrNameParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__ExpAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_1_3_0()); }
	ruleExp{ after(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getNameNameParserRuleCall_2_1_0()); }
	ruleName{ after(grammarAccess.getDeclValAccess().getNameNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__DecPatAssignment_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getDecPatDecodePatParserRuleCall_2_3_0_0()); }
	ruleDecodePat{ after(grammarAccess.getDeclValAccess().getDecPatDecodePatParserRuleCall_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__DecPatAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getDecPatDecodePatParserRuleCall_2_3_1_0()); }
	ruleDecodePat{ after(grammarAccess.getDeclValAccess().getDecPatDecodePatParserRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__ExpAssignment_2_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_2_5_0_1_0()); }
	ruleExp{ after(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_2_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__ExpsAssignment_2_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpsExpParserRuleCall_2_5_1_1_0()); }
	ruleExp{ after(grammarAccess.getDeclValAccess().getExpsExpParserRuleCall_2_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVal__ExpsAssignment_2_5_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclValAccess().getExpsExpParserRuleCall_2_5_1_3_0()); }
	ruleExp{ after(grammarAccess.getDeclValAccess().getExpsExpParserRuleCall_2_5_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getNameQidParserRuleCall_0_0()); }
	ruleQid{ after(grammarAccess.getExportAccess().getNameQidParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__AttrNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameNameParserRuleCall_1_1_0()); }
	ruleName{ after(grammarAccess.getExportAccess().getAttrNameNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__AttrNameAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getAttrNameNameParserRuleCall_1_2_1_0()); }
	ruleName{ after(grammarAccess.getExportAccess().getAttrNameNameParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__ConDeclsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_0_0()); }
	ruleConDecl{ after(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecls__ConDeclsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_1_1_0()); }
	ruleConDecl{ after(grammarAccess.getConDeclsAccess().getConDeclsConDeclParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getNameConBindParserRuleCall_0_0()); }
	ruleConBind{ after(grammarAccess.getConDeclAccess().getNameConBindParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConDecl__TyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConDeclAccess().getTyTyParserRuleCall_1_1_0()); }
	ruleTy{ after(grammarAccess.getConDeclAccess().getTyTyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueIntParserRuleCall_0_0()); }
	ruleInt{ after(grammarAccess.getTyAccess().getValueIntParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueIntParserRuleCall_1_1_0()); }
	ruleInt{ after(grammarAccess.getTyAccess().getValueIntParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ValueAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getValueQidParserRuleCall_2_0_0()); }
	ruleQid{ after(grammarAccess.getTyAccess().getValueQidParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__TyBindAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_1_0()); }
	ruleTyBind{ after(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__TyBindAssignment_2_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_2_1_0()); }
	ruleTyBind{ after(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_2_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ElementsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_1_0()); }
	ruleTyElement{ after(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ty__ElementsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_2_1_0()); }
	ruleTyElement{ after(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getTyElementAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyElement__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyElementAccess().getValueTyParserRuleCall_2_0()); }
	ruleTy{ after(grammarAccess.getTyElementAccess().getValueTyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getKeyQidParserRuleCall_0_0()); }
	ruleQid{ after(grammarAccess.getTyBindAccess().getKeyQidParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TyBind__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTyBindAccess().getValueTyParserRuleCall_1_1_0()); }
	ruleTy{ after(grammarAccess.getTyBindAccess().getValueTyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__BitpatAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getBitpatPrimBitPatParserRuleCall_1_0()); }
	rulePrimBitPat{ after(grammarAccess.getBitPatAccess().getBitpatPrimBitPatParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitPat__BitpatAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitPatAccess().getBitpatPrimBitPatParserRuleCall_2_0()); }
	rulePrimBitPat{ after(grammarAccess.getBitPatAccess().getBitpatPrimBitPatParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TokPat__TokPatAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokPatAccess().getTokPatAlternatives_0()); }
(rule__TokPat__TokPatAlternatives_0)
{ after(grammarAccess.getTokPatAccess().getTokPatAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__CaseExpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getCaseExpCaseExpParserRuleCall_0_0()); }
	ruleCaseExp{ after(grammarAccess.getExpAccess().getCaseExpCaseExpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__MidAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getMidMIXIDParserRuleCall_1_0_0()); }
	ruleMIXID{ after(grammarAccess.getExpAccess().getMidMIXIDParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__CaseExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpAccess().getCaseExpCaseExpParserRuleCall_1_1_0()); }
	ruleCaseExp{ after(grammarAccess.getExpAccess().getCaseExpCaseExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExp__ClosedExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpAccess().getClosedExpClosedExpParserRuleCall_1_1_0()); }
	ruleClosedExp{ after(grammarAccess.getCaseExpAccess().getClosedExpClosedExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExp__CasesAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExpAccess().getCasesCasesParserRuleCall_1_3_0()); }
	ruleCases{ after(grammarAccess.getCaseExpAccess().getCasesCasesParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__IfCaseExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getIfCaseExpCaseExpParserRuleCall_1_1_0()); }
	ruleCaseExp{ after(grammarAccess.getClosedExpAccess().getIfCaseExpCaseExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__ThenCaseExpAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getThenCaseExpCaseExpParserRuleCall_1_3_0()); }
	ruleCaseExp{ after(grammarAccess.getClosedExpAccess().getThenCaseExpCaseExpParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__ElseCaseExpAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getElseCaseExpCaseExpParserRuleCall_1_5_0()); }
	ruleCaseExp{ after(grammarAccess.getClosedExpAccess().getElseCaseExpCaseExpParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__DoExpAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getDoExpMonadicExpParserRuleCall_2_1_0()); }
	ruleMonadicExp{ after(grammarAccess.getClosedExpAccess().getDoExpMonadicExpParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedExp__DoExpAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedExpAccess().getDoExpMonadicExpParserRuleCall_2_2_1_0()); }
	ruleMonadicExp{ after(grammarAccess.getClosedExpAccess().getDoExpMonadicExpParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MonadicExp__ExpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonadicExpAccess().getExpExpParserRuleCall_0_0()); }
	ruleExp{ after(grammarAccess.getMonadicExpAccess().getExpExpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MonadicExp__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonadicExpAccess().getNameNameParserRuleCall_1_0_0()); }
	ruleName{ after(grammarAccess.getMonadicExpAccess().getNameNameParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MonadicExp__ExpAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonadicExpAccess().getExpExpParserRuleCall_1_2_0()); }
	ruleExp{ after(grammarAccess.getMonadicExpAccess().getExpExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__PatAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getPatPatParserRuleCall_0_0()); }
	rulePat{ after(grammarAccess.getCasesAccess().getPatPatParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__ExpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getExpExpParserRuleCall_2_0()); }
	ruleExp{ after(grammarAccess.getCasesAccess().getExpExpParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__PatAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getPatPatParserRuleCall_3_1_0()); }
	rulePat{ after(grammarAccess.getCasesAccess().getPatPatParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cases__ExpAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasesAccess().getExpExpParserRuleCall_3_3_0()); }
	ruleExp{ after(grammarAccess.getCasesAccess().getExpExpParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrElseExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrElseExpAccess().getRightAndAlsoExpParserRuleCall_1_2_0()); }
	ruleAndAlsoExp{ after(grammarAccess.getOrElseExpAccess().getRightAndAlsoExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndAlsoExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAlsoExpAccess().getRightRExpParserRuleCall_1_2_0()); }
	ruleRExp{ after(grammarAccess.getAndAlsoExpAccess().getRightRExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RExp__AexpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRExpAccess().getAexpAExpParserRuleCall_0_0()); }
	ruleAExp{ after(grammarAccess.getRExpAccess().getAexpAExpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RExp__SymAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRExpAccess().getSymSYMParserRuleCall_1_0_0()); }
	ruleSYM{ after(grammarAccess.getRExpAccess().getSymSYMParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RExp__AexpsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRExpAccess().getAexpsAExpParserRuleCall_1_1_0()); }
	ruleAExp{ after(grammarAccess.getRExpAccess().getAexpsAExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AExp__MexpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAExpAccess().getMexpMExpParserRuleCall_0_0()); }
	ruleMExp{ after(grammarAccess.getAExpAccess().getMexpMExpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AExp__SignAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAExpAccess().getSignAlternatives_1_0_0()); }
(rule__AExp__SignAlternatives_1_0_0)
{ after(grammarAccess.getAExpAccess().getSignAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AExp__MexpsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAExpAccess().getMexpsMExpParserRuleCall_1_1_0()); }
	ruleMExp{ after(grammarAccess.getAExpAccess().getMexpsMExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MExp__ApplyexpsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMExpAccess().getApplyexpsApplyExpParserRuleCall_0_0()); }
	ruleApplyExp{ after(grammarAccess.getMExpAccess().getApplyexpsApplyExpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MExp__ApplyexpsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMExpAccess().getApplyexpsApplyExpParserRuleCall_1_1_0()); }
	ruleApplyExp{ after(grammarAccess.getMExpAccess().getApplyexpsApplyExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExp__NegAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplyExpAccess().getNegTildeKeyword_0_0()); }
(
{ before(grammarAccess.getApplyExpAccess().getNegTildeKeyword_0_0()); }

	'~' 

{ after(grammarAccess.getApplyExpAccess().getNegTildeKeyword_0_0()); }
)

{ after(grammarAccess.getApplyExpAccess().getNegTildeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExp__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplyExpAccess().getExpAtomicExpParserRuleCall_1_0()); }
	ruleAtomicExp{ after(grammarAccess.getApplyExpAccess().getExpAtomicExpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__IdAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getIdQidParserRuleCall_2_0_0()); }
	ruleQid{ after(grammarAccess.getAtomicExpAccess().getIdQidParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__IdAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getIdQidParserRuleCall_2_1_1_0()); }
	ruleQid{ after(grammarAccess.getAtomicExpAccess().getIdQidParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__FieldsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getFieldsFieldParserRuleCall_4_2_0()); }
	ruleField{ after(grammarAccess.getAtomicExpAccess().getFieldsFieldParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__FieldsAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getFieldsFieldParserRuleCall_4_3_1_0()); }
	ruleField{ after(grammarAccess.getAtomicExpAccess().getFieldsFieldParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__ExpAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getExpExpParserRuleCall_6_1_0()); }
	ruleExp{ after(grammarAccess.getAtomicExpAccess().getExpExpParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__IdAssignment_6_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getIdQidParserRuleCall_6_3_1_0()); }
	ruleQid{ after(grammarAccess.getAtomicExpAccess().getIdQidParserRuleCall_6_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__IdAssignment_7_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getIdNameParserRuleCall_7_2_0_0()); }
	ruleName{ after(grammarAccess.getAtomicExpAccess().getIdNameParserRuleCall_7_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__ExpsAssignment_7_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getExpsExpParserRuleCall_7_2_2_0()); }
	ruleExp{ after(grammarAccess.getAtomicExpAccess().getExpsExpParserRuleCall_7_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__IdAssignment_7_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getIdNameParserRuleCall_7_2_3_0_0()); }
	ruleName{ after(grammarAccess.getAtomicExpAccess().getIdNameParserRuleCall_7_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__ExpsAssignment_7_2_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getExpsExpParserRuleCall_7_2_3_2_0()); }
	ruleExp{ after(grammarAccess.getAtomicExpAccess().getExpsExpParserRuleCall_7_2_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__ValDeclAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getValDeclValueDeclParserRuleCall_8_1_0()); }
	ruleValueDecl{ after(grammarAccess.getAtomicExpAccess().getValDeclValueDeclParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExp__ExpAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpAccess().getExpExpParserRuleCall_8_3_0()); }
	ruleExp{ after(grammarAccess.getAtomicExpAccess().getExpExpParserRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameNameParserRuleCall_0_0_0()); }
	ruleName{ after(grammarAccess.getFieldAccess().getNameNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__ExpAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getExpExpParserRuleCall_0_2_0()); }
	ruleExp{ after(grammarAccess.getFieldAccess().getExpExpParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameNameParserRuleCall_1_1_0()); }
	ruleName{ after(grammarAccess.getFieldAccess().getNameNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BINDIG : ('0'|'1');

RULE_NBINDIG : '2'..'9';

RULE_LHEXCHAR : 'a'..'f';

RULE_UHEXCHAR : 'A'..'F';

RULE_LNHEXCHAR : 'g'..'z';

RULE_UNHEXCHAR : 'G'..'Z';

RULE_BS : '\\';

RULE_SLASH : '/';

RULE_DOT : '.';

RULE_PIPE : '|';

RULE_CHARSYM : ('_'|'-'|'?'|'\''|'!');

RULE_OTHERSYM : ('%'|'&'|'$'|'+'|':'|'<'|'='|'>'|'@'|'~'|'`'|'^'|'#'|'*');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ML_COMMENT : '(*' ( options {greedy=false;} : . )*'*)';

RULE_SL_COMMENT : '#' ~('\n')* '\n';


