/*
* generated by Xtext
*/
grammar InternalGDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package gdsl.plugin.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package gdsl.plugin.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import gdsl.plugin.services.GDSLGrammarAccess;

}

@parser::members {

 	private GDSLGrammarAccess grammarAccess;
 	
    public InternalGDSLParser(TokenStream input, GDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected GDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_0_0()); 
	    }
		lv_decl_0_0=ruleDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"decl",
        		lv_decl_0_0, 
        		"Decl");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelAccess().getSemicolonKeyword_1_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDeclDeclParserRuleCall_1_1_0()); 
	    }
		lv_decl_2_0=ruleDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"decl",
        		lv_decl_2_0, 
        		"Decl");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleDecl
entryRuleDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclRule()); }
	 iv_ruleDecl=ruleDecl 
	 { $current=$iv_ruleDecl.current; } 
	 EOF 
;

// Rule Decl
ruleDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDeclAccess().getDeclExportParserRuleCall_0()); 
    }
    this_DeclExport_0=ruleDeclExport
    { 
        $current = $this_DeclExport_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeclAccess().getDeclTypeParserRuleCall_1()); 
    }
    this_DeclType_1=ruleDeclType
    { 
        $current = $this_DeclType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeclAccess().getDeclValParserRuleCall_2()); 
    }
    this_DeclVal_2=ruleDeclVal
    { 
        $current = $this_DeclVal_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDeclExport
entryRuleDeclExport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclExportRule()); }
	 iv_ruleDeclExport=ruleDeclExport 
	 { $current=$iv_ruleDeclExport.current; } 
	 EOF 
;

// Rule DeclExport
ruleDeclExport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='export' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeclExportAccess().getExportKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclExportRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getDeclExportAccess().getNameValCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclExportAccess().getTyVarsTyVarsParserRuleCall_2_0()); 
	    }
		lv_tyVars_2_0=ruleTyVars		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclExportRule());
	        }
       		set(
       			$current, 
       			"tyVars",
        		lv_tyVars_2_0, 
        		"TyVars");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeclExportAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclExportAccess().getTypeTyParserRuleCall_4_0()); 
	    }
		lv_type_4_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclExportRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDeclType
entryRuleDeclType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclTypeRule()); }
	 iv_ruleDeclType=ruleDeclType 
	 { $current=$iv_ruleDeclType.current; } 
	 EOF 
;

// Rule DeclType
ruleDeclType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='type' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeclTypeAccess().getTypeKeyword_0());
    }
(
(
(
		lv_name_1_1=RULE_ID
		{
			newLeafNode(lv_name_1_1, grammarAccess.getDeclTypeAccess().getNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_1, 
        		"ID");
	    }

    |		lv_name_1_2=RULE_S
		{
			newLeafNode(lv_name_1_2, grammarAccess.getDeclTypeAccess().getNameSTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_2, 
        		"S");
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclTypeAccess().getTyVarsTyVarsParserRuleCall_2_0()); 
	    }
		lv_tyVars_2_0=ruleTyVars		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclTypeRule());
	        }
       		set(
       			$current, 
       			"tyVars",
        		lv_tyVars_2_0, 
        		"TyVars");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeclTypeAccess().getEqualsSignKeyword_3());
    }
(((((
(
ruleConDecl
)
)(	'|' 
(
(
ruleConDecl
)
))*))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getDeclTypeAccess().getConDeclConDeclParserRuleCall_4_0_0_0_0()); 
	    }
		lv_conDecl_4_0=ruleConDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclTypeRule());
	        }
       		add(
       			$current, 
       			"conDecl",
        		lv_conDecl_4_0, 
        		"ConDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='|' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDeclTypeAccess().getVerticalLineKeyword_4_0_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclTypeAccess().getConDeclConDeclParserRuleCall_4_0_0_1_1_0()); 
	    }
		lv_conDecl_6_0=ruleConDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclTypeRule());
	        }
       		add(
       			$current, 
       			"conDecl",
        		lv_conDecl_6_0, 
        		"ConDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclTypeAccess().getValueTyParserRuleCall_4_1_0()); 
	    }
		lv_value_7_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclTypeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleDeclVal
entryRuleDeclVal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclValRule()); }
	 iv_ruleDeclVal=ruleDeclVal 
	 { $current=$iv_ruleDeclVal.current; } 
	 EOF 
;

// Rule DeclVal
ruleDeclVal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='val' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeclValAccess().getValKeyword_0());
    }
((((((
(
(
RULE_ID

    |		RULE_S

)

)
)
    |((
(
ruleSYM
)
)=>
(
ruleSYM
)
))(
(
(
RULE_ID

    |		RULE_S

)

)
)*	'=' 
(
(
ruleExp
)
)))=>(((
(
(
		lv_name_1_1=RULE_ID
		{
			newLeafNode(lv_name_1_1, grammarAccess.getDeclValAccess().getNameIDTerminalRuleCall_1_0_0_0_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclValRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_1, 
        		"ID");
	    }

    |		lv_name_1_2=RULE_S
		{
			newLeafNode(lv_name_1_2, grammarAccess.getDeclValAccess().getNameSTerminalRuleCall_1_0_0_0_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclValRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_2, 
        		"S");
	    }

)

)
)
    |((
(
ruleSYM
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getDeclValAccess().getNameSYMParserRuleCall_1_0_0_0_1_0()); 
	    }
		lv_name_2_0=ruleSYM		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclValRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"SYM");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
(
		lv_attr_3_1=RULE_ID
		{
			newLeafNode(lv_attr_3_1, grammarAccess.getDeclValAccess().getAttrIDTerminalRuleCall_1_0_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclValRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"attr",
        		lv_attr_3_1, 
        		"ID");
	    }

    |		lv_attr_3_2=RULE_S
		{
			newLeafNode(lv_attr_3_2, grammarAccess.getDeclValAccess().getAttrSTerminalRuleCall_1_0_0_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclValRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"attr",
        		lv_attr_3_2, 
        		"S");
	    }

)

)
)*	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDeclValAccess().getEqualsSignKeyword_1_0_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_1_0_0_3_0()); 
	    }
		lv_exp_5_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclValRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_5_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(((
(
		{ 
	        newCompositeNode(grammarAccess.getDeclValAccess().getMidMIDParserRuleCall_1_1_0_0_0()); 
	    }
		lv_mid_6_0=ruleMID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclValRule());
	        }
       		add(
       			$current, 
       			"mid",
        		lv_mid_6_0, 
        		"MID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
(
		lv_attr_7_1=RULE_ID
		{
			newLeafNode(lv_attr_7_1, grammarAccess.getDeclValAccess().getAttrIDTerminalRuleCall_1_1_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclValRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"attr",
        		lv_attr_7_1, 
        		"ID");
	    }

    |		lv_attr_7_2=RULE_S
		{
			newLeafNode(lv_attr_7_2, grammarAccess.getDeclValAccess().getAttrSTerminalRuleCall_1_1_0_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclValRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"attr",
        		lv_attr_7_2, 
        		"S");
	    }

)

)
))*	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDeclValAccess().getEqualsSignKeyword_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_1_1_2_0()); 
	    }
		lv_exp_9_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclValRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_9_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
(
		lv_name_10_1=RULE_ID
		{
			newLeafNode(lv_name_10_1, grammarAccess.getDeclValAccess().getNameIDTerminalRuleCall_1_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclValRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_10_1, 
        		"ID");
	    }

    |		lv_name_10_2=RULE_S
		{
			newLeafNode(lv_name_10_2, grammarAccess.getDeclValAccess().getNameSTerminalRuleCall_1_2_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeclValRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_10_2, 
        		"S");
	    }

)

)
)	otherlv_11='[' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDeclValAccess().getLeftSquareBracketKeyword_1_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclValAccess().getDecPatDECODEPATParserRuleCall_1_2_2_0()); 
	    }
		lv_decPat_12_0=ruleDECODEPAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclValRule());
	        }
       		add(
       			$current, 
       			"decPat",
        		lv_decPat_12_0, 
        		"DECODEPAT");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13=']' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDeclValAccess().getRightSquareBracketKeyword_1_2_3());
    }
((	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDeclValAccess().getEqualsSignKeyword_1_2_4_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclValAccess().getExpExpParserRuleCall_1_2_4_0_1_0()); 
	    }
		lv_exp_15_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclValRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_15_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_16='|' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDeclValAccess().getVerticalLineKeyword_1_2_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclValAccess().getExpsExpParserRuleCall_1_2_4_1_1_0()); 
	    }
		lv_exps_17_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclValRule());
	        }
       		add(
       			$current, 
       			"exps",
        		lv_exps_17_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_18='=' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDeclValAccess().getEqualsSignKeyword_1_2_4_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclValAccess().getExpsExpParserRuleCall_1_2_4_1_3_0()); 
	    }
		lv_exps_19_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclValRule());
	        }
       		add(
       			$current, 
       			"exps",
        		lv_exps_19_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))+))))
;





// Entry rule entryRuleTyVars
entryRuleTyVars returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTyVarsRule()); }
	 iv_ruleTyVars=ruleTyVars 
	 { $current=$iv_ruleTyVars.current; } 
	 EOF 
;

// Rule TyVars
ruleTyVars returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTyVarsAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyVarsAccess().getAttrTyVarParserRuleCall_1_0()); 
	    }
		lv_attr_1_0=ruleTyVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyVarsRule());
	        }
       		add(
       			$current, 
       			"attr",
        		lv_attr_1_0, 
        		"TyVar");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTyVarsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyVarsAccess().getAttrTyVarParserRuleCall_2_1_0()); 
	    }
		lv_attr_3_0=ruleTyVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyVarsRule());
	        }
       		add(
       			$current, 
       			"attr",
        		lv_attr_3_0, 
        		"TyVar");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTyVarsAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleTyVar
entryRuleTyVar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTyVarRule()); }
	 iv_ruleTyVar=ruleTyVar 
	 { $current=$iv_ruleTyVar.current; } 
	 EOF 
;

// Rule TyVar
ruleTyVar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=RULE_ID
		{
			newLeafNode(lv_name_0_1, grammarAccess.getTyVarAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyVarRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"ID");
	    }

    |		lv_name_0_2=RULE_S
		{
			newLeafNode(lv_name_0_2, grammarAccess.getTyVarAccess().getNameSTerminalRuleCall_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyVarRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"S");
	    }

)

)
)
;





// Entry rule entryRuleConDecl
entryRuleConDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConDeclRule()); }
	 iv_ruleConDecl=ruleConDecl 
	 { $current=$iv_ruleConDecl.current; } 
	 EOF 
;

// Rule ConDecl
ruleConDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConDeclAccess().getNameCONSParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleCONS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConDeclRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"CONS");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='of' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConDeclAccess().getOfKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConDeclAccess().getTyTyParserRuleCall_1_1_0()); 
	    }
		lv_ty_2_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConDeclRule());
	        }
       		set(
       			$current, 
       			"ty",
        		lv_ty_2_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleTy
entryRuleTy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTyRule()); }
	 iv_ruleTy=ruleTy 
	 { $current=$iv_ruleTy.current; } 
	 EOF 
;

// Rule Ty
ruleTy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getValueINTEGERParserRuleCall_0_0_0()); 
	    }
		lv_value_0_1=ruleINTEGER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_1, 
        		"INTEGER");
	        afterParserOrEnumRuleCall();
	    }

    |		lv_value_0_2=RULE_BINS
		{
			newLeafNode(lv_value_0_2, grammarAccess.getTyAccess().getValueBINSTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_2, 
        		"BINS");
	    }

)

)
)
    |(	otherlv_1='|' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTyAccess().getVerticalLineKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getValueINTEGERParserRuleCall_1_1_0()); 
	    }
		lv_value_2_0=ruleINTEGER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"INTEGER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='|' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTyAccess().getVerticalLineKeyword_1_2());
    }
)
    |(	otherlv_4='|' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTyAccess().getVerticalLineKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getTyAccess().getTypeRefTypeCrossReference_2_1_0()); 
	}

)
)	otherlv_6='|' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTyAccess().getVerticalLineKeyword_2_2());
    }
)
    |(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getTyAccess().getTypeRefTypeCrossReference_3_0_0_0()); 
	}

)
)
    |(
(
(
		lv_type_8_1=	'int' 
    {
        newLeafNode(lv_type_8_1, grammarAccess.getTyAccess().getTypeIntKeyword_3_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_8_1, null);
	    }

    |		lv_type_8_2=	'string' 
    {
        newLeafNode(lv_type_8_2, grammarAccess.getTyAccess().getTypeStringKeyword_3_0_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_8_2, null);
	    }

    |		lv_type_8_3=	'unit' 
    {
        newLeafNode(lv_type_8_3, grammarAccess.getTyAccess().getTypeUnitKeyword_3_0_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_8_3, null);
	    }

)

)
))(	otherlv_9='[' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTyAccess().getLeftSquareBracketKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_3_1_1_0()); 
	    }
		lv_tyBind_10_0=ruleTyBind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		add(
       			$current, 
       			"tyBind",
        		lv_tyBind_10_0, 
        		"TyBind");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTyAccess().getCommaKeyword_3_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getTyBindTyBindParserRuleCall_3_1_2_1_0()); 
	    }
		lv_tyBind_12_0=ruleTyBind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		add(
       			$current, 
       			"tyBind",
        		lv_tyBind_12_0, 
        		"TyBind");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13=']' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTyAccess().getRightSquareBracketKeyword_3_1_3());
    }
)?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTyAccess().getTyAction_4_0(),
            $current);
    }
)	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTyAccess().getLeftCurlyBracketKeyword_4_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_4_2_0_0()); 
	    }
		lv_elements_16_0=ruleTyElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_16_0, 
        		"TyElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getTyAccess().getCommaKeyword_4_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getElementsTyElementParserRuleCall_4_2_1_1_0()); 
	    }
		lv_elements_18_0=ruleTyElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_18_0, 
        		"TyElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getTyAccess().getRightCurlyBracketKeyword_4_3());
    }
)
    |(	otherlv_20='(' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getTyAccess().getLeftParenthesisKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getParamTyParserRuleCall_5_1_0()); 
	    }
		lv_param_21_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		add(
       			$current, 
       			"param",
        		lv_param_21_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_22=',' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getTyAccess().getCommaKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getParamTyParserRuleCall_5_2_1_0()); 
	    }
		lv_param_23_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		add(
       			$current, 
       			"param",
        		lv_param_23_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_24=')' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getTyAccess().getRightParenthesisKeyword_5_3());
    }
	otherlv_25='->' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getTyAccess().getHyphenMinusGreaterThanSignKeyword_5_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getResTypeTyParserRuleCall_5_5_0()); 
	    }
		lv_resType_26_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		set(
       			$current, 
       			"resType",
        		lv_resType_26_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTyAccess().getTyAction_6_0(),
            $current);
    }
)	otherlv_28='()' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getTyAccess().getLeftParenthesisRightParenthesisKeyword_6_1());
    }
(	otherlv_29='->' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getTyAccess().getHyphenMinusGreaterThanSignKeyword_6_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getResTypeTyParserRuleCall_6_2_1_0()); 
	    }
		lv_resType_30_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		set(
       			$current, 
       			"resType",
        		lv_resType_30_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(this_S_31=RULE_S
    { 
    newLeafNode(this_S_31, grammarAccess.getTyAccess().getSTerminalRuleCall_7_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getRTyParserRuleCall_7_1_0()); 
	    }
		lv_r_32_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		set(
       			$current, 
       			"r",
        		lv_r_32_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
)this_LESS_33=RULE_LESS
    { 
    newLeafNode(this_LESS_33, grammarAccess.getTyAccess().getLESSTerminalRuleCall_7_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getInTyParserRuleCall_7_3_0()); 
	    }
		lv_in_34_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		set(
       			$current, 
       			"in",
        		lv_in_34_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_35='=>' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getTyAccess().getEqualsSignGreaterThanSignKeyword_7_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyAccess().getOutTyParserRuleCall_7_5_0()); 
	    }
		lv_out_36_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyRule());
	        }
       		set(
       			$current, 
       			"out",
        		lv_out_36_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
)this_GREATER_37=RULE_GREATER
    { 
    newLeafNode(this_GREATER_37, grammarAccess.getTyAccess().getGREATERTerminalRuleCall_7_6()); 
    }
))
;





// Entry rule entryRuleTyBind
entryRuleTyBind returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTyBindRule()); }
	 iv_ruleTyBind=ruleTyBind 
	 { $current=$iv_ruleTyBind.current; } 
	 EOF 
;

// Rule TyBind
ruleTyBind returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_name_0_1=RULE_ID
		{
			newLeafNode(lv_name_0_1, grammarAccess.getTyBindAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyBindRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"ID");
	    }

    |		lv_name_0_2=RULE_S
		{
			newLeafNode(lv_name_0_2, grammarAccess.getTyBindAccess().getNameSTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyBindRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"S");
	    }

)

)
)(	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTyBindAccess().getEqualsSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyBindAccess().getValueTyParserRuleCall_1_1_0()); 
	    }
		lv_value_2_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyBindRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleTyElement
entryRuleTyElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTyElementRule()); }
	 iv_ruleTyElement=ruleTyElement 
	 { $current=$iv_ruleTyElement.current; } 
	 EOF 
;

// Rule TyElement
ruleTyElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_name_0_1=RULE_ID
		{
			newLeafNode(lv_name_0_1, grammarAccess.getTyElementAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"ID");
	    }

    |		lv_name_0_2=RULE_S
		{
			newLeafNode(lv_name_0_2, grammarAccess.getTyElementAccess().getNameSTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTyElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"S");
	    }

)

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTyElementAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTyElementAccess().getValueTyParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleTy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTyElementRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Ty");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	 iv_ruleExp=ruleExp 
	 { $current=$iv_ruleExp.current; } 
	 EOF 
;

// Rule Exp
ruleExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getNameCaseExpParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleCaseExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"CaseExp");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getMidMIDParserRuleCall_1_0_0()); 
	    }
		lv_mid_1_0=ruleMID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		add(
       			$current, 
       			"mid",
        		lv_mid_1_0, 
        		"MID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getCaseExpsCaseExpParserRuleCall_1_1_0()); 
	    }
		lv_caseExps_2_0=ruleCaseExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		add(
       			$current, 
       			"caseExps",
        		lv_caseExps_2_0, 
        		"CaseExp");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleCaseExp
entryRuleCaseExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaseExpRule()); }
	 iv_ruleCaseExp=ruleCaseExp 
	 { $current=$iv_ruleCaseExp.current; } 
	 EOF 
;

// Rule CaseExp
ruleCaseExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCaseExpAccess().getClosedExpParserRuleCall_0()); 
    }
    this_ClosedExp_0=ruleClosedExp
    { 
        $current = $this_ClosedExp_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
(
		lv_name_1_0=	'case' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getCaseExpAccess().getNameCaseKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseExpRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "case");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseExpAccess().getClosedExpClosedExpParserRuleCall_1_1_0()); 
	    }
		lv_closedExp_2_0=ruleClosedExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseExpRule());
	        }
       		set(
       			$current, 
       			"closedExp",
        		lv_closedExp_2_0, 
        		"ClosedExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='of' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCaseExpAccess().getOfKeyword_1_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCaseExpAccess().getPatPATParserRuleCall_1_3_0_0()); 
	    }
		lv_pat_4_0=rulePAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseExpRule());
	        }
       		add(
       			$current, 
       			"pat",
        		lv_pat_4_0, 
        		"PAT");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCaseExpAccess().getColonKeyword_1_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseExpAccess().getExpExpParserRuleCall_1_3_2_0()); 
	    }
		lv_exp_6_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseExpRule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_6_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='|' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCaseExpAccess().getVerticalLineKeyword_1_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseExpAccess().getPatPATParserRuleCall_1_3_3_1_0()); 
	    }
		lv_pat_8_0=rulePAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseExpRule());
	        }
       		add(
       			$current, 
       			"pat",
        		lv_pat_8_0, 
        		"PAT");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCaseExpAccess().getColonKeyword_1_3_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseExpAccess().getExpExpParserRuleCall_1_3_3_3_0()); 
	    }
		lv_exp_10_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseExpRule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_10_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)	otherlv_11='end' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCaseExpAccess().getEndKeyword_1_4());
    }
))
;





// Entry rule entryRuleClosedExp
entryRuleClosedExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClosedExpRule()); }
	 iv_ruleClosedExp=ruleClosedExp 
	 { $current=$iv_ruleClosedExp.current; } 
	 EOF 
;

// Rule ClosedExp
ruleClosedExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getClosedExpAccess().getOrElseExpParserRuleCall_0()); 
    }
    this_OrElseExp_0=ruleOrElseExp
    { 
        $current = $this_OrElseExp_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
(
		lv_name_1_0=	'if' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getClosedExpAccess().getNameIfKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClosedExpRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "if");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClosedExpAccess().getIfCaseExpCaseExpParserRuleCall_1_1_0()); 
	    }
		lv_ifCaseExp_2_0=ruleCaseExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClosedExpRule());
	        }
       		set(
       			$current, 
       			"ifCaseExp",
        		lv_ifCaseExp_2_0, 
        		"CaseExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='then' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClosedExpAccess().getThenKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClosedExpAccess().getThenCaseExpCaseExpParserRuleCall_1_3_0()); 
	    }
		lv_thenCaseExp_4_0=ruleCaseExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClosedExpRule());
	        }
       		set(
       			$current, 
       			"thenCaseExp",
        		lv_thenCaseExp_4_0, 
        		"CaseExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='else' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getClosedExpAccess().getElseKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClosedExpAccess().getElseCaseExpCaseExpParserRuleCall_1_5_0()); 
	    }
		lv_elseCaseExp_6_0=ruleCaseExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClosedExpRule());
	        }
       		set(
       			$current, 
       			"elseCaseExp",
        		lv_elseCaseExp_6_0, 
        		"CaseExp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_7_0=	'do' 
    {
        newLeafNode(lv_name_7_0, grammarAccess.getClosedExpAccess().getNameDoKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClosedExpRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_7_0, "do");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClosedExpAccess().getDoExpMonadicExpParserRuleCall_2_1_0()); 
	    }
		lv_doExp_8_0=ruleMonadicExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClosedExpRule());
	        }
       		add(
       			$current, 
       			"doExp",
        		lv_doExp_8_0, 
        		"MonadicExp");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getClosedExpAccess().getSemicolonKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClosedExpAccess().getDoExpMonadicExpParserRuleCall_2_2_1_0()); 
	    }
		lv_doExp_10_0=ruleMonadicExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClosedExpRule());
	        }
       		add(
       			$current, 
       			"doExp",
        		lv_doExp_10_0, 
        		"MonadicExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='end' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getClosedExpAccess().getEndKeyword_2_3());
    }
))
;





// Entry rule entryRuleMonadicExp
entryRuleMonadicExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMonadicExpRule()); }
	 iv_ruleMonadicExp=ruleMonadicExp 
	 { $current=$iv_ruleMonadicExp.current; } 
	 EOF 
;

// Rule MonadicExp
ruleMonadicExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
ruleExp
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getMonadicExpAccess().getExpExpParserRuleCall_0_0()); 
	    }
		lv_exp_0_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMonadicExpRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_0_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
(
		lv_name_1_1=RULE_ID
		{
			newLeafNode(lv_name_1_1, grammarAccess.getMonadicExpAccess().getNameIDTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonadicExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_1, 
        		"ID");
	    }

    |		lv_name_1_2=RULE_S
		{
			newLeafNode(lv_name_1_2, grammarAccess.getMonadicExpAccess().getNameSTerminalRuleCall_1_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonadicExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_2, 
        		"S");
	    }

)

)
)	otherlv_2='<-' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMonadicExpAccess().getLessThanSignHyphenMinusKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMonadicExpAccess().getExpExpParserRuleCall_1_2_0()); 
	    }
		lv_exp_3_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMonadicExpRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_3_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleOrElseExp
entryRuleOrElseExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrElseExpRule()); }
	 iv_ruleOrElseExp=ruleOrElseExp 
	 { $current=$iv_ruleOrElseExp.current; } 
	 EOF 
;

// Rule OrElseExp
ruleOrElseExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOrElseExpAccess().getAndAlsoExpParserRuleCall_0()); 
    }
    this_AndAlsoExp_0=ruleAndAlsoExp
    { 
        $current = $this_AndAlsoExp_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getOrElseExpAccess().getOrElseExpLeftAction_1_0(),
            $current);
    }
)(
(
		lv_name_2_0=	'or' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getOrElseExpAccess().getNameOrKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrElseExpRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "or");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOrElseExpAccess().getRightAndAlsoExpParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleAndAlsoExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrElseExpRule());
	        }
       		add(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AndAlsoExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAndAlsoExp
entryRuleAndAlsoExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndAlsoExpRule()); }
	 iv_ruleAndAlsoExp=ruleAndAlsoExp 
	 { $current=$iv_ruleAndAlsoExp.current; } 
	 EOF 
;

// Rule AndAlsoExp
ruleAndAlsoExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAndAlsoExpAccess().getRExpParserRuleCall_0()); 
    }
    this_RExp_0=ruleRExp
    { 
        $current = $this_RExp_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAndAlsoExpAccess().getAndAlsoExpLeftAction_1_0(),
            $current);
    }
)(
(
		lv_name_2_0=	'and' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getAndAlsoExpAccess().getNameAndKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndAlsoExpRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "and");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAndAlsoExpAccess().getRightRExpParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleRExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndAlsoExpRule());
	        }
       		add(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"RExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleRExp
entryRuleRExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRExpRule()); }
	 iv_ruleRExp=ruleRExp 
	 { $current=$iv_ruleRExp.current; } 
	 EOF 
;

// Rule RExp
ruleRExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRExpAccess().getAExpParserRuleCall_0()); 
    }
    this_AExp_0=ruleAExp
    { 
        $current = $this_AExp_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
(
ruleSYM
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getRExpAccess().getSymSYMParserRuleCall_1_0_0()); 
	    }
		lv_sym_1_0=ruleSYM		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRExpRule());
	        }
       		add(
       			$current, 
       			"sym",
        		lv_sym_1_0, 
        		"SYM");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRExpAccess().getAexpsAExpParserRuleCall_1_1_0()); 
	    }
		lv_aexps_2_0=ruleAExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRExpRule());
	        }
       		add(
       			$current, 
       			"aexps",
        		lv_aexps_2_0, 
        		"AExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAExp
entryRuleAExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAExpRule()); }
	 iv_ruleAExp=ruleAExp 
	 { $current=$iv_ruleAExp.current; } 
	 EOF 
;

// Rule AExp
ruleAExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAExpAccess().getMExpParserRuleCall_0()); 
    }
    this_MExp_0=ruleMExp
    { 
        $current = $this_MExp_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
(
		lv_sign_1_1=	'+' 
    {
        newLeafNode(lv_sign_1_1, grammarAccess.getAExpAccess().getSignPlusSignKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAExpRule());
	        }
       		addWithLastConsumed($current, "sign", lv_sign_1_1, null);
	    }

    |		lv_sign_1_2=	'-' 
    {
        newLeafNode(lv_sign_1_2, grammarAccess.getAExpAccess().getSignHyphenMinusKeyword_1_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAExpRule());
	        }
       		addWithLastConsumed($current, "sign", lv_sign_1_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAExpAccess().getMexpsMExpParserRuleCall_1_1_0()); 
	    }
		lv_mexps_2_0=ruleMExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAExpRule());
	        }
       		add(
       			$current, 
       			"mexps",
        		lv_mexps_2_0, 
        		"MExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMExp
entryRuleMExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMExpRule()); }
	 iv_ruleMExp=ruleMExp 
	 { $current=$iv_ruleMExp.current; } 
	 EOF 
;

// Rule MExp
ruleMExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMExpAccess().getSelectExpParserRuleCall_0()); 
    }
    this_SelectExp_0=ruleSelectExp
    { 
        $current = $this_SelectExp_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
(
		lv_symbol_1_1=	'*' 
    {
        newLeafNode(lv_symbol_1_1, grammarAccess.getMExpAccess().getSymbolAsteriskKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMExpRule());
	        }
       		addWithLastConsumed($current, "symbol", lv_symbol_1_1, null);
	    }

    |		lv_symbol_1_2=	'%' 
    {
        newLeafNode(lv_symbol_1_2, grammarAccess.getMExpAccess().getSymbolPercentSignKeyword_1_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMExpRule());
	        }
       		addWithLastConsumed($current, "symbol", lv_symbol_1_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMExpAccess().getApplyexpsApplyExpParserRuleCall_1_1_0()); 
	    }
		lv_applyexps_2_0=ruleApplyExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMExpRule());
	        }
       		add(
       			$current, 
       			"applyexps",
        		lv_applyexps_2_0, 
        		"ApplyExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSelectExp
entryRuleSelectExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectExpRule()); }
	 iv_ruleSelectExp=ruleSelectExp 
	 { $current=$iv_ruleSelectExp.current; } 
	 EOF 
;

// Rule SelectExp
ruleSelectExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSelectExpAccess().getApplyExpParserRuleCall_0()); 
    }
    this_ApplyExp_0=ruleApplyExp
    { 
        $current = $this_ApplyExp_0.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_1='^' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSelectExpAccess().getCircumflexAccentKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectExpAccess().getApplyexpsApplyExpParserRuleCall_1_1_0()); 
	    }
		lv_applyexps_2_0=ruleApplyExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectExpRule());
	        }
       		add(
       			$current, 
       			"applyexps",
        		lv_applyexps_2_0, 
        		"ApplyExp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleApplyExp
entryRuleApplyExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getApplyExpRule()); }
	 iv_ruleApplyExp=ruleApplyExp 
	 { $current=$iv_ruleApplyExp.current; } 
	 EOF 
;

// Rule ApplyExp
ruleApplyExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='~' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getApplyExpAccess().getTildeKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getApplyExpAccess().getAtomicExpParserRuleCall_0_1()); 
    }
    this_AtomicExp_1=ruleAtomicExp
    { 
        $current = $this_AtomicExp_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getApplyExpAccess().getAtomicExpAtomicExpParserRuleCall_1_0_0()); 
	    }
		lv_atomicExp_2_0=ruleAtomicExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getApplyExpRule());
	        }
       		set(
       			$current, 
       			"atomicExp",
        		lv_atomicExp_2_0, 
        		"AtomicExp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getApplyExpAccess().getArgsArgsParserRuleCall_1_1_0()); 
	    }
		lv_args_3_0=ruleArgs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getApplyExpRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"Args");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleArgs
entryRuleArgs returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgsRule()); }
	 iv_ruleArgs=ruleArgs 
	 { $current=$iv_ruleArgs.current; } 
	 EOF 
;

// Rule Args
ruleArgs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getArgsAccess().getArgsAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getArgsAccess().getArgsAtomicExpParserRuleCall_1_0_0()); 
	    }
		lv_args_1_0=ruleAtomicExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgsRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_1_0, 
        		"AtomicExp");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    |	otherlv_2='()' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArgsAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
    }
))
;





// Entry rule entryRuleAtomicExp
entryRuleAtomicExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicExpRule()); }
	 iv_ruleAtomicExp=ruleAtomicExp 
	 { $current=$iv_ruleAtomicExp.current; } 
	 EOF 
;

// Rule AtomicExp
ruleAtomicExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicExpAccess().getNameLITParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleLIT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicExpRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"LIT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAtomicExpAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)
    |((
(
(
		lv_name_2_1=RULE_ID
		{
			newLeafNode(lv_name_2_1, grammarAccess.getAtomicExpAccess().getNameIDTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_1, 
        		"ID");
	    }

    |		lv_name_2_2=RULE_S
		{
			newLeafNode(lv_name_2_2, grammarAccess.getAtomicExpAccess().getNameSTerminalRuleCall_2_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_2, 
        		"S");
	    }

)

)
)(((	RULE_DOT)=>this_DOT_3=RULE_DOT
    { 
    newLeafNode(this_DOT_3, grammarAccess.getAtomicExpAccess().getDOTTerminalRuleCall_2_1_0()); 
    }
)(
(
(
		lv_id_4_1=RULE_ID
		{
			newLeafNode(lv_id_4_1, grammarAccess.getAtomicExpAccess().getIdIDTerminalRuleCall_2_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_4_1, 
        		"ID");
	    }

    |		lv_id_4_2=RULE_S
		{
			newLeafNode(lv_id_4_2, grammarAccess.getAtomicExpAccess().getIdSTerminalRuleCall_2_1_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_4_2, 
        		"S");
	    }

)

)
))*)
    |((
(
		lv_name_5_0=	'@' 
    {
        newLeafNode(lv_name_5_0, grammarAccess.getAtomicExpAccess().getNameCommercialAtKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_5_0, "@");
	    }

)
)	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAtomicExpAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicExpAccess().getFieldsFieldParserRuleCall_3_2_0()); 
	    }
		lv_fields_7_0=ruleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicExpRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_7_0, 
        		"Field");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAtomicExpAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicExpAccess().getFieldsFieldParserRuleCall_3_3_1_0()); 
	    }
		lv_fields_9_0=ruleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicExpRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_9_0, 
        		"Field");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAtomicExpAccess().getRightCurlyBracketKeyword_3_4());
    }
)
    |(	otherlv_11='$' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAtomicExpAccess().getDollarSignKeyword_4_0());
    }
(
(
(
		lv_name_12_1=RULE_ID
		{
			newLeafNode(lv_name_12_1, grammarAccess.getAtomicExpAccess().getNameIDTerminalRuleCall_4_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_12_1, 
        		"ID");
	    }

    |		lv_name_12_2=RULE_S
		{
			newLeafNode(lv_name_12_2, grammarAccess.getAtomicExpAccess().getNameSTerminalRuleCall_4_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_12_2, 
        		"S");
	    }

)

)
))
    |(	otherlv_13='(' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getAtomicExpAccess().getLeftParenthesisKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicExpAccess().getExprExpParserRuleCall_5_1_0()); 
	    }
		lv_expr_14_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicExpRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_14_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAtomicExpAccess().getRightParenthesisKeyword_5_2());
    }
(((	RULE_DOT)=>this_DOT_16=RULE_DOT
    { 
    newLeafNode(this_DOT_16, grammarAccess.getAtomicExpAccess().getDOTTerminalRuleCall_5_3_0()); 
    }
)(
(
(
		lv_id_17_1=RULE_ID
		{
			newLeafNode(lv_id_17_1, grammarAccess.getAtomicExpAccess().getIdIDTerminalRuleCall_5_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_17_1, 
        		"ID");
	    }

    |		lv_id_17_2=RULE_S
		{
			newLeafNode(lv_id_17_2, grammarAccess.getAtomicExpAccess().getIdSTerminalRuleCall_5_3_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_17_2, 
        		"S");
	    }

)

)
))*)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAtomicExpAccess().getAtomicExpAction_6_0(),
            $current);
    }
)	otherlv_19='{' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getAtomicExpAccess().getLeftCurlyBracketKeyword_6_1());
    }
((
(
(
		lv_id_20_1=RULE_ID
		{
			newLeafNode(lv_id_20_1, grammarAccess.getAtomicExpAccess().getIdIDTerminalRuleCall_6_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_20_1, 
        		"ID");
	    }

    |		lv_id_20_2=RULE_S
		{
			newLeafNode(lv_id_20_2, grammarAccess.getAtomicExpAccess().getIdSTerminalRuleCall_6_2_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_20_2, 
        		"S");
	    }

)

)
)	otherlv_21='=' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getAtomicExpAccess().getEqualsSignKeyword_6_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicExpAccess().getExpsExpParserRuleCall_6_2_2_0()); 
	    }
		lv_exps_22_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicExpRule());
	        }
       		add(
       			$current, 
       			"exps",
        		lv_exps_22_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_23=',' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getAtomicExpAccess().getCommaKeyword_6_2_3_0());
    }
(
(
(
		lv_id_24_1=RULE_ID
		{
			newLeafNode(lv_id_24_1, grammarAccess.getAtomicExpAccess().getIdIDTerminalRuleCall_6_2_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_24_1, 
        		"ID");
	    }

    |		lv_id_24_2=RULE_S
		{
			newLeafNode(lv_id_24_2, grammarAccess.getAtomicExpAccess().getIdSTerminalRuleCall_6_2_3_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_24_2, 
        		"S");
	    }

)

)
)	otherlv_25='=' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getAtomicExpAccess().getEqualsSignKeyword_6_2_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicExpAccess().getExpsExpParserRuleCall_6_2_3_3_0()); 
	    }
		lv_exps_26_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicExpRule());
	        }
       		add(
       			$current, 
       			"exps",
        		lv_exps_26_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_27='}' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getAtomicExpAccess().getRightCurlyBracketKeyword_6_3());
    }
)
    |((
(
		lv_name_28_0=	'let' 
    {
        newLeafNode(lv_name_28_0, grammarAccess.getAtomicExpAccess().getNameLetKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_28_0, "let");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicExpAccess().getValDeclValueDeclParserRuleCall_7_1_0()); 
	    }
		lv_valDecl_29_0=ruleValueDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicExpRule());
	        }
       		add(
       			$current, 
       			"valDecl",
        		lv_valDecl_29_0, 
        		"ValueDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_30='in' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getAtomicExpAccess().getInKeyword_7_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicExpAccess().getExprExpParserRuleCall_7_3_0()); 
	    }
		lv_expr_31_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicExpRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_31_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_32='end' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getAtomicExpAccess().getEndKeyword_7_4());
    }
))
;





// Entry rule entryRuleField
entryRuleField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	 iv_ruleField=ruleField 
	 { $current=$iv_ruleField.current; } 
	 EOF 
;

// Rule Field
ruleField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
(
		lv_name_0_1=RULE_ID
		{
			newLeafNode(lv_name_0_1, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"ID");
	    }

    |		lv_name_0_2=RULE_S
		{
			newLeafNode(lv_name_0_2, grammarAccess.getFieldAccess().getNameSTerminalRuleCall_0_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"S");
	    }

)

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFieldAccess().getEqualsSignKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getExpExpParserRuleCall_0_2_0()); 
	    }
		lv_exp_2_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_2_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_3='~' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFieldAccess().getTildeKeyword_1_0());
    }
(
(
(
		lv_name_4_1=RULE_ID
		{
			newLeafNode(lv_name_4_1, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_1, 
        		"ID");
	    }

    |		lv_name_4_2=RULE_S
		{
			newLeafNode(lv_name_4_2, grammarAccess.getFieldAccess().getNameSTerminalRuleCall_1_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_2, 
        		"S");
	    }

)

)
)))
;





// Entry rule entryRuleValueDecl
entryRuleValueDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueDeclRule()); }
	 iv_ruleValueDecl=ruleValueDecl 
	 { $current=$iv_ruleValueDecl.current; } 
	 EOF 
;

// Rule ValueDecl
ruleValueDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='val' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getValueDeclAccess().getValKeyword_0());
    }
(((
(
(
RULE_ID

    |		RULE_S

)

)
)=>
(
(
		lv_name_1_1=RULE_ID
		{
			newLeafNode(lv_name_1_1, grammarAccess.getValueDeclAccess().getNameIDTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_1, 
        		"ID");
	    }

    |		lv_name_1_2=RULE_S
		{
			newLeafNode(lv_name_1_2, grammarAccess.getValueDeclAccess().getNameSTerminalRuleCall_1_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_2, 
        		"S");
	    }

)

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getValueDeclAccess().getNameSYMParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleSYM		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueDeclRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"SYM");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
(
		lv_ids_3_1=RULE_ID
		{
			newLeafNode(lv_ids_3_1, grammarAccess.getValueDeclAccess().getIdsIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueDeclRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"ids",
        		lv_ids_3_1, 
        		"ID");
	    }

    |		lv_ids_3_2=RULE_S
		{
			newLeafNode(lv_ids_3_2, grammarAccess.getValueDeclAccess().getIdsSTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueDeclRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"ids",
        		lv_ids_3_2, 
        		"S");
	    }

)

)
)*	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getValueDeclAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueDeclAccess().getExpExpParserRuleCall_4_0()); 
	    }
		lv_exp_5_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueDeclRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_5_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePAT
entryRulePAT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPATRule()); }
	 iv_rulePAT=rulePAT 
	 { $current=$iv_rulePAT.current; } 
	 EOF 
;

// Rule PAT
rulePAT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_uscore_0_0=RULE_USCORE
		{
			newLeafNode(lv_uscore_0_0, grammarAccess.getPATAccess().getUscoreUSCORETerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPATRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"uscore",
        		lv_uscore_0_0, 
        		"USCORE");
	    }

)
)
    |(((
(
ruleINTEGER
)
))=>(
(
		{ 
	        newCompositeNode(grammarAccess.getPATAccess().getIntINTEGERParserRuleCall_1_0_0()); 
	    }
		lv_int_1_0=ruleINTEGER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPATRule());
	        }
       		set(
       			$current, 
       			"int",
        		lv_int_1_0, 
        		"INTEGER");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((((
(
(
RULE_ID

    |		RULE_S

)

)
)(
(
rulePAT
)
)?))=>((
(
(
		lv_id_2_1=RULE_ID
		{
			newLeafNode(lv_id_2_1, grammarAccess.getPATAccess().getIdIDTerminalRuleCall_2_0_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPATRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_1, 
        		"ID");
	    }

    |		lv_id_2_2=RULE_S
		{
			newLeafNode(lv_id_2_2, grammarAccess.getPATAccess().getIdSTerminalRuleCall_2_0_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPATRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_2, 
        		"S");
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPATAccess().getPatPATParserRuleCall_2_0_1_0()); 
	    }
		lv_pat_3_0=rulePAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPATRule());
	        }
       		set(
       			$current, 
       			"pat",
        		lv_pat_3_0, 
        		"PAT");
	        afterParserOrEnumRuleCall();
	    }

)
)?))
    |(	otherlv_4='\'' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPATAccess().getApostropheKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPATAccess().getBitpatBITPATParserRuleCall_3_1_0()); 
	    }
		lv_bitpat_5_0=ruleBITPAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPATRule());
	        }
       		set(
       			$current, 
       			"bitpat",
        		lv_bitpat_5_0, 
        		"BITPAT");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='\'' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPATAccess().getApostropheKeyword_3_2());
    }
))
;





// Entry rule entryRuleCONS
entryRuleCONS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCONSRule()); }
	 iv_ruleCONS=ruleCONS 
	 { $current=$iv_ruleCONS.current; } 
	 EOF 
;

// Rule CONS
ruleCONS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_conName_0_1=RULE_ID
		{
			newLeafNode(lv_conName_0_1, grammarAccess.getCONSAccess().getConNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCONSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"conName",
        		lv_conName_0_1, 
        		"ID");
	    }

    |		lv_conName_0_2=RULE_S
		{
			newLeafNode(lv_conName_0_2, grammarAccess.getCONSAccess().getConNameSTerminalRuleCall_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCONSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"conName",
        		lv_conName_0_2, 
        		"S");
	    }

)

)
)
;





// Entry rule entryRuleDECODEPAT
entryRuleDECODEPAT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDECODEPATRule()); } 
	 iv_ruleDECODEPAT=ruleDECODEPAT 
	 { $current=$iv_ruleDECODEPAT.current.getText(); }  
	 EOF 
;

// Rule DECODEPAT
ruleDECODEPAT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='\'' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDECODEPATAccess().getApostropheKeyword_0_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getDECODEPATAccess().getBITPATParserRuleCall_0_1()); 
    }
    this_BITPAT_1=ruleBITPAT    {
		$current.merge(this_BITPAT_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)+
	kw='\'' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDECODEPATAccess().getApostropheKeyword_0_2()); 
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getDECODEPATAccess().getTOKPATParserRuleCall_1()); 
    }
    this_TOKPAT_3=ruleTOKPAT    {
		$current.merge(this_TOKPAT_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleTOKPAT
entryRuleTOKPAT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTOKPATRule()); } 
	 iv_ruleTOKPAT=ruleTOKPAT 
	 { $current=$iv_ruleTOKPAT.current.getText(); }  
	 EOF 
;

// Rule TOKPAT
ruleTOKPAT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_HEXINT_0=RULE_HEXINT    {
		$current.merge(this_HEXINT_0);
    }

    { 
    newLeafNode(this_HEXINT_0, grammarAccess.getTOKPATAccess().getHEXINTTerminalRuleCall_0()); 
    }

    |(    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getTOKPATAccess().getIDTerminalRuleCall_1_0()); 
    }

    |    this_S_2=RULE_S    {
		$current.merge(this_S_2);
    }

    { 
    newLeafNode(this_S_2, grammarAccess.getTOKPATAccess().getSTerminalRuleCall_1_1()); 
    }
))
    ;





// Entry rule entryRuleBITPAT
entryRuleBITPAT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBITPATRule()); } 
	 iv_ruleBITPAT=ruleBITPAT 
	 { $current=$iv_ruleBITPAT.current.getText(); }  
	 EOF 
;

// Rule BITPAT
ruleBITPAT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBITPATAccess().getBINARYParserRuleCall_0()); 
    }
    this_BINARY_0=ruleBINARY    {
		$current.merge(this_BINARY_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |((    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getBITPATAccess().getIDTerminalRuleCall_1_0_0()); 
    }

    |    this_S_2=RULE_S    {
		$current.merge(this_S_2);
    }

    { 
    newLeafNode(this_S_2, grammarAccess.getBITPATAccess().getSTerminalRuleCall_1_0_1()); 
    }
)(
    { 
        newCompositeNode(grammarAccess.getBITPATAccess().getBITPATORINTParserRuleCall_1_1()); 
    }
    this_BITPATORINT_3=ruleBITPATORINT    {
		$current.merge(this_BITPATORINT_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?))
    ;





// Entry rule entryRuleBITPATORINT
entryRuleBITPATORINT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBITPATORINTRule()); } 
	 iv_ruleBITPATORINT=ruleBITPATORINT 
	 { $current=$iv_ruleBITPATORINT.current.getText(); }  
	 EOF 
;

// Rule BITPATORINT
ruleBITPATORINT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBITPATORINTAccess().getColonKeyword_0_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getBITPATORINTAccess().getPOSINTParserRuleCall_0_1()); 
    }
    this_POSINT_1=rulePOSINT    {
		$current.merge(this_POSINT_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    |(
	kw='@' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBITPATORINTAccess().getCommercialAtKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getBITPATORINTAccess().getBINARYParserRuleCall_1_1()); 
    }
    this_BINARY_3=ruleBINARY    {
		$current.merge(this_BINARY_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
))
    ;





// Entry rule entryRuleLIT
entryRuleLIT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLITRule()); } 
	 iv_ruleLIT=ruleLIT 
	 { $current=$iv_ruleLIT.current.getText(); }  
	 EOF 
;

// Rule LIT
ruleLIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLITAccess().getINTEGERParserRuleCall_0()); 
    }
    this_INTEGER_0=ruleINTEGER    {
		$current.merge(this_INTEGER_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |(
	kw='\'' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLITAccess().getApostropheKeyword_1_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getLITAccess().getBINARYParserRuleCall_1_1()); 
    }
    this_BINARY_2=ruleBINARY    {
		$current.merge(this_BINARY_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?
	kw='\'' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLITAccess().getApostropheKeyword_1_2()); 
    }
))
    ;





// Entry rule entryRuleMID
entryRuleMID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMIDRule()); } 
	 iv_ruleMID=ruleMID 
	 { $current=$iv_ruleMID.current.getText(); }  
	 EOF 
;

// Rule MID
ruleMID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_MIXID_0=RULE_MIXID    {
		$current.merge(this_MIXID_0);
    }

    { 
    newLeafNode(this_MIXID_0, grammarAccess.getMIDAccess().getMIXIDTerminalRuleCall_0()); 
    }

    |    this_USCORE_1=RULE_USCORE    {
		$current.merge(this_USCORE_1);
    }

    { 
    newLeafNode(this_USCORE_1, grammarAccess.getMIDAccess().getUSCORETerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleSYM
entryRuleSYM returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSYMRule()); } 
	 iv_ruleSYM=ruleSYM 
	 { $current=$iv_ruleSYM.current.getText(); }  
	 EOF 
;

// Rule SYM
ruleSYM returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_USCORE_0=RULE_USCORE    {
		$current.merge(this_USCORE_0);
    }

    { 
    newLeafNode(this_USCORE_0, grammarAccess.getSYMAccess().getUSCORETerminalRuleCall_0()); 
    }

    |    this_BS_1=RULE_BS    {
		$current.merge(this_BS_1);
    }

    { 
    newLeafNode(this_BS_1, grammarAccess.getSYMAccess().getBSTerminalRuleCall_1()); 
    }

    |    this_DOT_2=RULE_DOT    {
		$current.merge(this_DOT_2);
    }

    { 
    newLeafNode(this_DOT_2, grammarAccess.getSYMAccess().getDOTTerminalRuleCall_2()); 
    }

    |    this_LESS_3=RULE_LESS    {
		$current.merge(this_LESS_3);
    }

    { 
    newLeafNode(this_LESS_3, grammarAccess.getSYMAccess().getLESSTerminalRuleCall_3()); 
    }

    |    this_GREATER_4=RULE_GREATER    {
		$current.merge(this_GREATER_4);
    }

    { 
    newLeafNode(this_GREATER_4, grammarAccess.getSYMAccess().getGREATERTerminalRuleCall_4()); 
    }

    |    this_SYM_WO_USCORE_SLASH_BS_DOT_LESS_GREATER_5=RULE_SYM_WO_USCORE_SLASH_BS_DOT_LESS_GREATER    {
		$current.merge(this_SYM_WO_USCORE_SLASH_BS_DOT_LESS_GREATER_5);
    }

    { 
    newLeafNode(this_SYM_WO_USCORE_SLASH_BS_DOT_LESS_GREATER_5, grammarAccess.getSYMAccess().getSYM_WO_USCORE_SLASH_BS_DOT_LESS_GREATERTerminalRuleCall_5()); 
    }
)
    ;





// Entry rule entryRuleINTEGER
entryRuleINTEGER returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getINTEGERRule()); } 
	 iv_ruleINTEGER=ruleINTEGER 
	 { $current=$iv_ruleINTEGER.current.getText(); }  
	 EOF 
;

// Rule INTEGER
ruleINTEGER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getINTEGERAccess().getPOSINTParserRuleCall_0()); 
    }
    this_POSINT_0=rulePOSINT    {
		$current.merge(this_POSINT_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_HEXINT_1=RULE_HEXINT    {
		$current.merge(this_HEXINT_1);
    }

    { 
    newLeafNode(this_HEXINT_1, grammarAccess.getINTEGERAccess().getHEXINTTerminalRuleCall_1()); 
    }

    |    this_NEGINT_2=RULE_NEGINT    {
		$current.merge(this_NEGINT_2);
    }

    { 
    newLeafNode(this_NEGINT_2, grammarAccess.getINTEGERAccess().getNEGINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRulePOSINT
entryRulePOSINT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPOSINTRule()); } 
	 iv_rulePOSINT=rulePOSINT 
	 { $current=$iv_rulePOSINT.current.getText(); }  
	 EOF 
;

// Rule POSINT
rulePOSINT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_POSINT_WO_DUALS_0=RULE_POSINT_WO_DUALS    {
		$current.merge(this_POSINT_WO_DUALS_0);
    }

    { 
    newLeafNode(this_POSINT_WO_DUALS_0, grammarAccess.getPOSINTAccess().getPOSINT_WO_DUALSTerminalRuleCall_0()); 
    }

    |    this_DUALS_1=RULE_DUALS    {
		$current.merge(this_DUALS_1);
    }

    { 
    newLeafNode(this_DUALS_1, grammarAccess.getPOSINTAccess().getDUALSTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleBINARY
entryRuleBINARY returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBINARYRule()); } 
	 iv_ruleBINARY=ruleBINARY 
	 { $current=$iv_ruleBINARY.current.getText(); }  
	 EOF 
;

// Rule BINARY
ruleBINARY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_DUALS_0=RULE_DUALS    {
		$current.merge(this_DUALS_0);
    }

    { 
    newLeafNode(this_DUALS_0, grammarAccess.getBINARYAccess().getDUALSTerminalRuleCall_0()); 
    }

    |    this_BINS_1=RULE_BINS    {
		$current.merge(this_BINS_1);
    }

    { 
    newLeafNode(this_BINS_1, grammarAccess.getBINARYAccess().getBINSTerminalRuleCall_1()); 
    }

    |    this_BS_2=RULE_BS    {
		$current.merge(this_BS_2);
    }

    { 
    newLeafNode(this_BS_2, grammarAccess.getBINARYAccess().getBSTerminalRuleCall_2()); 
    }

    |    this_DOT_3=RULE_DOT    {
		$current.merge(this_DOT_3);
    }

    { 
    newLeafNode(this_DOT_3, grammarAccess.getBINARYAccess().getDOTTerminalRuleCall_3()); 
    }
)
    ;





RULE_USCORE : '_';

RULE_BS : '\\';

RULE_DOT : '.';

RULE_S : 'S';

RULE_LESS : '<';

RULE_GREATER : '>';

RULE_MIXID : '_' (RULE_USCORE|RULE_IDCHAR)*;

RULE_ID : ('A'..'Z'|'a'..'z'|'/') (RULE_USCORE|RULE_IDCHAR)*;

RULE_SYM_WO_USCORE_SLASH_BS_DOT_LESS_GREATER : (RULE_CHARSYM|RULE_OTHERSYM)+;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

fragment RULE_IDCHAR : ('A'..'Z'|'a'..'z'|'/'|'0'..'9'|RULE_CHARSYM);

fragment RULE_CHARSYM : ('-'|'?'|'!');

fragment RULE_OTHERSYM : ('%'|'&'|'$'|'+'|'/'|':'|'<'|'='|'>'|'@'|'~'|'`'|'^'|'|'|'#'|'*'|'\\');

RULE_DUALS : ('0'|'1')+;

RULE_BINS : ('0'|'1'|'\\'|'.'|'|')*;

RULE_POSINT_WO_DUALS : ('0'..'9')+;

RULE_HEXINT : '0x' ('A'..'F'|'a'..'f'|'0'..'9')+;

RULE_NEGINT : '~' ('0'..'9')+;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ML_COMMENT : '(*' ( options {greedy=false;} : . )*'*)';

RULE_SL_COMMENT : '#' ~('\n')* '\n';


