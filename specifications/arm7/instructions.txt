----------------------------------------------------------------
Branching Instructions
----------------------------------------------------------------
b:                [cond 101 0 imm24                            ]
bl (imm):         [cond 101 1 imm24                            ]
blx (imm):        [1111 101 H imm24                            ]
blx (reg):        [cond 000 1 0 0 1 0 1111 1111 1111 0011 Rm   ]
bx:               [cond 000 1 0 0 1 0 1111 1111 1111 0001 Rm   ]
bxj:              [cond 000 1 0 0 1 0 1111 1111 1111 0010 Rm   ]
----------------------------------------------------------------
Standard data-processing instructions
----------------------------------------------------------------
adc (imm):        [cond 000 0 1 0 1 S Rn   Rd   imm12          ]
adc (reg):        [cond 000 0 1 0 1 S Rn   Rd   imm5 type 0 Rm ]
adc (reg+rshift): [cond 000 0 1 0 1 S Rn   Rd   Rs 0 type 1 Rm ]
add (imm):        [cond 001 0 1 0 0 S Rn   Rd   imm12          ]
add (reg):        [cond 000 0 1 0 0 S Rn   Rd   imm5 type 0 Rm ]
add (reg+rshift): [cond 000 0 1 0 0 S Rn   Rd   Rs 0 type 1 Rm ]
add (sp+imm):     [cond 001 0 1 0 0 S 1101 Rd   imm12          ]
add (sp+reg):     [cond 000 0 1 0 0 S 1101 Rd   imm5 type 0 Rm ]
adr (A1):         [cond 001 0 1 0 0 0 1111 Rd   imm12          ]
adr (A2):         [cond 001 0 0 1 0 0 1111 Rd   imm12          ]
and (imm):        [cond 001 0 0 0 0 S Rn   Rd   imm12          ]
and (reg):        [cond 000 0 0 0 0 S Rn   Rd   imm5 type 0 Rm ]
and (reg+rshift): [cond 000 0 0 0 0 S Rn   Rd   Rs 0 type 1 Rm ]
bic (immediate):  [cond 001 1 1 1 0 S Rn   Rd   imm12          ]
bic (reg):        [cond 001 1 1 1 0 S Rn   Rd   imm5 type 0 Rm ]
bic (reg+rshift): [cond 000 1 1 1 0 S Rn   Rd   Rs 0 type 1 Rm ]
cmn (imm):        [cond 001 1 0 1 1 1 Rn   0000 imm12          ]
cmn (reg):        [cond 000 1 0 1 1 1 Rn   0000 imm5 type 0 Rm ]
cmn (reg+rshift): [cond 000 1 0 1 1 1 Rn   0000 Rs 0 type 1 Rm ]
cmp (imm):        [cond 001 1 0 1 0 1 Rn   0000 imm12          ]
cmp (reg):        [cond 000 1 0 1 0 1 Rn   0000 imm5 type 0 Rm ]
cmp (reg+rshift): [cond 000 1 0 1 0 1 Rn   0000 Rs 0 type 1 Rm ]
eor (imm):        [cond 001 0 0 0 1 S Rn   Rd   imm12          ]
eor (reg):        [cond 000 0 0 0 1 S Rn   Rd   imm5 type 0 Rm ]
eor (reg+rshift): [cond 000 0 0 0 1 S Rn   Rd   Rs 0 type 1 Rm ]
mov (imm) (A1):   [cond 001 1 1 0 1 S 0000 Rd   imm12          ]
mov (imm) (A2):   [cond 001 1 0 0 0 0 imm4 Rd   imm12          ]
mov (reg):        [cond 000 1 1 0 1 S 0000 Rd   0000 0000 Rm   ]
mvn (imm):        [cond 001 1 1 1 1 S 0000 Rd   imm12          ]
mvn (reg):        [cond 000 1 1 1 1 S 0000 Rd   imm5 type 0 Rm ]
mvn (reg+rshift): [cond 000 1 1 1 1 S 0000 Rd   Rs 0 type 1 Rm ]
orr (imm):        [cond 001 1 1 0 0 S Rn   Rd   imm12          ]
orr (reg):        [cond 000 1 1 0 0 S Rn   Rd   imm5 type 0 Rm ]
orr (reg+rshift): [cond 000 1 1 0 0 S Rn   Rd   Rs 0 type 1 Rm ]
rsb (imm):        [cond 001 0 0 1 1 S Rn   Rd   imm12          ]
rsb (reg):        [cond 000 0 0 1 1 S Rn   Rd   imm5 type 0 Rm ]
rsb (reg+rshift): [cond 000 0 0 1 1 S Rn   Rd   Rs 0 type 1 Rm ]
rsc (imm):        [cond 001 0 1 1 1 S Rn   Rd   imm12          ]
rsc (reg):        [cond 000 0 1 1 1 S Rn   Rd   imm5 type 0 Rm ]
rsc (reg+rshift): [cond 000 0 1 1 1 S Rn   Rd   Rs 0 type 1 Rm ]
sbc (imm):        [cond 001 0 1 1 0 S Rn   Rd   imm12          ]
sbc (reg):        [cond 000 0 1 1 0 S Rn   Rd   imm5 type 0 Rm ]
sbc (reg+rshift): [cond 000 0 1 1 0 S Rn   Rd   Rs 0 type 1 Rm ]
sub (imm):        [cond 001 0 0 1 0 S Rn   Rd   imm12          ]
sub (reg):        [cond 000 0 0 1 0 S Rn   Rd   imm5 type 0 Rm ]
sub (reg+rshift): [cond 000 0 0 1 0 S Rn   Rd   Rs 0 type 1 Rm ]
sub (sp-imm):     [cond 001 0 0 1 0 S 1101 Rd   imm12          ]
sub (sp-reg):     [cond 000 0 0 1 0 S 1101 Rd   imm5 type 0 Rm ]
teq (imm):        [cond 001 1 0 0 1 1 Rn   0000 imm12          ]
teq (reg):        [cond 000 1 0 0 1 1 Rn   0000 imm5 type 0 Rm ]
teq (reg+rshift): [cond 000 1 0 0 1 1 Rn   0000 Rs 0 type 1 Rm ]
tst (imm):        [cond 001 1 0 0 0 1 Rn   0000 imm12          ]
tst (reg):        [cond 000 1 0 0 0 1 Rn   0000 imm5 type 0 Rm ]
tst (reg+rshift): [cond 000 1 0 0 0 1 Rn   0000 Rs 0 type 1 Rm ]
----------------------------------------------------------------
Shift instructions
----------------------------------------------------------------
asr (imm):        [cond 000 1 1 0 1 S 0000 Rd   imm5 100 Rm ]
asr (reg):        [cond 000 1 1 0 1 S 0000 Rd   Rm 0101 Rn  ]
lsl (imm):        [cond 000 1 1 0 1 S 0000 Rd   imm5 000 Rm ]
lsl (reg):        [cond 000 1 1 0 1 S 0000 Rd   Rm 0001 Rn  ]
lsr (imm):        [cond 000 1 1 0 1 S 0000 Rd   imm5 010 Rm ]
lsr (reg):        [cond 000 1 1 0 1 S 0000 Rd   Rm 0011 Rn  ]
ror (imm):        [cond 000 1 1 0 1 S 0000 Rd   imm5 110 Rm ]
ror (reg):        [cond 000 1 1 0 1 S 0000 Rd   Rm 0111 Rn  ]
rrx:              [cond 000 1 1 0 1 S 0000 Rd   0000 0110 Rm]
----------------------------------------------------------------
Multiply instructions
----------------------------------------------------------------
mla:              [cond 000 0 0 0 1 S Rd   Ra   Rm 1001 Rn]
mls:              [cond 000 0 0 1 1 0 Rd   Ra   Rm 1001 Rn]
mul:              [cond 000 0 0 0 0 S Rd   0000 Rm 1001 Rn]

smlaXY:           [cond 000 1 0 0 0 0 Rd   Ra   Rm 1MN0 Rn]
smlad:            [cond 011 1 0 0 0 0 Rd   Ra   Rm 00M1 Rn]
smlal:            [cond 000 0 1 1 1 S RdHi RdLo Rm 1001 Rn]
smlald:           [cond 011 1 0 1 0 0 RdHi RdLo Rm 00M1 Rn]
smlawX:           [cond 000 1 0 0 1 0 Rd   Ra   Rm 1M00 Rn]
smlsd:            [cond 011 1 0 0 0 0 Rd   Ra   Rm 01M1 Rn]
smlsld:           [cond 011 1 0 1 0 0 RdHi RdLo Rm 01M1 Rn]
smmla:            [cond 011 1 0 1 0 1 Rd   Ra   Rm 00R1 Rn]
smmls:            [cond 011 1 0 1 0 1 Rd   Ra   Rm 11R1 Rn]
smmul:            [cond 011 1 0 1 0 1 Rd   1111 Rm 00R1 Rn]
smuad:            [cond 011 1 0 0 0 0 Rd   1111 Rm 00M1 Rn]
smulXY:           [cond 000 1 0 1 1 0 Rd   0000 Rm 1MN0 Rn]
smull:            [cond 000 0 1 1 0 S RdHi RdLo Rm 1001 Rn]
smulwY:           [cond 000 1 0 0 1 0 Rd   0000 Rm 1M10 Rn]
smusd:            [cond 011 1 0 0 0 0 Rd   1111 Rm 01M1 Rn]

umaal:            [cond 000 0 0 1 0 0 RdHi RdLo Rm 1001 Rn]
umlal:            [cond 000 0 1 0 1 S RdHi RdLo Rm 1001 Rn]
umull:            [cond 000 0 1 0 0 S RdHi RdLo Rm 1001 Rn]
----------------------------------------------------------------
Saturating instructions
----------------------------------------------------------------
ssat:             [cond 011 0 1 0 1 sat_imm Rd imm5 sh 01 Rn]
ssat16:           [cond 011 0 1 0 1 0 sta_imm Rd 1111 0111 Rn]
usat:             [cond 011 0 1 1 1 sta_imm Rd imm5 sh 01 Rn]
usat16:           [cond 011 0 1 1 1 0 sta_imm Rd 1111 0011 Rn]
----------------------------------------------------------------
Load/store instructions
----------------------------------------------------------------
ldr (imm):        [cond 010 P U 0 W 1 Rn   Rt   imm12           ]
ldr (lit):        [cond 010 P U 0 W 1 1111 Rt   imm12           ]
ldr (reg):        [cond 011 P U 0 W 1 Rn   Rt   imm5 type  0 Rm ]
ldrh (imm):       [cond 000 P U 1 W 1 Rn   Rt   imm4H 1011 imm4L]
ldrh (lit):       [cond 000 P U 1 W 1 1111 Rt   imm4H 1011 Imm4L]
ldrh (reg):       [cond 000 P U 0 W 1 Rn   Rt   0000  1011 Rm   ]
ldrsh (imm):      [cond 000 P U 1 W 1 Rn   Rt   imm4H 1111 imm4L]
ldrsh (lit):      [cond 000 P U 1 W 1 1111 Rt   imm4H 1111 imm4L]
ldrsh (reg):      [cond 000 P U 0 W 1 Rn   Rt   0000  1111 Rm   ]
ldrb (imm):       [cond 010 P U 1 W 1 Rn   Rt   imm12           ]
ldrb (lit):       [cond 010 P U 1 W 1 1111 Rt   imm12           ]
ldrb (reg):       [cond 011 P U 1 W 1 Rn   Rt   imm5 type  0 Rm ]
ldrsb (imm):      [cond 000 P U 1 W 1 Rn   Rt   imm4H 1101 imm4L]
ldrsb (lit):      [cond 000 P U 1 W 1 1111 Rt   imm4H 1101 imm4L]
ldrsb (reg):      [cond 000 P U 0 W 1 Rn   Rt   0000  1101 Rm   ]
ldrd (imm):       [cond 000 P U 1 W 0 Rn   Rt   imm4H 1101 imm4L]
ldrd (lit):       [cond 000 1 U 1 0 0 1111 Rt   imm4H 1101 imm4L]
ldrd (reg):       [cond 000 P U 0 W 0 Rn   Rt   0000  1101 Rm   ]

ldrt (A1):        [cond 010 0 U 0 1 1 Rn   Rt   imm12           ]
ldrt (A2):        [cond 011 0 U 0 1 1 Rn   Rt   imm5 type  0 Rm ]
ldrht (A1):       [cond 000 0 U 1 1 1 Rn   Rt   imm4H 1011 imm4L]
ldrht (A2):       [cond 000 0 U 0 1 1 Rn   Rt   0000  1011 Rm   ]
ldrsht (A1):      [cond 000 0 U 0 1 1 Rn   Rt   imm4H 1111 imm4L]
ldrsht (A2):      [cond 000 0 U 0 1 1 Rn   Rt   0000  1111 Rm   ]
ldrbt (A1):       [cond 010 0 U 1 1 1 Rn   Rt   imm12           ]
ldrbt (A2):       [cond 011 0 U 1 1 1 Rn   Rt   imm5 type  0 Rm ]
ldrsbt (A1):      [cond 000 0 U 1 1 1 Rn   Rt   imm4H 1101 imm4L]
ldrsbt (A2):      [cond 000 0 U 0 1 1 Rn   Rt   0000  1101 Rm   ]

ldrex:            [cond 000 1 1 0 0 1 Rn   Rt   1111  1001 1111 ]
ldrexb:           [cond 000 1 1 1 0 1 Rn   Rt   1111  1001 1111 ]
ldrexd:           [cond 000 1 1 0 1 1 Rn   Rt   1111  1001 1111 ]
ldrexh:           [cond 000 1 1 1 1 1 Rn   Rt   1111  1001 1111 ]

ldm:              [cond 100 0 1 0 W 1 Rn   register_list        ]
ldmda:            [cond 100 0 0 0 W 1 Rn   register_list        ]
ldmdb:            [cond 100 1 0 0 W 1 Rn   register_list        ]
ldmib:            [cond 100 1 1 0 W 1 Rn   register_list        ]
pop (A1):         [cond 100 0 1 0 1 1 1101 register_list        ]
pop (A2):         [cond 010 0 1 0 0 1 1101 Rt   0000  0000 0100 ]

str (imm):        [cond 010 P U 0 W 0 Rn   Rt   imm12           ]
str (reg):        [cond 011 P U 0 W 0 Rn   Rt   imm5 type  0 Rm ]
strh (imm):       [cond 000 P U 1 W 0 Rn   Rt   imm4H 1011 imm4L]
strh (reg):       [cond 000 P U 0 W 0 Rn   Rt   0000  1011 Rm   ]
strb (imm):       [cond 010 P U 1 W 0 Rn   Rt   imm12           ]
strb (reg):       [cond 011 P U 1 W 0 Rn   Rt   imm5 type  0 Rm ]
strd (imm):       [cond 000 P U 1 W 0 Rn   Rt   imm4H 1111 imm4L]
strd (reg):       [cond 000 P U 0 W 0 Rn   Rt   0000  1111 Rm   ]

strt (A1):        [cond 010 0 U 0 1 0 Rn   Rt   imm12           ]
strt (A2):        [cond 011 0 U 0 1 0 Rn   Rt   imm5 type  0 Rm ]
strht (A1):       [cond 000 0 U 1 1 0 Rn   Rt   imm4H 1011 imm4L]
strht (A2):       [cond 000 0 U 0 1 0 Rn   Rt   0000  1011 Rm   ]
strbt (A1):       [cond 010 0 U 1 1 0 Rn   Rt   imm12           ]
strbt (A2):       [cond 011 0 U 1 1 0 Rn   Rt   imm5 type  0 Rm ]

strex:            [cond 000 1 1 0 0 0 Rn   Rd   1111  1001 Rt   ]
strexh:           [cond 000 1 1 1 1 0 Rn   Rd   1111  1001 Rt   ]
strexb:           [cond 000 1 1 1 1 0 Rn   Rd   1111  1001 Rt   ]
strexd:           [cond 000 1 1 0 1 0 Rn   Rd   1111  1001 Rt   ]

stm:              [cond 100 0 1 0 W 0 Rn   register_list        ]
stmda:            [cond 100 0 0 0 W 0 Rn   register_list        ]
stddb:            [cond 100 1 0 0 W 0 Rn   register_list        ]
stmib:            [cond 100 1 1 0 W 0 Rn   register_list        ]
push (A1):        [cond 100 1 0 0 1 0 1101 register_list        ]
push (A2):        [cond 010 1 0 0 1 0 1101 Rt   0000  0000 0100 ]

